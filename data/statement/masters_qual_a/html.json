{"html":{"ja":"<span class=\"lang-ja\">\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N\\times N</var> マスの盤面がある。\n一番左上のマスの座標を <var>(0,0)</var> とし、そこから下方向に <var>i</var> マス、右方向に <var>j</var> マス進んだ先のマスの座標を <var>(i,j)</var> とする。\n<var>N\\times N</var> マスの外周は壁で囲われており、マス間にも壁がある場合がある。\n辺を共有する2マスは、間に壁がない時に「隣接マス」であると定義する。(<font color=\"red\">13:15に追記</font>)</p>\n<p>各マス <var>(i,j)</var> には <var>1</var> から <var>N^2</var> の数字 <var>a_{(i,j)}</var> がそれぞれ1つずつ書かれている。\n高橋君と青木君の二人は、グリッド上の好きな初期位置からスタートし、以下の一連の行動を最大で <var>4 N^2</var> 回行う。</p>\n<ol>\n<li>高橋君と青木君の現在位置に書かれている数字を交換したいならば交換する。</li>\n<li>高橋君は自身の現在位置に隣接するマスへ移動したいならば移動する。</li>\n<li>青木君は自身の現在位置に隣接するマスへ移動したいならば移動する。</li>\n</ol>\n<p>一連の行動は <var>1\\rightarrow 2\\rightarrow 3</var> の順で行われ、全体で1回の行動とみなす。\n数字を交換せずに隣接マスへ移動してもよいし、数字の交換後に移動せず同じ位置に留まっても良い。\n二人の現在位置が同じマスとなっても構わない。</p>\n<p>最終的に隣接するマス間の数字が出来るだけ近くなるように二人の行動を決定して欲しい。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>得点</h3><p>隣接するマスのペア全体の集合を <var>E</var> とし、隣接マスの数字の差の二乗和 <var>\\sum_{u,v\\in E}(a_u-a_v)^2</var> を考える。\n初期状態における二乗和の値を <var>D'</var>、最終状態における二乗和の値を <var>D</var> としたとき、以下の得点が得られる。</p>\n<p>\\[\n\\max\\left(1, \\mathrm{round}\\left(10^6\\times \\log_2\\frac{D'}{D}\\right)\\right)\n\\]</p>\n<p>下記で述べる <var>t</var> の値毎に <var>10</var> 個ずつ、合計で 200 個のテストケースがあり、各テストケースの得点の合計が提出の得点となる。\n<var>t</var> の値毎に別のテストセット(<code>test_t</code>)に別れており、不正な出力や制限時間超過をした場合、対応するテストセットのみが <var>0</var> 点となる。\nコンテスト時間中に得た最高得点で最終順位が決定され、コンテスト終了後のシステムテストは行われない。 同じ得点を複数の参加者が得た場合、提出時刻に関わらず同じ順位となる。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>t</var> <var>N</var>\n<var>v_{0,0} \\cdots v_{0,N-2}</var>\n<var>\\vdots</var>\n<var>v_{N-1,0} \\cdots v_{N-1,N-2}</var>\n<var>h_{0,0}\\cdots h_{0,N-1}</var>\n<var>\\vdots</var>\n<var>h_{N-2,0} \\cdots h_{N-2,N-1}</var>\n<var>a_{0,0}</var> <var>\\cdots</var> <var>a_{0,N-1}</var>\n<var>\\vdots</var>\n<var>a_{N-1,0}</var> <var>\\cdots</var> <var>a_{N-1,N-1}</var>\n</pre>\n\n<ul>\n<li><var>t</var> は入力の生成方法を表す整数で、<var>0\\leq t\\leq 19</var> を満たす。詳細は入力生成方法の欄を参照せよ。</li>\n<li>盤面の大きさ <var>N</var> は <var>10\\leq N\\leq 100</var> を満たす。</li>\n<li><var>v_{i,0}\\cdots v_{i,N-2}</var> は <code>0</code> と <code>1</code> からなる <var>N-1</var> 文字の文字列であり、<var>v_{i,j}=1</var> であればマス <var>(i,j)</var> とその右隣のマス <var>(i,j+1)</var> の間に壁があり、<var>v_{i,j}=0</var> であれば壁がないことを表す。</li>\n<li><var>h_{i,0}\\cdots h_{i,N-1}</var> は <code>0</code> と <code>1</code> からなる <var>N</var> 文字の文字列であり、<var>h_{i,j}=1</var> であればマス <var>(i,j)</var> とその下隣のマス <var>(i+1,j)</var> の間に壁があり、<var>h_{i,j}=0</var> であれば壁がないことを表す。</li>\n<li>全てのマスは互いに到達可能であることが保証されている。</li>\n<li><var>a_{i,j}</var> は初期状態でマス <var>(i,j)</var> に書かれている数字を表し、<var>1\\leq a_{i,j}\\leq N^2</var> を満たす。</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>まず初めに、高橋君の初期位置 <var>(p_i,p_j)</var> と青木君の初期位置 <var>(q_i,q_j)</var> を決め、以下の形式で一行で標準出力に出力せよ。</p>\n<pre><var>p_i</var> <var>p_j</var> <var>q_i</var> <var>q_j</var>\n</pre>\n\n<p>初期位置は盤面の範囲内であれば、自由に決めて良い。</p>\n<p>続いて、全体で <var>k</var> 回の行動を行う場合、1回の行動毎に以下の形式で1行に3文字を空白区切りで、合計 <var>k</var> 行を標準出力に出力せよ。</p>\n<pre><var>s</var> <var>d</var> <var>e</var>\n</pre>\n\n<ul>\n<li><var>s</var> は数字の交換を行うかどうかを表す文字で、交換する場合は <code>1</code> 、しない場合は <code>0</code> である。</li>\n<li><var>d</var> は高橋君の移動先を表す文字で、上下左右に隣接するマスに移動する場合は、それぞれ <code>U</code> <code>D</code> <code>L</code> <code>R</code>、移動せず現在位置にとどまる場合は <code>.</code> である。</li>\n<li><var>e</var> は青木君の移動先を表す文字で、高橋君の場合と同様である。</li>\n</ul>\n<p>移動先との間に壁がある場合や、行動回数が <var>4 N^2</var> 回を超えた場合は <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"不正解\">WA</span> と判定される。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>入力生成方法</h3><p><b><font color=\"red\">\n入力のうちの <var>a</var> を除いた部分は、入力を生成する seed 値を 20 で割った余り <var>t</var> に応じて固定であり、下記にリンクがある入力ジェネレータに含まれる <code>in_fixed/t.txt</code> がそのまま使われる。\nテストケースには各 <var>t\\in \\{0,1,\\cdots,19\\}</var> の入力がそれぞれちょうど 10 個ずつ含まれる。\n</font></b></p>\n<p>各マスの数字 <var>a_{i,j}</var> は <var>1</var> から <var>N^2</var> の値をランダムに並び替えることにより生成される。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>ツール(入力ジェネレータ・スコア計算プログラム)</h3><ul>\n<li><a href=\"https://img.atcoder.jp/masters-qual/ak2uQT08.zip\">ソースコード</a>: 使用するには<a href=\"https://www.rust-lang.org/ja\">Rust言語</a>のコンパイル環境をご用意下さい。<ul>\n<li><a href=\"https://img.atcoder.jp/masters-qual/ak2uQT08_windows.zip\">Windows用のコンパイル済みバイナリ</a>: Rust言語の環境構築が面倒な方は代わりにこちらをご利用下さい。</li>\n</ul>\n</li>\n</ul>\n<p>コンテスト期間中に、チーム外とのビジュアライズ結果の共有や解法・考察に関する言及は禁止されています。ご注意下さい。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre style=\"max-height:200px;overflow-y:scroll\">0 10\n000100001\n000100001\n000100001\n000100000\n001000010\n001000010\n001000010\n001000000\n000000000\n000000000\n0111111100\n1100000000\n0000000000\n1110000000\n0000000111\n0000000000\n0000111100\n0000000000\n0000000000\n2 47 60 6 76 72 52 90 19 77\n42 59 7 45 17 80 71 55 65 75\n16 21 35 9 15 95 50 91 54 20\n34 39 10 38 69 99 63 92 14 87\n36 89 41 81 97 78 56 30 68 98\n82 67 40 73 58 26 53 33 100 74\n4 12 28 64 31 37 62 24 70 93\n27 61 83 94 25 32 5 88 85 46\n29 13 8 86 66 57 44 23 48 11\n22 49 84 18 79 1 96 43 3 51\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre style=\"max-height:200px;overflow-y:scroll\">0 0 0 1\n0 . R\n1 D L\n0 R .\n0 R .\n1 R L\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There is an <var>N\\times N</var> square board.\nLet <var>(0, 0)</var> be the coordinates of the top-left square, and <var>(i, j)</var> be the coordinates of the square located <var>i</var> squares down and <var>j</var> squares to the right from there.\nThe perimeter of the <var>N\\times N</var> board is surrounded by walls, and there may also be walls between squares.\nTwo squares that share an edge are defined as \"adjacent squares\" when there is no wall between them. (<font color=\"red\">added at 13:15 JST</font>)</p>\n<p>Each square <var>(i,j)</var> has a unique number <var>a_{(i,j)}</var> from <var>1</var> to <var>N^2</var>.\nStarting from their favorite initial position on the grid, Takahashi and Aoki perform the following sequence of actions at most <var>4 N^2</var> steps.</p>\n<ol>\n<li>The numbers on Takahashi's and Aoki's current positions can be exchanged if they want to.</li>\n<li>Takahashi can move to a square adjacent to his current position if he wants to.</li>\n<li>Aoki can move to a square adjacent to his current position if he wants to.</li>\n</ol>\n<p>The sequence of actions is performed in the order <var>1\\rightarrow 2\\rightarrow 3</var>, and the entire sequence is considered as a single step.\nThey may move to adjacent squares without exchanging numbers, or they may stay in the same square after exchanging numbers.\nIt is also acceptable that their current positions are in the same square.</p>\n<p>Please determine their actions so that the final numbers between adjacent squares are as close as possible.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Scoring</h3><p>Let <var>E</var> be the set of whole pairs of adjacent squares, and consider the sum of squares of the differences of numbers in adjacent squares <var>\\sum_{u,v\\in E}(a_u-a_v)^2</var>.\nLet <var>D'</var> be the sum of squares in the initial state and <var>D</var> be the sum of squares in the final state.\nThen, you will obtain the following score.</p>\n<p>\\[\n\\max\\left(1, \\mathrm{round}\\left(10^6\\times \\log_2\\frac{D'}{D}\\right)\\right)\n\\]</p>\n<p>There are 200 test cases in total, <var>10</var> for each <var>t</var> value described below, and the sum of the scores for each test case is the score for the submission.\nThe test cases are separated into distinct test sets (<code>test_t</code>) for each <var>t</var> value, and in case of incorrect output or exceeding the time limit, only the corresponding test set will be scored <var>0</var>.\nThe highest score obtained during the contest will determine the final ranking, and there will be no system test after the contest.\nIf more than one participant gets the same score, they will be ranked in the same place regardless of the submission time.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format.</p>\n<pre><var>t</var> <var>N</var>\n<var>v_{0,0} \\cdots v_{0,N-2}</var>\n<var>\\vdots</var>\n<var>v_{N-1,0} \\cdots v_{N-1,N-2}</var>\n<var>h_{0,0}\\cdots h_{0,N-1}</var>\n<var>\\vdots</var>\n<var>h_{N-2,0} \\cdots h_{N-2,N-1}</var>\n<var>a_{0,0}</var> <var>\\cdots</var> <var>a_{0,N-1}</var>\n<var>\\vdots</var>\n<var>a_{N-1,0}</var> <var>\\cdots</var> <var>a_{N-1,N-1}</var>\n</pre>\n\n<ul>\n<li><var>t</var> is an integer representing the input generation method, satisfying <var>0\\leq t\\leq 19</var>. See the Input Generation section for details.</li>\n<li><var>N</var> is the horizontal and vertical size of the board and satisfies <var>10\\leq N\\leq 100</var>.</li>\n<li><var>v_{i,0}\\cdots v_{i,N-2}</var> is a string of length <var>N-1</var> consisting of only <code>0</code> and <code>1</code>. <var>v_{i,j}=1</var> if and only if there is a wall between square <var>(i,j)</var> and its right neighbor <var>(i,j+1)</var>.</li>\n<li><var>h_{i,0}\\cdots h_{i,N-1}</var> is a string of length <var>N</var> consisting of only <code>0</code> and <code>1</code>. <var>h_{i,j}=1</var> if and only if there is a wall between square <var>(i,j)</var> and its lower neighbor <var>(i+1,j)</var>.</li>\n<li>All squares are guaranteed to be reachable each other.</li>\n<li><var>a_{i,j}</var> denotes the number initially written in the square <var>(i,j)</var>, and satisfies <var>1\\leq a_{i,j}\\leq N^2</var>.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>First, determine Takahashi's initial position <var>(p_i,p_j)</var> and Aoki's initial position <var>(q_i,q_j)</var>, and output them in the following format in a single line to Standard Output.</p>\n<pre><var>p_i</var> <var>p_j</var> <var>q_i</var> <var>q_j</var>\n</pre>\n\n<p>The initial position may be determined freely as long as it is on the board.</p>\n<p>Let <var>k</var> be the total number of steps.\nFor each step, output to Standard Output three characters separated by spaces as in the following format, resulting in a total of <var>k</var> lines.</p>\n<pre><var>s</var> <var>d</var> <var>e</var>\n</pre>\n\n<ul>\n<li><var>s</var> is a character indicating whether or not the numbers are exchanged, <code>1</code> if so and <code>0</code> if not.</li>\n<li><var>d</var> is a character indicating the direction of Takahashi's movement, <code>U</code> <code>D</code> <code>L</code> <code>R</code> to move to the adjacent squares up, down, left, or right, respectively, or <code>.</code> if he does not move and stays at the current position.</li>\n<li><var>e</var> is the character indicating the direction of Aoki's movement, the same as in the case of Takahashi.</li>\n</ul>\n<p>If there is a wall between him and the destination, or if the number of steps exceeds <var>4 N^2</var>, the submission will be judged as <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Wrong Answer\">WA</span>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Input Generation</h3><p><b><font color=\"red\">\nThe part of the input, excluding <var>a</var>, is fixed depending on the remainder <var>t</var> obtained by dividing the seed value that generates the input by 20, and the contents of <code>in_fixed/t.txt</code> contained in the input generator linked below are used as is.\nThe test case contains exactly 10 inputs for each <var>t\\in \\{0,1,\\cdots,19\\}</var>.\n</font></b></p>\n<p>The number <var>a_{i,j}</var> in each square is generated by randomly shuffling the values from <var>1</var> to <var>N^2</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Tools (Input generator and visualizer)</h3><ul>\n<li><a href=\"https://img.atcoder.jp/masters-qual/ak2uQT08.zip\">Source code</a>: You need a compilation environment of <a href=\"https://www.rust-lang.org/\">Rust language</a>.<ul>\n<li><a href=\"https://img.atcoder.jp/masters-qual/ak2uQT08_windows.zip\">Pre-compiled binary for Windows</a>: If you are not familiar with the Rust language environment, please use this instead.</li>\n</ul>\n</li>\n</ul>\n<p>Please be aware that sharing visualization results or discussing solutions/ideas outside of the team during the contest is prohibited.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre style=\"max-height:200px;overflow-y:scroll\">0 10\n000100001\n000100001\n000100001\n000100000\n001000010\n001000010\n001000010\n001000000\n000000000\n000000000\n0111111100\n1100000000\n0000000000\n1110000000\n0000000111\n0000000000\n0000111100\n0000000000\n0000000000\n2 47 60 6 76 72 52 90 19 77\n42 59 7 45 17 80 71 55 65 75\n16 21 35 9 15 95 50 91 54 20\n34 39 10 38 69 99 63 92 14 87\n36 89 41 81 97 78 56 30 68 98\n82 67 40 73 58 26 53 33 100 74\n4 12 28 64 31 37 62 24 70 93\n27 61 83 94 25 32 5 88 85 46\n29 13 8 86 66 57 44 23 48 11\n22 49 84 18 79 1 96 43 3 51\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre style=\"max-height:200px;overflow-y:scroll\">0 0 0 1\n0 . R\n1 D L\n0 R .\n0 R .\n1 R L\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/masters-qual/tasks/masters_qual_a"}