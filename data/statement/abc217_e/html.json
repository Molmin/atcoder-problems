{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>500</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>空の列 <var>A</var> があります。クエリが <var>Q</var> 個与えられるので、与えられた順番に処理してください。<br>\nクエリは次の <var>3</var> 種類のいずれかです。</p>\n<ul>\n<li><code>1 x</code> : <var>A</var> の最後尾に <var>x</var> を追加する。</li>\n<li><code>2</code> : <var>A</var> の最初の要素を出力する。その後、その要素を削除する。このクエリが与えられるとき、<var>A</var> は空でないことが保証される。</li>\n<li><code>3</code> : <var>A</var> を昇順にソートする。</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq Q \\leq 2 \\times 10^5</var></li>\n<li><var>0 \\leq x \\leq 10^9</var></li>\n<li>クエリ <code>2</code> が与えられるとき、<var>A</var> は空でない。</li>\n<li>入力は全て整数である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>Q</var>\n<var>\\mathrm{query} 1</var>\n<var>\\mathrm{query} 2</var>\n<var>\\vdots</var>\n<var>\\mathrm{query} Q</var>\n</pre>\n<p><var>i</var> 番目のクエリ <var>\\mathrm{query} i</var> では、まずクエリの種類 <var>c_i</var>（ <var>1, 2, 3</var> のいずれか）が与えられる。\n<var>c_i = 1</var> の場合はさらに整数 <var>x</var> が追加で与えられる。</p>\n<p>すなわち、各クエリは以下に示す <var>3</var> つの形式のいずれかである。</p>\n<pre><var>1</var> <var>x</var>\n</pre>\n<pre><var>2</var>\n</pre>\n<pre><var>3</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>c_i = 2</var> を満たすクエリの回数を <var>q</var> として <var>q</var> 行出力せよ。<br>\n<var>j</var> <var>(1 \\leq j \\leq q)</var> 行目では <var>j</var> 番目のそのようなクエリに対する答えを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>8\n1 4\n1 3\n1 2\n1 1\n3\n2\n1 0\n2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1\n2\n</pre>\n<p>入力例 <var>1</var> において、 <var>i</var> 番目のクエリを処理した後の <var>A</var> の状態を <var>i</var> 行目に示すと以下のようになります。</p>\n<ul>\n<li><var>(4)</var></li>\n<li><var>(4, 3)</var></li>\n<li><var>(4, 3, 2)</var></li>\n<li><var>(4, 3, 2, 1)</var></li>\n<li><var>(1, 2, 3, 4)</var></li>\n<li><var>(2, 3, 4)</var></li>\n<li><var>(2, 3, 4, 0)</var></li>\n<li><var>(3, 4, 0)</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>9\n1 5\n1 5\n1 3\n2\n3\n2\n1 6\n3\n2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>5\n3\n5\n</pre>\n<p>入力例 <var>2</var> において、 <var>i</var> 番目のクエリを処理した後の <var>A</var> の状態を <var>i</var> 行目に示すと以下のようになります。</p>\n<ul>\n<li><var>(5)</var></li>\n<li><var>(5, 5)</var></li>\n<li><var>(5, 5, 3)</var></li>\n<li><var>(5, 3)</var></li>\n<li><var>(3, 5)</var></li>\n<li><var>(5)</var></li>\n<li><var>(5, 6)</var></li>\n<li><var>(5, 6)</var></li>\n<li><var>(6)</var></li>\n</ul></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>500</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>We have an empty sequence <var>A</var>. You will be given <var>Q</var> queries, which should be processed in the order they are given.\nEach query is of one of the three kinds below:</p>\n<ul>\n<li><code>1 x</code> : Append <var>x</var> to the end of <var>A</var>.</li>\n<li><code>2</code> : Print the element at the beginning of <var>A</var>. Then, delete that element. It is guaranteed that <var>A</var> will not empty when this query is given.</li>\n<li><code>3</code> : Sort <var>A</var> in ascending order.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq Q \\leq 2 \\times 10^5</var></li>\n<li><var>0 \\leq x \\leq 10^9</var></li>\n<li><var>A</var> will not be empty when a query <code>2</code> is given.</li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>Q</var>\n<var>\\mathrm{query} 1</var>\n<var>\\mathrm{query} 2</var>\n<var>\\vdots</var>\n<var>\\mathrm{query} Q</var>\n</pre>\n<p>The <var>i</var>-th query, <var>\\mathrm{query} i</var>, begins with the kind of query <var>c_i</var> (<var>1</var>, <var>2</var>, or <var>3</var>).\nIf <var>c_i = 1</var>, the line additionally has an integer <var>x</var>.</p>\n<p>In other words, each query is in one of the three formats below.</p>\n<pre><var>1</var> <var>x</var>\n</pre>\n<pre><var>2</var>\n</pre>\n<pre><var>3</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print <var>q</var> lines, where <var>q</var> is the number of queries with <var>c_i = 2</var>.<br>\nThe <var>j</var>-th line <var>(1 \\leq j \\leq q)</var> should contain the response for the <var>j</var>-th such query.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>8\n1 4\n1 3\n1 2\n1 1\n3\n2\n1 0\n2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1\n2\n</pre>\n<p>The <var>i</var>-th line below shows the contents of <var>A</var> after the <var>i</var>-th query is processed in Sample Input <var>1</var>.</p>\n<ul>\n<li><var>(4)</var></li>\n<li><var>(4, 3)</var></li>\n<li><var>(4, 3, 2)</var></li>\n<li><var>(4, 3, 2, 1)</var></li>\n<li><var>(1, 2, 3, 4)</var></li>\n<li><var>(2, 3, 4)</var></li>\n<li><var>(2, 3, 4, 0)</var></li>\n<li><var>(3, 4, 0)</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>9\n1 5\n1 5\n1 3\n2\n3\n2\n1 6\n3\n2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>5\n3\n5\n</pre>\n<p>The <var>i</var>-th line below shows the contents of <var>A</var> after the <var>i</var>-th query is processed in Sample Input <var>2</var>.</p>\n<ul>\n<li><var>(5)</var></li>\n<li><var>(5, 5)</var></li>\n<li><var>(5, 5, 3)</var></li>\n<li><var>(5, 3)</var></li>\n<li><var>(3, 5)</var></li>\n<li><var>(5)</var></li>\n<li><var>(5, 6)</var></li>\n<li><var>(5, 6)</var></li>\n<li><var>(6)</var></li>\n</ul></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc217/tasks/abc217_e"}