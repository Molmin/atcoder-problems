{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>500</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点 <var>M</var> 辺の無向グラフが与えられます。\n頂点は頂点 <var>1</var> ,頂点 <var>2</var> , <var>\\ldots</var> ,頂点 <var>N</var>、辺は辺 <var>1</var> ,辺 <var>2</var> , <var>\\ldots</var> ,辺 <var>M</var> と番号付けられており、特に辺 <var>i</var> <var>(1 \\leq i \\leq M)</var> は頂点 <var>U_i</var> と頂点 <var>V_i</var> を結んでいます。\nまた、このグラフは単純であることが保証されます。すなわち、自己ループや多重辺は存在しません。</p>\n<p>このグラフの <var>M</var> 本の辺すべてに向き付けをする方法は <var>2^M</var> 通り考えられますが、\n そのうち、どの頂点についても、その頂点から他の頂点に向かう辺がちょうど <var>1</var> 本ずつ存在するような向き付けの方法は何通りありますか。\n 答えは非常に大きくなる可能性があるので、<var>998244353</var> で割った余りを出力してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 2\\times 10^5</var></li>\n<li><var>1 \\leq M \\leq 2\\times 10^5</var></li>\n<li><var>1 \\leq U_i,V_i \\leq N</var></li>\n<li><var>U_i \\neq V_i</var></li>\n<li>入力は全て整数である。</li>\n<li>与えられるグラフは単純である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>U_1</var> <var>V_1</var>\n<var>U_2</var> <var>V_2</var>\n<var>\\vdots</var>\n<var>U_M</var> <var>V_M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>答えを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 3\n1 2\n1 3\n2 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>2\n</pre>\n<p>条件をみたす辺の向き付けの方法は、</p>\n<ul>\n<li><var>1\\rightarrow 2</var> , <var>2\\rightarrow 3</var> , <var>1\\leftarrow 3</var></li>\n<li><var>1\\leftarrow 2</var> , <var>2\\leftarrow 3</var> , <var>1\\rightarrow 3</var></li>\n</ul>\n<p>の <var>2</var> 通りです。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>2 1\n1 2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>0\n</pre>\n<p>すべての頂点から <var>1</var> 本ずつ辺が出ているようにすることは明らかに不可能です。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>7 7\n1 2\n2 3\n3 4\n4 2\n5 6\n6 7\n7 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>4\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>500</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Given is an undirected graph with <var>N</var> vertices and <var>M</var> edges.\nThe vertices are called Vertex <var>1</var>, Vertex <var>2</var>, <var>\\ldots</var>, Vertex <var>N</var>, and the edges are called Edge <var>1</var>, Edge <var>2</var>, <var>\\ldots</var>, Edge <var>M</var>. Edge <var>i</var> <var>(1 \\leq i \\leq M)</var> connects Vertex <var>U_i</var> and Vertex <var>V_i</var>.\nIt is guaranteed that the graph is simple: it has no self-loops and no multi-edges.</p>\n<p>There are <var>2^M</var> ways to direct every edge in this graph. We want each vertex to have exactly one edge going from that vertex to another vertex. How many ways are there to direct the edges in that way? Since the answer may be enormous, print it modulo <var>998244353</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 2\\times 10^5</var></li>\n<li><var>1 \\leq M \\leq 2\\times 10^5</var></li>\n<li><var>1 \\leq U_i,V_i \\leq N</var></li>\n<li><var>U_i \\neq V_i</var></li>\n<li>All values in input are integers.</li>\n<li>The given graph is simple.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>U_1</var> <var>V_1</var>\n<var>U_2</var> <var>V_2</var>\n<var>\\vdots</var>\n<var>U_M</var> <var>V_M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the answer.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 3\n1 2\n1 3\n2 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>2\n</pre>\n<p>There are two ways to direct the edges to achieve the objective:</p>\n<ul>\n<li><var>1\\rightarrow 2</var> , <var>2\\rightarrow 3</var> , <var>1\\leftarrow 3</var></li>\n<li><var>1\\leftarrow 2</var> , <var>2\\leftarrow 3</var> , <var>1\\rightarrow 3</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>2 1\n1 2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>0\n</pre>\n<p>It is obviously impossible to make every vertex have one edge going from that vertex.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>7 7\n1 2\n2 3\n3 4\n4 2\n5 6\n6 7\n7 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>4\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc226/tasks/abc226_e"}