{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>300</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>英小文字からなる文字列 <var>S</var> が与えられます．\nすぬけくんは，<var>S</var> の<strong>隣り合う</strong> <var>2</var> 文字をスワップするという操作を行うことができます．\n例えば，<var>S=</var><code>agc</code> なら，<var>1</var> 回の操作で，<var>S</var> を <code>gac</code> (<code>a</code> と <code>g</code> をスワップ) もしくは <code>acg</code> (<code>g</code> と <code>c</code> をスワップ) に変換できます．</p>\n<p>すぬけくんはこの操作を <var>0</var> 回以上繰り返し，\n辞書順で <code>atcoder</code> <var>&lt;S</var> となるようにしたいです．</p>\n<details><summary>辞書順で <var>x&lt; y</var> の定義</summary><p>\n\n文字列 <var>x,y</var> が辞書順で <var>x&lt; y</var> であるとは，以下のうちいずれかの条件を満たすことを意味します．\n\n</p><ul>\n<li> ある整数 <var>i</var> (<var>1 \\leq i \\leq \\mathrm{min}(|x|,|y|)</var>) が存在して，<var>x,y</var> は先頭の <var>i-1</var> 文字が一致しており，かつ，\n<var>x</var> の <var>i</var> 文字目は <var>y</var> の <var>i</var> 文字目よりアルファベット順で真に小さい．</li>\n<li> <var>|x|&lt; |y|</var> であり，<var>y</var> の先頭の <var>|x|</var> 文字は <var>x</var> と等しい．</li>\n</ul>\n\n<p></p></details>\n\n<p>目標が達成可能かどうか判定し，可能な場合は必要な操作回数の最小値を求めてください．</p>\n<p><var>1</var> つの入力ファイルにつき，<var>T</var> 個のテストケースを解いてください．</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq T \\leq 100</var></li>\n<li><var>1 \\leq |S| \\leq 1000</var></li>\n<li><var>S</var> は英小文字からなる文字列．</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる．\n入力の <var>1</var> 行目は以下のとおりである．</p>\n<pre><var>T</var>\n</pre>\n\n<p>そして，<var>T</var> 個のテストケースが続く．\nこれらはそれぞれ以下の形式で与えられる．</p>\n<pre><var>S</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>各テストケースについて，目標が達成不可能な場合は <var>-1</var>，可能な場合は必要な操作回数の最小値を出力せよ．\n各テストケースごとに改行せよ．</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3\natcodeer\ncodeforces\naaa\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1\n0\n-1\n</pre>\n\n<ul>\n<li><var>1</var> 番目のテストケース: 例えば，末尾の <var>2</var> 文字をスワップすることで，<var>S=</var><code>atcodere</code> <var>&gt;</var> <code>atcoder</code> となります．</li>\n<li><var>2</var> 番目のテストケース: 操作を行うまでもなく，<var>S=</var><code>codeforces</code> <var>&gt;</var> <code>atcoder</code> です．</li>\n<li><var>3</var> 番目のテストケース: どのように操作を行っても <var>S&gt;</var> <code>atcoder</code> にはなりません．</li>\n</ul></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>300</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Given is a string <var>S</var> consisting of lowercase English letters.\nSnuke can do the operation of swapping two <strong>adjacent</strong> characters in <var>S</var>.\nFor example, if <var>S=</var><code>agc</code>, one operation can change it to <code>gac</code> (by swapping <code>a</code> and <code>g</code>) or <code>acg</code> (by swapping <code>g</code> and <code>c</code>).</p>\n<p>Snuke wants to do this operation zero or more times so that <code>atcoder</code> <var>&lt;S</var> holds lexicographically.</p>\n<details><summary>The definition of the lexicographic relation <var>x&lt; y</var></summary><p>\n\nFor strings <var>x</var> and <var>y</var>, it is said that <var>x&lt; y</var> holds lexicographically if and only if one of the following conditions is satisfied:\n\n</p><ul>\n<li> There exists an integer <var>i</var> (<var>1 \\leq i \\leq \\mathrm{min}(|x|,|y|)</var>) such that the first <var>i-1</var> characters of <var>x</var> and those of <var>y</var> are equal and the <var>i</var>-th character of <var>x</var> is strictly smaller than that of <var>y</var> in alphabetical order.</li>\n<li> <var>|x|&lt; |y|</var> holds, and the first <var>|x|</var> characters of <var>y</var> are equal to <var>x</var>.</li>\n</ul>\n\n<p></p></details>\n\n<p>Determine whether the objective is achievable. If it is achievable, find the minimum number of operations needed.</p>\n<p>Solve <var>T</var> test cases in an input file.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq T \\leq 100</var></li>\n<li><var>1 \\leq |S| \\leq 1000</var></li>\n<li><var>S</var> is a string consisting of lowercase English letters.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format.\nThe first line of input is as follows:</p>\n<pre><var>T</var>\n</pre>\n\n<p>Then, <var>T</var> test cases follow, each of which is in the following format:</p>\n<pre><var>S</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>For each test case, print <var>-1</var> if the objective is unachievable, and print the minimum number of operations needed if it is achievable.\nUse one line for each case.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3\natcodeer\ncodeforces\naaa\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1\n0\n-1\n</pre>\n\n<ul>\n<li>The first test case: for example, swapping the last two characters makes <var>S=</var><code>atcodere</code> <var>&gt;</var> <code>atcoder</code> hold.</li>\n<li>The second test case: before doing any operation, we already have <var>S=</var><code>codeforces</code> <var>&gt;</var> <code>atcoder</code>.</li>\n<li>The third test case: no sequence of operations makes <var>S&gt;</var> <code>atcoder</code> hold.</li>\n</ul></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc048/tasks/agc048_a"}