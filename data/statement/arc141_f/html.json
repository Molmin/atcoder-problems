{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1100</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><code>A</code>, <code>B</code>, <code>C</code>, <code>D</code> のみからなる <var>N</var> 個の文字列 <var>S_i\\ (1\\le i \\le N)</var> が与えられます。</p>\n<p><code>A</code>, <code>B</code>, <code>C</code>, <code>D</code> のみからなる文字列 <var>T</var> に対し、以下の操作を考えます。</p>\n<ul>\n<li>どの <var>S_i</var> も <var>T</var> の部分文字列にならなくなるまで、以下を繰り返す。<ul>\n<li><var>S_i,</var> および <var>T</var> が <var>S_i</var> を含む場所をひとつ選び、その場所から <var>S_i</var> を取り除いて前後を連結する</li>\n</ul>\n</li>\n</ul>\n<details> <summary> 部分文字列とは？</summary>\n部分文字列とは連続する部分列のことを指します。例えば <code>A</code>, <code>AB</code>, <code>BC</code> は <code>ABC</code> の部分文字列ですが、<code>BA</code> や <code>AC</code> は <code>ABC</code> の部分文字列ではありません。\n</details>\n\n<p><var>T</var> が「悪い文字列」であるとは、<var>T</var> に対する操作結果として得られる文字列が複数存在することをいいます。</p>\n<p>「悪い文字列」が存在するか判定してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq N \\leq 10^6</var></li>\n<li><var>1 \\leq |S_i| \\leq 2 \\times 10^6</var></li>\n<li><var>|S_1|+|S_2|+\\dots +|S_N| \\leq 2 \\times 10^6</var></li>\n<li><var>i\\neq j</var> ならば <var>S_i \\neq S_j</var></li>\n<li><var>S_i</var> は<code>A</code>, <code>B</code>, <code>C</code>, <code>D</code> のみからなる文字列</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられます。</p>\n<pre><var>N</var>\n<var>S_1</var>\n<var>S_2</var>\n<var>\\vdots</var>\n<var>S_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>「悪い文字列」が存在する場合、 <code>Yes</code> と出力してください。</p>\n<p>存在しない場合、 <code>No</code> と出力してください。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3\nA\nB\nC\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>No\n</pre>\n\n<p><var>T</var> に対する操作結果として得られる文字列は <var>T</var> から <code>A</code>, <code>B</code>, <code>C</code> をすべて除いたもののみです。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>1\nABA\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>Yes\n</pre>\n\n<p>例えば <var>T=</var><code>ABABA</code> に対する操作の結果として得られる文字列は <code>AB</code>, <code>BA</code> の <var>2</var> つあるので <var>T</var> は「悪い文字列」です。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>4\nCBA\nACB\nAD\nCAB\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>Yes\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1100</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given <var>N</var> srings <var>S_i\\ (1\\le i \\le N)</var> consisting of <code>A</code>, <code>B</code>, <code>C</code>, <code>D</code>.</p>\n<p>Consider the operation below on a string <var>T</var> consisting of <code>A</code>, <code>B</code>, <code>C</code>, <code>D</code>.</p>\n<ul>\n<li>Repeat the following until <var>T</var> contains none of the strings <var>S_i</var> as a substring.<ul>\n<li>Choose an <var>S_i</var> and one of its occurrences in <var>T</var>, remove that occurrence from <var>T</var>, and concatenate the remaining parts.</li>\n</ul>\n</li>\n</ul>\n<details> <summary> What is a substring?</summary>\nA substring of a string is its contiguous subsequence. For example, <code>A</code>, <code>AB</code>, and <code>BC</code> are substrings of <code>ABC</code>, while <code>BA</code> and <code>AC</code> are not.\n</details>\n\n<p>We say that the string <var>T</var> is <em>bad</em> when multiple strings can result from the operation above.</p>\n<p>Determine whether a bad string exists.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N \\leq 10^6</var></li>\n<li><var>1 \\leq |S_i| \\leq 2 \\times 10^6</var></li>\n<li><var>|S_1|+|S_2|+\\dots +|S_N| \\leq 2 \\times 10^6</var></li>\n<li><var>S_i \\neq S_j</var> if <var>i\\neq j</var>.</li>\n<li><var>S_i</var> is a string consisting of <code>A</code>, <code>B</code>, <code>C</code>, <code>D</code>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>S_1</var>\n<var>S_2</var>\n<var>\\vdots</var>\n<var>S_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If a bad string exists, print <code>Yes</code>.</p>\n<p>Otherwise, print <code>No</code>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3\nA\nB\nC\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>No\n</pre>\n\n<p>The only string we can get from <var>T</var> is what remains after removing all occurrences of <code>A</code>, <code>B</code>, <code>C</code> from <var>T</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>1\nABA\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>Yes\n</pre>\n\n<p>For example, from <var>T=</var> <code>ABABA</code>, we can get two strings: <code>AB</code> and <code>BA</code>, so <var>T</var> is a bad string.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>4\nCBA\nACB\nAD\nCAB\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>Yes\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc141/tasks/arc141_f"}