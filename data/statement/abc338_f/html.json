{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>500</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点 <var>M</var> 辺の重み付き単純有向グラフがあります。\n頂点には <var>1</var> から <var>N</var> までの番号が付けられていて、<var>i</var> 本目の辺は頂点 <var>U_i</var> から頂点 <var>V_i</var> に伸びる重み <var>W_i</var> の辺です。\nここで、重みは負の値を取ることもありますが、負閉路は存在しません。</p>\n<p>全ての頂点を一度以上通るようなウォークが存在するかどうか判定し、存在するならば通る辺の重みの総和の最小値を求めてください。\nただし、同じ辺を複数回通る場合、その辺の重みは通った回数分加算されるものとします。</p>\n<p>なお、「全ての頂点を一度以上通るようなウォーク」とは、頂点の列 <var>v_1,v_2,\\dots,v_k</var> であって以下の条件を共に満たすもののことを言います。</p>\n<ul>\n<li>すべての <var>i\\ (1\\leq i\\leq k-1)</var> について、頂点 <var>v_i</var> から頂点 <var>v_{i+1}</var> に伸びる辺が存在する</li>\n<li>すべての <var>j\\ (1\\leq j\\leq N)</var> について、<var>v_i=j</var> を満たす <var>i\\ (1\\leq i\\leq k)</var> が存在する</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2\\leq N \\leq 20</var></li>\n<li><var>1\\leq M \\leq N(N-1)</var></li>\n<li><var>1\\leq U_i,V_i \\leq N</var></li>\n<li><var>U_i \\neq V_i</var></li>\n<li><var>(U_i,V_i) \\neq (U_j,V_j)\\ (i\\neq j)</var></li>\n<li><var>-10^6\\leq W_i \\leq 10^6</var></li>\n<li>与えられるグラフに負閉路は存在しない</li>\n<li>入力は全て整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>U_1</var> <var>V_1</var> <var>W_1</var>\n<var>U_2</var> <var>V_2</var> <var>W_2</var>\n<var>\\vdots</var>\n<var>U_M</var> <var>V_M</var> <var>W_M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>全ての頂点を一度以上通るようなウォークが存在するならば通る辺の重みの総和の最小値を、存在しないならば <code>No</code> を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 4\n1 2 5\n2 1 -3\n2 3 -4\n3 1 100\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>-2\n</pre>\n<p>頂点 <var>2\\rightarrow 1\\rightarrow 2\\rightarrow 3</var> の順に辿ると、全ての頂点を一度以上通ることができ、通る辺の重みの総和は <var>(-3)+5+(-4)=-2</var> になります。\nこれが最小です。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>3 2\n1 2 0\n2 1 0\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>No\n</pre>\n<p>全ての頂点を一度以上通るようなウォークは存在しません。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>5 9\n1 2 -246288\n4 5 -222742\n3 1 246288\n3 4 947824\n5 2 -178721\n4 3 -947824\n5 4 756570\n2 5 707902\n5 1 36781\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>-449429\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score: <var>500</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There is a weighted simple directed graph with <var>N</var> vertices and <var>M</var> edges.\nThe vertices are numbered <var>1</var> to <var>N</var>, and the <var>i</var>-th edge has a weight of <var>W_i</var> and extends from vertex <var>U_i</var> to vertex <var>V_i</var>.\nThe weights can be negative, but the graph does not contain negative cycles.</p>\n<p>Determine whether there is a walk that visits each vertex at least once. If such a walk exists, find the minimum total weight of the edges traversed.\nIf the same edge is traversed multiple times, the weight of that edge is added for each traversal.</p>\n<p>Here, \"a walk that visits each vertex at least once\" is a sequence of vertices <var>v_1,v_2,\\dots,v_k</var> that satisfies both of the following conditions:</p>\n<ul>\n<li>For every <var>i</var> <var>(1\\leq i\\leq k-1)</var>, there is an edge extending from vertex <var>v_i</var> to vertex <var>v_{i+1}</var>.</li>\n<li>For every <var>j\\ (1\\leq j\\leq N)</var>, there is <var>i</var> <var>(1\\leq i\\leq k)</var> such that <var>v_i=j</var>.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2\\leq N \\leq 20</var></li>\n<li><var>1\\leq M \\leq N(N-1)</var></li>\n<li><var>1\\leq U_i,V_i \\leq N</var></li>\n<li><var>U_i \\neq V_i</var></li>\n<li><var>(U_i,V_i) \\neq (U_j,V_j)</var> for <var>i\\neq j</var></li>\n<li><var>-10^6\\leq W_i \\leq 10^6</var></li>\n<li>The given graph does not contain negative cycles.</li>\n<li>All input values are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>U_1</var> <var>V_1</var> <var>W_1</var>\n<var>U_2</var> <var>V_2</var> <var>W_2</var>\n<var>\\vdots</var>\n<var>U_M</var> <var>V_M</var> <var>W_M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If there is a walk that visits each vertex at least once, print the minimum total weight of the edges traversed. Otherwise, print <code>No</code>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 4\n1 2 5\n2 1 -3\n2 3 -4\n3 1 100\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>-2\n</pre>\n<p>By following the vertices in the order <var>2\\rightarrow 1\\rightarrow 2\\rightarrow 3</var>, you can visit all vertices at least once, and the total weight of the edges traversed is <var>(-3)+5+(-4)=-2</var>.\nThis is the minimum.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>3 2\n1 2 0\n2 1 0\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>No\n</pre>\n<p>There is no walk that visits all vertices at least once.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>5 9\n1 2 -246288\n4 5 -222742\n3 1 246288\n3 4 947824\n5 2 -178721\n4 3 -947824\n5 4 756570\n2 5 707902\n5 1 36781\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>-449429\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc338/tasks/abc338_f"}