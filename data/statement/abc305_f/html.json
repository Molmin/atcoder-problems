{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>525</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>この問題は <strong>インタラクティブな問題</strong>（あなたが作成したプログラムとジャッジプログラムが標準入出力を介して対話を行う形式の問題）です。</p>\n<p><var>N</var> 個の頂点と <var>M</var> 本の辺からなる連結かつ単純な無向グラフがあります。\n頂点には <var>1</var> から <var>N</var> までの整数の番号がついています。</p>\n<p>あなたは、はじめ頂点 <var>1</var> にいます。\n隣り合う頂点に移動することを最大 <var>2N</var> 回まで繰り返して、頂点 <var>N</var> へ移動してください。</p>\n<p>ただし、はじめはグラフの辺をすべて知ることはできず、今いる頂点と隣り合っている頂点の情報を知ることができます。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2\\leq N\\leq100</var></li>\n<li><var>N-1\\leq M\\leq\\dfrac{N(N-1)}2</var></li>\n<li>グラフは連結かつ単純</li>\n<li>入力はすべて整数</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>入出力</h3><p>最初に、グラフの頂点数 <var>N</var> と辺数 <var>M</var> を標準入力から受け取ってください。</p>\n<pre><var>N</var> <var>M</var>\n</pre>\n<p>次に、あなたはジャッジに対して問題文中の操作を <var>2N</var> 回まで繰り返すことができます。</p>\n<p>各操作のはじめには、あなたが現在いる頂点に隣接する頂点が次の形式で標準入力から与えられます。</p>\n<pre><var>k</var> <var>v _ 1</var> <var>v _ 2</var> <var>\\ldots</var> <var>v _ k</var>\n</pre>\n<p>ここで、<var>v _ i\\ (1\\leq i\\leq k)</var> は <var>1</var> 以上 <var>N</var> 以下の整数で、<var>v _ 1\\lt v _ 2\\lt\\cdots\\lt v _ k</var> を満たします。</p>\n<p>あなたは、<var>v _ i\\ (1\\leq i\\leq k)</var> を <var>1</var> つ選んで以下の形式で標準出力へ出力してください。</p>\n<pre><var>v _ i</var>\n</pre>\n<p>この操作をすることで、あなたは頂点 <var>v _ i</var> へ移動します。</p>\n<p>移動回数が <var>2N</var> 回を上回ったり、不正な出力を行った場合、ジャッジは標準入力に <code>-1</code> を送ります。</p>\n<p>移動する先の頂点が頂点 <var>N</var> である場合、ジャッジは標準入力に <code>OK</code> を送り、終了します。</p>\n<p><code>-1</code> もしくは <code>OK</code> を受け取った場合、ただちにあなたのプログラムを終了させてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>注意点</h3><ul>\n<li><span style=\"color:red\"><strong>出力を行うたびに、末尾に改行を入れて標準出力を flush してください。そうしなかった場合、ジャッジ結果が <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"実行時間制限超過\">TLE</span> となる可能性があります。</strong></span></li>\n<li><strong>対話の途中で不正な出力を行った、あるいはプログラムが途中で終了した場合のジャッジ結果は不定です。</strong></li>\n<li>頂点 <var>N</var> に到達したらただちにプログラムを終了してください。そうしない場合、ジャッジ結果は不定です。</li>\n<li><span style=\"color:red\"><strong>この問題のジャッジはアダプティブです。つまり、制約および以前の出力に矛盾しない範囲でグラフの形が変わる場合があります。</strong></span></li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>入出力例</h3><p>以下は、<var>N=4,M=5</var> の場合の入出力例です。\nこの入出力では、グラフは以下の図のようになっています。</p>\n<p><img src=\"https://img.atcoder.jp/abc305/ae6ce1b3c8e950777761893a567c4d11.png\"></p>\n<table class=\"table table-bordered\">\n\n<thead>\n<tr>\n<th>入力</th>\n<th>出力</th>\n<th>説明</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td><code>4 5</code></td>\n<td></td>\n<td><var>N</var> と <var>M</var> が与えられます。</td>\n</tr>\n\n<tr>\n<td><code>2 2 3</code></td>\n<td></td>\n<td>はじめ、あなたは頂点 <var>1</var> にいます。頂点 <var>1</var> に隣接している頂点が与えられます。</td>\n</tr>\n\n<tr>\n<td></td>\n<td><code>3</code></td>\n<td>移動する頂点として、頂点 <var>v _ 2=3</var> を選びます。</td>\n</tr>\n<tr>\n\n</tr><tr>\n<td><code>3 1 2 4</code></td>\n<td></td>\n<td>頂点 <var>3</var> に隣接している頂点が与えられます。</td>\n</tr>\n\n<tr>\n<td></td>\n<td><code>2</code></td>\n<td>移動する頂点として、頂点 <var>v _ 2=2</var> を選びます。</td>\n</tr>\n<tr>\n\n</tr><tr>\n<td><code>3 1 3 4</code></td>\n<td></td>\n<td>頂点 <var>2</var> に隣接している頂点が与えられます。</td>\n</tr>\n\n<tr>\n<td></td>\n<td><code>4</code></td>\n<td>移動する頂点として、頂点 <var>v _ 3=4</var> を選びます。</td>\n</tr>\n<tr>\n\n</tr><tr>\n<td><code>OK</code></td>\n<td></td>\n<td><var>8(=2\\times4)</var> 回以内で頂点 <var>4</var> に到達したので、<code>OK</code> が渡されます。</td>\n</tr>\n\n</tbody>\n</table>\n\n<p><code>OK</code> を受け取ったあと、ただちにプログラムを終了することで正解と判定されます。</p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>525</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>This is an <strong>interactive problem</strong> (where your program and the judge program interact through Standard Input and Output).</p>\n<p>There is a simple connected undirected graph with <var>N</var> vertices and <var>M</var> edges.\nThe vertices are numbered with integers from <var>1</var> to <var>N</var>.</p>\n<p>Initially, you are at vertex <var>1</var>.\nRepeat moving to an adjacent vertex at most <var>2N</var> times to reach vertex <var>N</var>.</p>\n<p>Here, you do not initially know all edges of the graph, but you will be informed of the vertices adjacent to the vertex you are at.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2\\leq N\\leq100</var></li>\n<li><var>N-1\\leq M\\leq\\dfrac{N(N-1)}2</var></li>\n<li>The graph is simple and connected.</li>\n<li>All input values are integers.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Input and Output</h3><p>First, receive the number of vertices <var>N</var> and the number of edges <var>M</var> in the graph from Standard Input:</p>\n<pre><var>N</var> <var>M</var>\n</pre>\n<p>Next, you get to repeat the operation described in the problem statement at most <var>2N</var> times against the judge.</p>\n<p>At the beginning of each operation, the vertices adjacent to the vertex you are currently at are given from Standard Input in the following format:</p>\n<pre><var>k</var> <var>v _ 1</var> <var>v _ 2</var> <var>\\ldots</var> <var>v _ k</var>\n</pre>\n<p>Here, <var>v _ i\\ (1\\leq i\\leq k)</var> are integers between <var>1</var> and <var>N</var> such that <var>v _ 1\\lt v _ 2\\lt\\cdots\\lt v _ k</var>.</p>\n<p>Choose one of <var>v _ i\\ (1\\leq i\\leq k)</var> and print it to Standard Output in the following format:</p>\n<pre><var>v _ i</var>\n</pre>\n<p>After this operation, you will be at vertex <var>v _ i</var>.</p>\n<p>If you perform more than <var>2N</var> operations or print invalid output, the judge will send <code>-1</code> to Standard Input.</p>\n<p>If the destination of a move is vertex <var>N</var>, the judge will send <code>OK</code> to Standard Input and terminate.</p>\n<p>When receiving <code>-1</code> or <code>OK</code>, immediately terminate the program.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Notes</h3><ul>\n<li><span style=\"color:red\"><strong>In each output, insert a newline at the end and flush Standard Output. Otherwise, the verdict may be <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Execution Time Limit Exceeded\">TLE</span>.</strong></span></li>\n<li><strong>The verdict will be indeterminate if the program prints invalid output or quits prematurely in the middle of the interaction.</strong></li>\n<li>Terminate the program immediately after reaching vertex <var>N</var>. Otherwise, the verdict will be indeterminate.</li>\n<li><span style=\"color:red\"><strong>The judge for this problem is adaptive. This means that the graph may change without contradicting the constraints or previous outputs.</strong></span></li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Interaction</h3><p>In the following sample interaction, we have <var>N=4</var>, <var>M=5</var>, and the graph in the figure below.</p>\n<p><img src=\"https://img.atcoder.jp/abc305/ae6ce1b3c8e950777761893a567c4d11.png\"></p>\n<table class=\"table table-bordered\">\n\n<thead>\n<tr>\n<th>Input</th>\n<th>Output</th>\n<th>Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td><code>4 5</code></td>\n<td></td>\n<td><var>N</var> and <var>M</var> are given.</td>\n</tr>\n\n<tr>\n<td><code>2 2 3</code></td>\n<td></td>\n<td>You start at vertex <var>1</var>. The vertices adjacent to vertex <var>1</var> are given.</td>\n</tr>\n\n<tr>\n<td></td>\n<td><code>3</code></td>\n<td>You choose to go to vertex <var>v _ 2=3</var>.</td>\n</tr>\n<tr>\n\n</tr><tr>\n<td><code>3 1 2 4</code></td>\n<td></td>\n<td>The vertices adjacent to vertex <var>3</var> are given.</td>\n</tr>\n\n<tr>\n<td></td>\n<td><code>2</code></td>\n<td>You choose to go to vertex <var>v _ 2=2</var>.</td>\n</tr>\n<tr>\n\n</tr><tr>\n<td><code>3 1 3 4</code></td>\n<td></td>\n<td>The vertices adjacent to vertex <var>2</var> are given.</td>\n</tr>\n\n<tr>\n<td></td>\n<td><code>4</code></td>\n<td>You choose to go to vertex <var>v _ 3=4</var>.</td>\n</tr>\n<tr>\n\n</tr><tr>\n<td><code>OK</code></td>\n<td></td>\n<td>Since you have reached vertex <var>4</var> within <var>8(=2\\times4)</var> moves, <code>OK</code> is passed.</td>\n</tr>\n\n</tbody>\n</table>\n\n<p>You will be judged as correct if you immediately terminate the program after receiving <code>OK</code>.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc305/tasks/abc305_f"}