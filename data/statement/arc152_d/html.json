{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>700</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>頂点に <var>0</var> から <var>N-1</var> までの番号がついた <var>N</var> 頂点の無向グラフがあり、はじめ、辺はありません。\nこのグラフに、あなたは好きなように辺を追加することができます。\nそして、あなたが辺をすべて追加し終えた後に、与えられる <var>K</var> を用いて以下の操作がちょうど <var>1</var> 回行われます。</p>\n<ul>\n<li>あなたが追加した各辺について、両端の頂点を <var>u,v</var> とするとき、\n<var>2</var> 頂点 <var>(u+K)</var> <var>\\mathrm{mod}</var> <var>N</var> と <var>(v+K)</var> <var>\\mathrm{mod}</var> <var>N</var> の間に辺が追加される。\nただし、この <var>2</var> 頂点間にもともと辺が存在する場合も新しく辺が追加されるため、その場合は操作後には多重辺となる。</li>\n</ul>\n<p>与えられた <var>N,K</var> に対して、操作後のグラフが木となるようにするとき、あなたが追加するべき辺の組を求めてください。\nそのような辺の組が存在しない場合はそのことを指摘してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2\\leq N\\leq 2\\times 10^5</var></li>\n<li><var>1\\leq K\\leq N-1</var></li>\n<li>入力される値はすべて整数である</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>K</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>題意を満たす辺の組が存在する場合、辺の数を <var>M</var>、 <var>i</var> 番目の辺が結ぶ <var>2</var> 頂点を <var>a_i,b_i</var> として、以下の形式で出力せよ。\nただし、 <var>0\\leq M\\leq N</var> でなければならず、全て整数で出力せよ。出力される辺や頂点の順序は問わない。</p>\n<pre><var>M</var>\n<var>a_1</var> <var>b_1</var>\n<var>a_2</var> <var>b_2</var>\n<var>\\vdots</var>\n<var>a_M</var> <var>b_M</var>\n</pre>\n<p>解が複数存在する場合、どれを出力しても正解とみなされる。</p>\n<p>題意を満たす辺の組が存在しない場合、<code>-1</code> と出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5 2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>2\n2 3\n2 4\n</pre>\n<p>操作を行うと、辺 <var>4</var>-<var>0</var> と <var>4</var>-<var>1</var> が追加されます。\nしたがって、木が生成されますので、これは正当な出力の <var>1</var> つとなります。 </p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>2 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>-1\n</pre>\n<p>操作後のグラフが木となるような方法が存在しません。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>7 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>3\n0 1\n2 3\n4 5\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>700</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>We have an undirected graph with <var>N</var> vertices numbered <var>0</var> through <var>N-1</var> and no edges at first.\nYou may add edges to this graph as you like.\nWhen you are done with adding edges, the following operation will be performed once using a given integer <var>K</var>.</p>\n<ul>\n<li>For each edge you have added, let <var>u</var> and <var>v</var> be its endpoints, and an edge will be added between two vertices <var>(u+K)</var> <var>\\mathrm{mod}</var> <var>N</var> and <var>(v+K)</var> <var>\\mathrm{mod}</var> <var>N</var>.\nThis edge will be added even if there is already an edge between these vertices, resulting in multi-edges.</li>\n</ul>\n<p>For the given <var>N</var> and <var>K</var>, find a set of edges that you should add so that the graph will be a tree after the operation.\nIf there is no such set of edges, indicate that fact.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2\\leq N\\leq 2\\times 10^5</var></li>\n<li><var>1\\leq K\\leq N-1</var></li>\n<li>All values in the input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>K</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If there is a set of edges that satisfies the requirement, let <var>M</var> be the number of edges, and <var>a_i</var> and <var>b_i</var> be the two vertices connected by the <var>i</var>-th edge, and print a solution in the following format.\nHere, <var>0\\leq M\\leq N</var> must hold, and all values must be integers. The edges may be printed in any order, as well as the endpoints of an edge.</p>\n<pre><var>M</var>\n<var>a_1</var> <var>b_1</var>\n<var>a_2</var> <var>b_2</var>\n<var>\\vdots</var>\n<var>a_M</var> <var>b_M</var>\n</pre>\n<p>If multiple solutions exist, any of them will be accepted.</p>\n<p>If no set of edges satisfies the requirement, print <code>-1</code>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5 2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>2\n2 3\n2 4\n</pre>\n<p>The operation will add the edges <var>4</var>-<var>0</var> and <var>4</var>-<var>1</var>.\nThen, the graph will be a tree, so this is a legitimate output.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>2 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>-1\n</pre>\n<p>There is no way to have a tree after the operation.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>7 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>3\n0 1\n2 3\n4 5\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc152/tasks/arc152_d"}