{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>500</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点の木が与えられます。頂点には <var>1, \\dots, N</var> の番号が付けられており、<var>i \\, (1 \\leq i \\leq N - 1)</var> 番目の辺は頂点 <var>A_i, B_i</var> を結びます。</p>\n<p>この木における頂点 <var>u, v</var> の<strong>距離</strong>を、頂点 <var>u</var> から頂点 <var>v</var> までの最短パス上にある辺の本数と定義します。</p>\n<p><var>Q</var> 個のクエリが与えられます。<var>i \\, (1 \\leq i \\leq Q)</var> 番目のクエリでは、整数 <var>U_i, K_i</var> が与えられるので、頂点 <var>U_i</var> からの距離がちょうど <var>K_i</var> であるような頂点の番号を任意に一つ出力してください。そのような頂点が存在しない場合は、<code>-1</code> を出力してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq A_i \\lt B_i \\leq N \\, (1 \\leq i \\leq N - 1)</var></li>\n<li>与えられるグラフは木</li>\n<li><var>1 \\leq Q \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq U_i, K_i \\leq N \\, (1 \\leq i \\leq Q)</var></li>\n<li>入力は全て整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>A_1</var> <var>B_1</var>\n<var>\\vdots</var>\n<var>A_{N-1}</var> <var>B_{N-1}</var>\n<var>Q</var>\n<var>U_1</var> <var>K_1</var>\n<var>\\vdots</var>\n<var>U_Q</var> <var>K_Q</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>Q</var> 行出力せよ。<var>i \\, (1 \\leq i \\leq Q)</var> 行目には、頂点 <var>U_i</var> からの距離がちょうど <var>K_i</var> である頂点が存在するならその一例を、存在しないなら <code>-1</code> を出力せよ。そのような頂点が複数存在する場合、どれを出力しても正解となる。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5\n1 2\n2 3\n3 4\n3 5\n3\n2 2\n5 3\n3 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>4\n1\n-1\n</pre>\n<ul>\n<li>頂点 <var>2</var> からの距離がちょうど <var>2</var> であるのは頂点 <var>4, 5</var> の二つです。</li>\n<li>頂点 <var>5</var> からの距離がちょうど <var>3</var> であるのは頂点 <var>1</var> のみです。</li>\n<li>頂点 <var>3</var> からの距離がちょうど <var>3</var> である頂点は存在しません。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>10\n1 2\n2 3\n3 5\n2 8\n3 4\n4 6\n4 9\n5 7\n9 10\n5\n1 1\n2 2\n3 3\n4 4\n5 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>2\n4\n10\n-1\n-1\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>500</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a tree with <var>N</var> vertices.  The vertices are numbered <var>1, \\dots, N</var>, and the <var>i</var>-th (<var>1 \\leq i \\leq N - 1</var>) edge connects Vertices <var>A_i</var> and <var>B_i</var>.</p>\n<p>We define the <strong>distance</strong> between Vertices <var>u</var> and <var>v</var> on this tree by the number of edges in the shortest path from Vertex <var>u</var> to Vertex <var>v</var>.</p>\n<p>You are given <var>Q</var> queries.  In the <var>i</var>-th (<var>1 \\leq i \\leq Q</var>) query, given integers <var>U_i</var> and <var>K_i</var>, print the index of any vertex whose distance from Vertex <var>U_i</var> is exactly <var>K_i</var>.  If there is no such vertex, print <code>-1</code>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq A_i \\lt B_i \\leq N \\, (1 \\leq i \\leq N - 1)</var></li>\n<li>The given graph is a tree.</li>\n<li><var>1 \\leq Q \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq U_i, K_i \\leq N \\, (1 \\leq i \\leq Q)</var></li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>A_1</var> <var>B_1</var>\n<var>\\vdots</var>\n<var>A_{N-1}</var> <var>B_{N-1}</var>\n<var>Q</var>\n<var>U_1</var> <var>K_1</var>\n<var>\\vdots</var>\n<var>U_Q</var> <var>K_Q</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print <var>Q</var> lines.  The <var>i</var>-th (<var>1 \\leq i \\leq Q</var>) line should contain the index of any vertex whose distance from Vertex <var>U_i</var> is exactly <var>K_i</var> if such a vertex exists; if not, it should contain <code>-1</code>.  If there are multiple such vertices, you may print any of them.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5\n1 2\n2 3\n3 4\n3 5\n3\n2 2\n5 3\n3 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>4\n1\n-1\n</pre>\n<ul>\n<li>Two vertices, Vertices <var>4</var> and <var>5</var>, have a distance exactly <var>2</var> from Vertex <var>2</var>.</li>\n<li>Only Vertex <var>1</var> has a distance exactly <var>3</var> from Vertex <var>5</var>.</li>\n<li>No vertex has a distance exactly <var>3</var> from Vertex <var>3</var>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>10\n1 2\n2 3\n3 5\n2 8\n3 4\n4 6\n4 9\n5 7\n9 10\n5\n1 1\n2 2\n3 3\n4 4\n5 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>2\n4\n10\n-1\n-1\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc267/tasks/abc267_f"}