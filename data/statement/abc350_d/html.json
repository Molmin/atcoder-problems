{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>350</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>1</var> から <var>N</var> の番号がついた <var>N</var> 人のユーザが利用している SNS があります。</p>\n<p>この SNS では <var>2</var> 人のユーザが互いに<strong>友達</strong>になれる機能があります。<br>\n友達関係は双方向的です。すなわち、ユーザ X がユーザ Y の友達であるならば、必ずユーザ Y はユーザ X の友達です。</p>\n<p>現在 SNS 上には <var>M</var> 組の友達関係が存在し、<var>i</var> 組目の友達関係はユーザ <var>A_i</var> とユーザ <var>B_i</var> からなります。</p>\n<p>以下の操作を行える最大の回数を求めてください。</p>\n<ul>\n<li>操作：3 人のユーザ X, Y, Z であって、X と Y は友達、Y と Z は友達であり、X と Z は友達でないようなものを選ぶ。X と Z を友達にする。</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 2\\times 10^5</var></li>\n<li><var>0 \\leq M \\leq 2\\times 10^5</var></li>\n<li><var>1\\leq A_i &lt; B_i \\leq N</var></li>\n<li><var>(A_i,B_i)</var> は相異なる</li>\n<li>入力は全て整数である</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>A_1</var> <var>B_1</var>\n<var>\\vdots</var>\n<var>A_M</var> <var>B_M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>答えを出力せよ。  </p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>4 3\n1 2\n2 3\n1 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>3\n</pre>\n<p>次のようにして「友達の友達と新たに友達になる」という操作は <var>3</var> 回行えます。</p>\n<ul>\n<li>ユーザ <var>1</var> が友達(ユーザ <var>2</var>)の友達であるユーザ <var>3</var> と新たに友達になる</li>\n<li>ユーザ <var>3</var> が友達(ユーザ <var>1</var>)の友達であるユーザ <var>4</var> と新たに友達になる</li>\n<li>ユーザ <var>2</var> が友達(ユーザ <var>1</var>)の友達であるユーザ <var>4</var> と新たに友達になる</li>\n</ul>\n<p><var>4</var> 回以上行うことはできません。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>3 0\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>0\n</pre>\n<p>もともと友達関係が存在しないとき、新たな友達関係は発生しません。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>10 8\n1 2\n2 3\n3 4\n4 5\n6 7\n7 8\n8 9\n9 10\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>12\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score: <var>350</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There is an SNS used by <var>N</var> users, labeled with numbers from <var>1</var> to <var>N</var>.</p>\n<p>In this SNS, two users can become <strong>friends</strong> with each other.<br>\nFriendship is bidirectional; if user X is a friend of user Y, user Y is always a friend of user X.</p>\n<p>Currently, there are <var>M</var> pairs of friendships on the SNS, with the <var>i</var>-th pair consisting of users <var>A_i</var> and <var>B_i</var>.</p>\n<p>Determine the maximum number of times the following operation can be performed:</p>\n<ul>\n<li>Operation: Choose three users X, Y, and Z such that X and Y are friends, Y and Z are friends, but X and Z are not. Make X and Z friends.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>0 \\leq M \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq A_i &lt; B_i \\leq N</var></li>\n<li>The pairs <var>(A_i, B_i)</var> are distinct.</li>\n<li>All input values are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>A_1</var> <var>B_1</var>\n<var>\\vdots</var>\n<var>A_M</var> <var>B_M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the answer.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>4 3\n1 2\n2 3\n1 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>3\n</pre>\n<p>Three new friendships with a friend's friend can occur as follows:</p>\n<ul>\n<li>User <var>1</var> becomes friends with user <var>3</var>, who is a friend of their friend (user <var>2</var>)</li>\n<li>User <var>3</var> becomes friends with user <var>4</var>, who is a friend of their friend (user <var>1</var>)</li>\n<li>User <var>2</var> becomes friends with user <var>4</var>, who is a friend of their friend (user <var>1</var>)</li>\n</ul>\n<p>There will not be four or more new friendships.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>3 0\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>0\n</pre>\n<p>If there are no initial friendships, no new friendships can occur.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>10 8\n1 2\n2 3\n3 4\n4 5\n6 7\n7 8\n8 9\n9 10\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>12\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc350/tasks/abc350_d"}