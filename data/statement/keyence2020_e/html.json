{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>900</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点 <var>M</var> 辺の連結な無向グラフがあります。\nこのグラフの辺 <var>i</var> (<var>1 \\leq i \\leq M</var>) は頂点 <var>U_i</var> と頂点 <var>V_i</var> を双方向に結んでいます。\nまた、<var>N</var> 個の整数 <var>D_1, D_2, ..., D_N</var> が与えられます。</p>\n<p>このグラフの各頂点に白または黒の色を割り当て、さらに\n各辺に <var>1</var> 以上 <var>10^9</var> 以下の整数の重みを割り当てる方法であって、以下の条件を満たすものが存在するかどうか判定してください。\nさらに、存在する場合、そのような割り当てをひとつ求めてください。</p>\n<ul>\n<li>白および黒が割り当てられた頂点がそれぞれ少なくとも <var>1</var> 個以上存在する。</li>\n<li>各頂点 <var>v</var> (<var>1 \\leq v \\leq N</var>) に対して以下の条件が成り立つ。<ul>\n<li>頂点 <var>v</var> からグラフの辺を通って頂点 <var>v</var> と異なる色が割り当てられた頂点に移動する際にかかる最小のコストはちょうど <var>D_v</var> である。</li>\n</ul>\n</li>\n</ul>\n<p>なお、グラフ上の移動にかかるコストとは、\n移動の際に通る辺の重みの和のことです。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 100,000</var></li>\n<li><var>1 \\leq M \\leq 200,000</var></li>\n<li><var>1 \\leq D_i \\leq 10^9</var></li>\n<li><var>1 \\leq U_i, V_i \\leq N</var></li>\n<li>与えられるグラフは連結であり、自己ループや多重辺を持たない。</li>\n<li>入力値はすべて整数である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>D_1</var> <var>D_2</var> <var>...</var> <var>D_N</var>\n<var>U_1</var> <var>V_1</var>\n<var>U_2</var> <var>V_2</var>\n<var>\\vdots</var>\n<var>U_M</var> <var>V_M</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>割り当てが不可能である場合、<code>-1</code> と一行に出力せよ。</p>\n<p>可能である場合、\n割り当て方をひとつ、\n以下の形式で出力せよ。</p>\n<pre><var>S</var>\n<var>C_1</var>\n<var>C_2</var>\n<var>\\vdots</var>\n<var>C_M</var>\n</pre>\n\n<p>ただし、</p>\n<ul>\n<li><var>1</var> 行目の出力 <var>S</var> は長さ <var>N</var> の文字列とせよ。\nその <var>i</var> 番目 (<var>1 \\leq i \\leq N</var>) の文字は、頂点 <var>i</var> に白色を割り当てる場合は <code>W</code> とし、黒色を割り当てる場合は <code>B</code> とせよ。</li>\n<li><var>i + 1</var> 行目 (<var>1 \\leq i \\leq M</var>) の出力 <var>C_i</var> は辺 <var>i</var> に割り当てる重みとせよ（整数として出力すること）。</li>\n</ul>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5 5\n3 4 3 5 7\n1 2\n1 3\n3 2\n4 2\n4 5\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>BWWBB\n4\n3\n1\n5\n2\n</pre>\n\n<p>出力例のように色と重みを割り当てた場合、たとえば頂点 <var>5</var> からグラフの辺を通って頂点 <var>5</var> と異なる色が割り当てられた頂点に最小のコストで移動するには、\n頂点 <var>5</var> <var>\\to</var> 頂点 <var>4</var> <var>\\to</var> 頂点 <var>2</var> と移動すればよく、この移動のコストは <var>7</var> となるので、条件を満たします。\n他の頂点についても条件を満たすことが確かめられます。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5 7\n1 2 3 4 5\n1 2\n1 3\n1 4\n2 3\n2 5\n3 5\n4 5\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>-1\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>4 6\n1 1 1 1\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>BBBW\n1\n1\n1\n2\n1\n1\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>900</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>We have a connected undirected graph with <var>N</var> vertices and <var>M</var> edges.\nEdge <var>i</var> in this graph (<var>1 \\leq i \\leq M</var>) connects Vertex <var>U_i</var> and Vertex <var>V_i</var> bidirectionally.\nWe are additionally given <var>N</var> integers <var>D_1, D_2, ..., D_N</var>.</p>\n<p>Determine whether the conditions below can be satisfied by assigning a color - white or black - to each vertex and an integer weight between <var>1</var> and <var>10^9</var> (inclusive) to each edge in this graph.\nIf the answer is yes, find one such assignment of colors and integers, too.</p>\n<ul>\n<li>There is at least one vertex assigned white and at least one vertex assigned black.</li>\n<li>For each vertex <var>v</var> (<var>1 \\leq v \\leq N</var>), the following holds.<ul>\n<li>The minimum cost to travel from Vertex <var>v</var> to a vertex whose color assigned is different from that of Vertex <var>v</var> by traversing the edges is equal to <var>D_v</var>.</li>\n</ul>\n</li>\n</ul>\n<p>Here, the cost of traversing the edges is the sum of the weights of the edges traversed.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 100,000</var></li>\n<li><var>1 \\leq M \\leq 200,000</var></li>\n<li><var>1 \\leq D_i \\leq 10^9</var></li>\n<li><var>1 \\leq U_i, V_i \\leq N</var></li>\n<li>The given graph is connected and has no self-loops or multiple edges.</li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>D_1</var> <var>D_2</var> <var>...</var> <var>D_N</var>\n<var>U_1</var> <var>V_1</var>\n<var>U_2</var> <var>V_2</var>\n<var>\\vdots</var>\n<var>U_M</var> <var>V_M</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If there is no assignment satisfying the conditions, print a single line containing <code>-1</code>.</p>\n<p>If such an assignment exists, print one such assignment in the following format:</p>\n<pre><var>S</var>\n<var>C_1</var>\n<var>C_2</var>\n<var>\\vdots</var>\n<var>C_M</var>\n</pre>\n\n<p>Here,</p>\n<ul>\n<li>the first line should contain the string <var>S</var> of length <var>N</var>. Its <var>i</var>-th character (<var>1 \\leq i \\leq N</var>) should be <code>W</code> if Vertex <var>i</var> is assigned white and <code>B</code> if it is assigned black.</li>\n<li>The <var>(i + 1)</var>-th line (<var>1 \\leq i \\leq M</var>) should contain the integer weight <var>C_i</var> assigned to Edge <var>i</var>.</li>\n</ul>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5 5\n3 4 3 5 7\n1 2\n1 3\n3 2\n4 2\n4 5\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>BWWBB\n4\n3\n1\n5\n2\n</pre>\n\n<p>Assume that we assign the colors and integers as the sample output, and let us consider Vertex <var>5</var>, for example. To travel from Vertex <var>5</var>, which is assigned black, to a vertex that is assigned white with the minimum cost, we should make these moves: Vertex <var>5</var> <var>\\to</var> Vertex <var>4</var> <var>\\to</var> Vertex <var>2</var>. The total cost of these moves is <var>7</var>, which satisfies the condition. We can also verify that the condition is satisfied for other vertices.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5 7\n1 2 3 4 5\n1 2\n1 3\n1 4\n2 3\n2 5\n3 5\n4 5\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>-1\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>4 6\n1 1 1 1\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>BBBW\n1\n1\n1\n2\n1\n1\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/keyence2020/tasks/keyence2020_e"}