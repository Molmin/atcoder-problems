{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>600</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点単純無向グラフ <var>G</var> が与えられます。</p>\n<p><var>G</var> は <var>N</var> 行 <var>N</var> 列の隣接行列 <var>A</var> によって与えられます。つまり、<var>A_{i,j}</var> が <var>1</var> である場合は頂点 <var>i,j</var> 間に辺があることを、<var>0</var> である場合には辺がないことを意味します。</p>\n<p><var>1 \\le i &lt; j &lt; k \\le N</var> を満たす整数の組 <var>(i,j,k)</var> のうち、頂点 <var>i,j</var> 間にも頂点 <var>j,k</var> 間にも頂点 <var>i,k</var> 間にも辺があるようなものの個数を求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>3 \\le N \\le 3000</var></li>\n<li><var>A</var> は単純無向グラフ <var>G</var> の隣接行列である。</li>\n<li>入力はすべて整数。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>A_{1,1}A_{1,2}\\dots A_{1,N}</var>\n<var>A_{2,1}A_{2,2}\\dots A_{2,N}</var>\n<var>\\vdots</var>\n<var>A_{N,1}A_{N,2}\\dots A_{N,N}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>答えを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>4\n0011\n0011\n1101\n1110\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>2\n</pre>\n<p><var>(i,j,k)=(1,3,4),(2,3,4)</var> が条件を満たします。</p>\n<p><var>(i,j,k)=(1,2,3)</var> は、頂点 <var>1,2</var> 間に辺がないため条件を満たしません。</p>\n<p>よって、解は <var>2</var> です。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>10\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>0\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>600</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a simple undirected graph <var>G</var> with <var>N</var> vertices.</p>\n<p><var>G</var> is given as the <var>N \\times N</var> adjacency matrix <var>A</var>. That is, there is an edge between Vertices <var>i</var> and <var>j</var> if <var>A_{i,j}</var> is <var>1</var>, and there is not if <var>A_{i,j}</var> is <var>0</var>.</p>\n<p>Find the number of triples of integers <var>(i,j,k)</var> satisfying <var>1 \\le i &lt; j &lt; k \\le N</var> such that there is an edge between Vertices <var>i</var> and <var>j</var>, an edge between Vertices <var>j</var> and <var>k</var>, and an edge between Vertices <var>i</var> and <var>k</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>3 \\le N \\le 3000</var></li>\n<li><var>A</var> is the adjacency matrix of a simple undirected graph <var>G</var>.</li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>A_{1,1}A_{1,2}\\dots A_{1,N}</var>\n<var>A_{2,1}A_{2,2}\\dots A_{2,N}</var>\n<var>\\vdots</var>\n<var>A_{N,1}A_{N,2}\\dots A_{N,N}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the answer.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>4\n0011\n0011\n1101\n1110\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>2\n</pre>\n<p><var>(i,j,k)=(1,3,4),(2,3,4)</var> satisfy the condition.</p>\n<p><var>(i,j,k)=(1,2,3)</var> does not satisfy the condition, because there is no edge between Vertices <var>1</var> and <var>2</var>.</p>\n<p>Thus, the answer is <var>2</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>10\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>0\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc258/tasks/abc258_g"}