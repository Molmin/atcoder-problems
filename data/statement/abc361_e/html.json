{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>500</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>AtCoder国には <var>1</var> から <var>N</var> の番号がついた <var>N</var> 個の街と <var>1</var> から <var>N-1</var> の番号がついた <var>N-1</var> 本の道路があります。</p>\n<p>道路 <var>i</var> は街 <var>A_i</var> と街 <var>B_i</var> を双方向に結び、長さは <var>C_i</var> です。どの街同士も、いくつかの道路を通って互いに行き来することができます。</p>\n<p>いずれかの街を出発し、道路による移動で全ての街を <var>1</var> 度以上訪れるための移動距離の最小値を求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 2\\times 10^5</var></li>\n<li><var>1 \\leq A_i,B_i \\leq N</var></li>\n<li><var>1 \\leq C_i \\leq 10^9</var></li>\n<li>入力は全て整数である</li>\n<li>どの街同士も、いくつかの道路を通って互いに行き来できる</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>A_1</var> <var>B_1</var> <var>C_1</var>\n<var>\\vdots</var>\n<var>A_{N-1}</var> <var>B_{N-1}</var> <var>C_{N-1}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>答えを出力せよ。  </p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>4\n1 2 2\n1 3 3\n1 4 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>11\n</pre>\n<p><var>4 \\to 1 \\to 2 \\to 1 \\to 3</var> と移動すると移動距離の合計は <var>11</var> となり、これが最小値です。</p>\n<p>最初の街に戻ってくる必要はないことに注意してください。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>10\n10 9 1000000000\n9 8 1000000000\n8 7 1000000000\n7 6 1000000000\n6 5 1000000000\n5 4 1000000000\n4 3 1000000000\n3 2 1000000000\n2 1 1000000000\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>9000000000\n</pre>\n<p>オーバーフローに注意してください。</p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>500</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>In the nation of AtCoder, there are <var>N</var> cities numbered <var>1</var> to <var>N</var> and <var>N-1</var> roads numbered <var>1</var> to <var>N-1</var>.</p>\n<p>Road <var>i</var> connects cities <var>A_i</var> and <var>B_i</var> bidirectionally, and its length is <var>C_i</var>. Any pair of cities can be reached from each other by traveling through some roads.</p>\n<p>Find the minimum travel distance required to start from a city and visit all cities at least once using the roads.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 2\\times 10^5</var></li>\n<li><var>1 \\leq A_i, B_i \\leq N</var></li>\n<li><var>1 \\leq C_i \\leq 10^9</var></li>\n<li>All input values are integers.</li>\n<li>Any pair of cities can be reached from each other by traveling through some roads.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>A_1</var> <var>B_1</var> <var>C_1</var>\n<var>\\vdots</var>\n<var>A_{N-1}</var> <var>B_{N-1}</var> <var>C_{N-1}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the answer.  </p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>4\n1 2 2\n1 3 3\n1 4 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>11\n</pre>\n<p>If you travel as <var>4 \\to 1 \\to 2 \\to 1 \\to 3</var>, the total travel distance is <var>11</var>, which is the minimum.</p>\n<p>Note that you do not need to return to the starting city.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>10\n10 9 1000000000\n9 8 1000000000\n8 7 1000000000\n7 6 1000000000\n6 5 1000000000\n5 4 1000000000\n4 3 1000000000\n3 2 1000000000\n2 1 1000000000\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>9000000000\n</pre>\n<p>Beware overflow.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc361/tasks/abc361_e"}