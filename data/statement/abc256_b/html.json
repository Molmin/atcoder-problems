{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>200</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><blockquote>\n<p>高橋君は野球をモチーフにしたゲームを作ろうとしましたが、うまくコードが書けなくて困っています。<br>\n高橋君の代わりに次の問題を解くプログラムを作ってください。</p>\n</blockquote>\n<p>マス <var>0</var>, マス <var>1</var>, マス <var>2</var>, マス <var>3</var> の <var>4</var> つのマス目があります。はじめマスの上には何もありません。<br>\nまた、整数 <var>P</var> があり、はじめ <var>P = 0</var> です。<br>\n正の整数からなる数列 <var>A = (A_1, A_2, \\dots, A_N)</var> が与えられるので、<var>i = 1, 2, \\dots, N</var> について順番に次の操作を行います。</p>\n<ol>\n<li>マス <var>0</var> に駒を <var>1</var> 個置く。</li>\n<li>マス上のすべての駒を番号が <var>A_i</var> 大きいマスに進める。言い換えると、駒がマス <var>x</var> にあればその駒をマス <var>x + A_i</var> に移動する。    <br>\n    ただし移動先のマスが存在しない (すなわち <var>x + A_i</var> が <var>4</var> 以上になる) 駒たちに関しては、それらを取り除いて <var>P</var> に取り除いた個数を加算する。</li>\n</ol>\n<p>すべての操作を行った後の <var>P</var> の値を出力してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq N \\leq 100</var></li>\n<li><var>1 \\leq A_i \\leq 4</var></li>\n<li>入力される値はすべて整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>A_1</var> <var>A_2</var> <var>\\dots</var> <var>A_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>操作終了時点での <var>P</var> の値を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>4\n1 1 3 2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>3\n</pre>\n<p>操作を説明すると次のようになり、操作終了時点での <var>P</var> の値は <var>3</var> になります。</p>\n<ul>\n<li><var>i=1</var> での操作  <ol>\n<li>マス <var>0</var> に駒を置く。この時点でマス <var>0</var> にコマが乗っている。</li>\n<li>すべての駒を <var>1</var> 大きいマスに進める。移動を終えた時点でマス <var>1</var> に駒が乗っている。</li>\n</ol>\n</li>\n<li><var>i=2</var> での操作  <ol>\n<li>マス <var>0</var> に駒を置く。この時点でマス <var>0, 1</var> にコマが乗っている。</li>\n<li>すべての駒を <var>1</var> 大きいマスに進める。移動を終えた時点でマス <var>1, 2</var> に駒が乗っている。</li>\n</ol>\n</li>\n<li><var>i=3</var> での操作  <ol>\n<li>マス <var>0</var> に駒を置く。この時点でマス <var>0, 1, 2</var> にコマが乗っている。</li>\n<li>すべての駒を <var>3</var> 大きいマスに進める。<br>\nこの時、マス <var>1,2</var> にある駒は移動先のマスが存在しないため (それぞれ <var>1+3=4,2+3=5</var> なので) 、盤上から取り除いて <var>P</var> に <var>2</var> を加算する。<var>P</var> の値は <var>2</var> になる。<br>\n移動を終えた時点でマス <var>3</var> に駒が乗っている。</li>\n</ol>\n</li>\n<li><var>i=4</var> での操作  <ol>\n<li>マス <var>0</var> に駒を置く。この時点でマス <var>0, 3</var> にコマが乗っている。</li>\n<li>すべての駒を <var>2</var> 大きいマスに進める。<br>\nこの時、マス <var>3</var> にある駒は移動先のマスが存在しないため (<var>3+2=5</var> なので) 、盤上から取り除いて <var>P</var> に <var>1</var> を加算する。<var>P</var> の値は <var>3</var> になる。<br>\n移動を終えた時点でマス <var>2</var> に駒が乗っている。</li>\n</ol>\n</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>3\n1 1 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>0\n</pre>\n<p><var>P</var> の値が操作中に変化しない場合もあります。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>10\n2 2 4 1 1 1 4 2 2 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>8\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>200</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><blockquote>\n<p>Takahashi is trying to create a game inspired by baseball, but he is having difficulty writing the code.<br>\nWrite a program for Takahashi that solves the following problem.</p>\n</blockquote>\n<p>There are <var>4</var> squares called Square <var>0</var>, Square <var>1</var>, Square <var>2</var>, and Square <var>3</var>.  Initially, all squares are empty.<br>\nThere is also an integer <var>P</var>; initially, <var>P = 0</var>.<br>\nGiven a sequence of positive integers <var>A = (A_1, A_2, \\dots, A_N)</var>, perform the following operations for <var>i = 1, 2, \\dots, N</var> in this order:</p>\n<ol>\n<li>Put a piece on Square <var>0</var>.</li>\n<li>Advance every piece on the squares <var>A_i</var> squares ahead.  In other words, if Square <var>x</var> has a piece, move the piece to Square <var>(x + A_i)</var>.   <br>\n    If, however, the destination square does not exist (i.e. <var>x + A_i</var> is greater than or equal to <var>4</var>) for a piece, remove it.  Add to <var>P</var> the number of pieces that have been removed.</li>\n</ol>\n<p>Print the value of <var>P</var> after all the operations have been performed.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N \\leq 100</var></li>\n<li><var>1 \\leq A_i \\leq 4</var></li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>A_1</var> <var>A_2</var> <var>\\dots</var> <var>A_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the value of <var>P</var> after all the operations have been performed.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>4\n1 1 3 2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>3\n</pre>\n<p>The operations are described below.  After all the operations have been performed, <var>P</var> equals <var>3</var>.</p>\n<ul>\n<li>The operations for <var>i=1</var>:  <ol>\n<li>Put a piece on Square <var>0</var>.  Now, Square <var>0</var> has a piece.</li>\n<li>Advance every piece on the squares <var>1</var> square ahead.  After these moves, Square <var>1</var> has a piece.</li>\n</ol>\n</li>\n<li>The operations for <var>i=2</var>:  <ol>\n<li>Put a piece on Square <var>0</var>.  Now, Squares <var>0</var> and <var>1</var> have a piece.</li>\n<li>Advance every piece on the squares <var>1</var> square ahead.  After these moves, Squares <var>1</var> and <var>2</var> have a piece.</li>\n</ol>\n</li>\n<li>The operations for <var>i=3</var>:  <ol>\n<li>Put a piece on Square <var>0</var>.  Now, Squares <var>0</var>, <var>1</var>, and <var>2</var> have a piece.</li>\n<li>Advance every piece on the squares <var>3</var> squares ahead.<br>\nHere, for the pieces on Squares <var>1</var> and <var>2</var>, the destination squares do not exist (since <var>1+3=4</var> and <var>2+3=5</var>), so remove these pieces and add <var>2</var> to <var>P</var>.  <var>P</var> now equals <var>2</var>.\nAfter these moves, Square <var>3</var> has a piece.</li>\n</ol>\n</li>\n<li>The operations for <var>i=4</var>:  <ol>\n<li>Put a piece on Square <var>0</var>.  Now, Squares <var>0</var> and <var>3</var> have a piece.</li>\n<li>Advance every piece on the squares <var>2</var> squares ahead.<br>\nHere, for the piece on Square <var>3</var>, the destination square does not exist (since <var>3+2=5</var>), so remove this piece and add <var>1</var> to <var>P</var>.  <var>P</var> now equals <var>3</var>.<br>\nAfter these moves, Square <var>2</var> has a piece.</li>\n</ol>\n</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>3\n1 1 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>0\n</pre>\n<p>The value of <var>P</var> may not be updated by the operations.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>10\n2 2 4 1 1 1 4 2 2 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>8\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc256/tasks/abc256_b"}