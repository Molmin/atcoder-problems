{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>800</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>長さ <var>N</var> の非負整数列 <var>A=(A_1,A_2,\\dots,A_N)</var> が与えられます。この整数列に対して以下の操作を <var>N-1</var> 回行って長さ <var>1</var> の整数列を得ることを考えます。</p>\n<ul>\n<li><var>n</var> を <var>A</var> の長さとする。はじめに <var>A</var> 内の要素を好きなように並び替える。\nその後、 <var>A</var> を長さ <var>n-1</var> の非負整数列 <var>(A_1 \\oplus A_2, A_2 \\oplus A_3, \\dots, A_{n-1} \\oplus A_n)</var> に置き換える</li>\n</ul>\n<p>ただしここで、 <var>\\oplus</var> はビット単位 <var>\\mathrm{XOR}</var> 演算を表します。</p>\n<p><var>N-1</var> 回の操作後に得られる長さ <var>1</var> の整数列が含む項の値を <var>X</var> としたとき、<var>X</var> として考えられる値の最大値を求めてください。</p>\n<details>\n    <summary>\n        ビット単位 <var>\\mathrm{XOR}</var> 演算とは\n    </summary>\n    <p>\n        非負整数 <var>A, B</var> のビット単位 <var>\\mathrm{XOR}</var> 、<var>A \\oplus B</var> は、以下のように定義されます。\n        </p><ul>\n            <li><var>A \\oplus B</var> を二進表記した際の <var>2^k</var> (<var>k \\geq 0</var>) の位の数は、<var>A, B</var> を二進表記した際の <var>2^k</var> の位の数のうち一方のみが <var>1</var> であれば <var>1</var>、そうでなければ <var>0</var> である。</li>\n        </ul>\n        例えば、<var>3 \\oplus 5 = 6</var> となります (二進表記すると: <var>011 \\oplus 101 = 110</var>)。<br>  \n        一般に <var>k</var> 個の非負整数 <var>p_1, p_2, p_3, \\dots, p_k</var> のビット単位 <var>\\mathrm{XOR}</var> は <var>(\\dots ((p_1 \\oplus p_2) \\oplus p_3) \\oplus \\dots \\oplus p_k)</var> と定義され、これは <var>p_1, p_2, p_3, \\dots, p_k</var> の順番によらないことが証明できます。  \n    <p></p>\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 100</var></li>\n<li><var>0 \\leq A_i &lt; 2^{60}</var></li>\n<li>入力される値はすべて整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>A_1</var> <var>A_2</var> <var>\\dots</var> <var>A_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>答えを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>4\n1 2 3 4\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>7\n</pre>\n\n<p>以下のような <var>3</var> 回の操作により <var>A</var> を <var>A=(7)</var> とできます。</p>\n<ul>\n<li><var>1</var> 回目の操作にて、 <var>A=(1,2,3,4)</var> を <var>(3,1,4,2)</var> と並び替える。 <var>A</var> は <var>(3 \\oplus 1, 1 \\oplus 4, 4 \\oplus 2) = (2,5,6)</var> に置き換わる。</li>\n<li><var>2</var> 回目の操作にて、 <var>A=(2,5,6)</var> を <var>(2,6,5)</var> と並び替える。 <var>A</var> は <var>(2 \\oplus 6, 6 \\oplus 5) = (4,3)</var> に置き換わる。</li>\n<li><var>3</var> 回目の操作にて、 <var>A=(4,3)</var> を <var>(4,3)</var> と並び替える。 <var>A</var> は <var>(4 \\oplus 3) = (7)</var> に置き換わる。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>13\n451745518671773958 43800508384422957 153019271028231120 577708532586013562 133532134450358663 619750463276496276 615201966367277237 943395749975730789 813856754125382728 705285621476908966 912241698686715427 951219919930656543 124032597374298654\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>1152905479775702586\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score: <var>800</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a sequence of <var>N</var> non-negative integers <var>A=(A_1,A_2,\\dots,A_N)</var>. Consider performing the following operation <var>N-1</var> times on this sequence to obtain a sequence of length <var>1</var>:</p>\n<ul>\n<li>Let <var>n</var> be the length of <var>A</var>. First, rearrange the elements in <var>A</var> in any order you like.\nThen, replace <var>A</var> with a sequence of <var>n-1</var> non-negative integers <var>(A_1 \\oplus A_2, A_2 \\oplus A_3, \\dots, A_{n-1} \\oplus A_n)</var>.</li>\n</ul>\n<p>Here, <var>\\oplus</var> represents the bitwise <var>\\mathrm{XOR}</var> operation.</p>\n<p>Let <var>X</var> be the value of the term contained in the sequence of length <var>1</var> obtained after <var>N-1</var> operations. Find the maximum possible value of <var>X</var>.</p>\n<details>\n    <summary>\n        What is the bitwise <var>\\mathrm{XOR}</var> operation?\n    </summary>\n    <p>\n        The bitwise <var>\\mathrm{XOR}</var> of two non-negative integers <var>A</var> and <var>B</var>, denoted as <var>A \\oplus B</var>, is defined as follows:\n        </p><ul>\n            <li>In the binary representation of <var>A \\oplus B</var>, the digit at the <var>2^k</var> (<var>k \\geq 0</var>) position is <var>1</var> if the digit at the <var>2^k</var> position is <var>1</var> in <var>A</var> or <var>B</var> but not both, and <var>0</var> otherwise.</li>\n        </ul>\n        For example, <var>3 \\oplus 5 = 6</var> (in binary: <var>011 \\oplus 101 = 110</var>).<br>  \n        In general, the bitwise <var>\\mathrm{XOR}</var> of <var>k</var> non-negative integers <var>p_1, p_2, p_3, \\dots, p_k</var> is defined as <var>(\\dots ((p_1 \\oplus p_2) \\oplus p_3) \\oplus \\dots \\oplus p_k)</var>, and it can be proved that this does not depend on the order of <var>p_1, p_2, p_3, \\dots, p_k</var>.  \n    <p></p>\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 100</var></li>\n<li><var>0 \\leq A_i &lt; 2^{60}</var></li>\n<li>All input values are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>A_1</var> <var>A_2</var> <var>\\dots</var> <var>A_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the answer.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>4\n1 2 3 4\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>7\n</pre>\n\n<p>The sequence <var>A</var> can be transformed into <var>A=(7)</var> by the following three operations:</p>\n<ul>\n<li>In the first operation, rearrange <var>A=(1,2,3,4)</var> to <var>(3,1,4,2)</var>. <var>A</var> is replaced with <var>(3 \\oplus 1, 1 \\oplus 4, 4 \\oplus 2) = (2,5,6)</var>.</li>\n<li>In the second operation, rearrange <var>A=(2,5,6)</var> to <var>(2,6,5)</var>. <var>A</var> is replaced with <var>(2 \\oplus 6, 6 \\oplus 5) = (4,3)</var>.</li>\n<li>In the third operation, rearrange <var>A=(4,3)</var> to <var>(4,3)</var>. <var>A</var> is replaced with <var>(4 \\oplus 3) = (7)</var>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>13\n451745518671773958 43800508384422957 153019271028231120 577708532586013562 133532134450358663 619750463276496276 615201966367277237 943395749975730789 813856754125382728 705285621476908966 912241698686715427 951219919930656543 124032597374298654\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>1152905479775702586\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc173/tasks/arc173_e"}