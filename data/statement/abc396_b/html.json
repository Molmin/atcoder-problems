{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>200</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>整数 <var>0</var> の書かれたカードが <var>100</var> 枚積み重なったカードの山があります。</p>\n<p><var>Q</var> 個のクエリを処理してください。それぞれのクエリは以下のいずれかです。</p>\n<ul>\n<li>タイプ <var>1</var> : 整数 <var>x</var> の書かれたカードを <var>1</var> 枚カードの山の一番上に積み重ねる。</li>\n<li>タイプ <var>2</var> : カードの山の一番上のカードを取り除き、取り除いたカードに書かれている整数を出力する。ここで、本問題の制約下では必ず山にカードが存在する。</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1\\le Q\\le 100</var></li>\n<li><var>1\\le x\\le 100</var></li>\n<li>タイプ <var>2</var> のクエリが <var>1</var> つ以上存在する。</li>\n<li>入力される値は全て整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>Q</var>\n<var>\\text{query}_1</var>\n<var>\\text{query}_2</var>\n<var>\\vdots</var>\n<var>\\text{query}_Q</var>\n</pre>\n\n<p><var>i</var> 番目のクエリ <var>\\text{query}_i</var> では、まずクエリのタイプ <var>c_i</var> （<var>1,2</var> のいずれか）が与えられる。 <var>c_i=1</var> の場合はさらに整数 <var>x</var> が追加で与えられる。</p>\n<p>すなわち、各クエリは以下に示す <var>2</var> つの形式のいずれかである。</p>\n<pre><var>1</var> <var>x</var>\n</pre>\n\n<pre><var>2</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>c_i=2</var> を満たすクエリの回数を <var>q</var> として、 <var>q</var> 行出力せよ。</p>\n<p><var>j</var> <var>(1\\le j\\le q)</var> 行目では <var>j</var> 番目のそのようなクエリに対する答えを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>6\n2\n1 4\n1 3\n2\n2\n2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>0\n3\n4\n0\n</pre>\n\n<p>各クエリを処理した後の山は順に以下のようになります：</p>\n<ul>\n<li>カードの山の一番上のカードを取り除く。取り除いたカードに書かれた整数は <var>0</var> であるため、 <var>0</var> を出力する。<ul>\n<li>カードの山は <var>0</var> の書かれたカードが <var>99</var> 枚となる。</li>\n</ul>\n</li>\n<li><var>4</var> が書かれたカードを山の上に追加する。<ul>\n<li>カードの山は上から順に <var>4</var> の書かれたカードが <var>1</var> 枚、 <var>0</var> の書かれたカードが <var>99</var> 枚となる。</li>\n</ul>\n</li>\n<li><var>3</var> が書かれたカードを山の上に追加する。<ul>\n<li>カードの山は上から順に <var>3</var> の書かれたカードが <var>1</var> 枚、 <var>4</var> の書かれたカードが <var>1</var> 枚、 <var>0</var> の書かれたカードが <var>99</var> 枚となる。</li>\n</ul>\n</li>\n<li>カードの山の一番上のカードを取り除く。取り除いたカードに書かれた整数は <var>3</var> であるため、 <var>3</var> を出力する。<ul>\n<li>カードの山は上から順に <var>4</var> の書かれたカードが <var>1</var> 枚、 <var>0</var> の書かれたカードが <var>99</var> 枚となる。</li>\n</ul>\n</li>\n<li>カードの山の一番上のカードを取り除く。取り除いたカードに書かれた整数は <var>4</var> であるため、 <var>4</var> を出力する。<ul>\n<li>カードの山は <var>0</var> の書かれたカードが <var>99</var> 枚となる。</li>\n</ul>\n</li>\n<li>カードの山の一番上のカードを取り除く。取り除いたカードに書かれた整数は <var>0</var> であるため、 <var>0</var> を出力する。<ul>\n<li>カードの山は <var>0</var> の書かれたカードが <var>98</var> 枚となる。</li>\n</ul>\n</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5\n2\n2\n2\n2\n2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>0\n0\n0\n0\n0\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>200</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There is a stack of <var>100</var> cards, each labeled with the integer <var>0</var>.</p>\n<p>Process <var>Q</var> queries. Each query is of one of the following:</p>\n<ul>\n<li>Type <var>1</var>: Place a card labeled with an integer <var>x</var> on top of the stack.</li>\n<li>Type <var>2</var>: Remove the top card of the stack and output the integer written on that removed card. Under the constraints of this problem, the stack always has at least one card.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\le Q \\le 100</var></li>\n<li><var>1 \\le x \\le 100</var></li>\n<li>There is at least one query of type <var>2</var>.</li>\n<li>All input values are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>Q</var>\n<var>\\text{query}_1</var>\n<var>\\text{query}_2</var>\n<var>\\vdots</var>\n<var>\\text{query}_Q</var>\n</pre>\n\n<p>The <var>i</var>-th query <var>\\text{query}_i</var> starts with the query type <var>c_i</var> (<var>1</var> or <var>2</var>), followed by the integer <var>x</var> if <var>c_i=1</var>.</p>\n<p>That is, each query is in one of the following two formats:</p>\n<pre><var>1</var> <var>x</var>\n</pre>\n\n<pre><var>2</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Let <var>q</var> be the number of queries with <var>c_i=2</var>. Print <var>q</var> lines.</p>\n<p>The <var>j</var>-th line (<var>1 \\le j \\le q</var>) should contain the answer to the <var>j</var>-th such query.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>6\n2\n1 4\n1 3\n2\n2\n2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>0\n3\n4\n0\n</pre>\n\n<p>After processing each query, the stack is as follows:</p>\n<ul>\n<li>Remove the top card of the stack. The integer on the removed card is <var>0</var>, so output <var>0</var>.<ul>\n<li>The stack then has <var>99</var> cards labeled with <var>0</var>.</li>\n</ul>\n</li>\n<li>Add a card labeled <var>4</var> on top.<ul>\n<li>The stack then has <var>1</var> card labeled <var>4</var>, and <var>99</var> cards labeled <var>0</var>, from top to bottom.</li>\n</ul>\n</li>\n<li>Add a card labeled <var>3</var> on top.<ul>\n<li>The stack then has <var>1</var> card labeled <var>3</var>, <var>1</var> card labeled <var>4</var>, and <var>99</var> cards labeled <var>0</var>, from top to bottom.</li>\n</ul>\n</li>\n<li>Remove the top card. The integer on that card is <var>3</var>, so output <var>3</var>.<ul>\n<li>The stack then has <var>1</var> card labeled <var>4</var>, and <var>99</var> cards labeled <var>0</var>, from top to bottom.</li>\n</ul>\n</li>\n<li>Remove the top card. The integer on that card is <var>4</var>, so output <var>4</var>.<ul>\n<li>The stack then has <var>99</var> cards labeled <var>0</var>.</li>\n</ul>\n</li>\n<li>Remove the top card. The integer on that card is <var>0</var>, so output <var>0</var>.<ul>\n<li>The stack then has <var>98</var> cards labeled <var>0</var>.</li>\n</ul>\n</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5\n2\n2\n2\n2\n2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>0\n0\n0\n0\n0\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc396/tasks/abc396_b"}