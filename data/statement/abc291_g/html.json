{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>600</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>長さ <var>N</var> の数列 <var>A=(A_0,A_1,\\ldots,A_{N-1})</var> と <var>B=(B_0,B_1,\\ldots,B_{N-1})</var> が与えられます。<br>\nまた、高橋君は数列 <var>A</var> に対して、次の操作を好きな回数 ( <var>0</var> 回でもよい) 行う事ができます。</p>\n<ul>\n<li><var>A</var> を <var>1</var> つ左にシフトする、すなわち、<var>A</var> を、<var>A'_i=A_{(i+1)\\% N}</var> で定義される <var>A'</var> で置き換える。ただし、<var>x\\% N</var> で、<var>x</var> を <var>N</var> で割った余りを表す。</li>\n</ul>\n<p>高橋君の目的は <var>\\displaystyle\\sum_{i=0}^{N-1} (A_i|B_i)</var> を最大化することです。ただし、<var>x|y</var> で <var>x</var> と <var>y</var> のビット毎の論理和(bitwise OR)を表します。</p>\n<p><var>\\displaystyle\\sum_{i=0}^{N-1} (A_i|B_i)</var> の値としてあり得る最大の値を求めてください。</p>\n<details> \n<summary>ビット毎の論理和(bitwise OR)とは</summary> \n<var>1</var> ビットの数字 (<var>0</var> または <var>1</var>) の組に対して下の表で定義される演算を<strong>論理和</strong>（またはOR演算）といいます。<br>\nビット毎に論理和を適用する演算を<strong>ビット毎の論理和（bitwise OR）</strong>といいます。\n\n<table width=\"150\" border=\"1\" style=\"border-collapse: collapse\">\n<thead>\n<tr align=\"center\">\n<td align=\"center\"> <var>x</var> \n</td><td align=\"center\"> <var>y</var> \n</td><td align=\"center\"> <var>x|y</var> \n</td></tr>\n</thead>\n<tbody>\n<tr align=\"center\">\n<td align=\"center\"><var>0</var></td>\n<td align=\"center\"><var>0</var></td>\n<td align=\"center\"><var>0</var></td>\n</tr>\n<tr align=\"center\">\n<td align=\"center\"><var>0</var></td>\n<td align=\"center\"><var>1</var></td>\n<td align=\"center\"><var>1</var></td>\n</tr>\n<tr align=\"center\">\n<td align=\"center\"><var>1</var></td>\n<td align=\"center\"><var>0</var></td>\n<td align=\"center\"><var>1</var></td>\n</tr>\n<tr align=\"center\">\n<td align=\"center\"><var>1</var></td>\n<td align=\"center\"><var>1</var></td>\n<td align=\"center\"><var>1</var></td>\n</tr>\n</tbody>\n</table>\n\n<p>論理和ではビット <var>x</var>, <var>y</var> の少なくとも一方が <var>1</var> の場合に結果が <var>1</var> となります。\n逆に言うと、共に <var>0</var> の場合のみ結果が <var>0</var> となります。</p>\n\n<h5>具体例</h5>\n<pre>0110 | 0101 = 0111</pre>\n\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 5\\times 10^5</var></li>\n<li><var>0\\leq A_i,B_i \\leq 31</var></li>\n<li>入力はすべて整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>A_0</var> <var>A_1</var> <var>\\ldots</var> <var>A_{N-1}</var>\n<var>B_0</var> <var>B_1</var> <var>\\ldots</var> <var>B_{N-1}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>\\displaystyle\\sum_{i=0}^{N-1} (A_i|B_i)</var> の値としてあり得る最大の値を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3\n0 1 3\n0 2 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>8\n</pre>\n<p>高橋君が一度も操作を行わなかった時、<var>A</var> は <var>(0,1,3)</var> のままであり、<var>\\displaystyle\\sum_{i=0}^{N-1} (A_i|B_i)=(0|0)+(1|2)+(3|3)=0+3+3=6</var>,<br>\n高橋君が <var>1</var> 回操作を行った時、<var>A=(1,3,0)</var> となり、<var>\\displaystyle\\sum_{i=0}^{N-1} (A_i|B_i)=(1|0)+(3|2)+(0|3)=1+3+3=7</var>,<br>\n高橋君が <var>2</var> 回操作を行った時、<var>A=(3,0,1)</var> となり、<var>\\displaystyle\\sum_{i=0}^{N-1} (A_i|B_i)=(3|0)+(0|2)+(1|3)=3+2+3=8</var><br>\nとなります。<var>3</var> 回以上操作を行った時、 <var>A</var> は上記のいずれかの形になるため、<var>\\displaystyle\\sum_{i=0}^{N-1} (A_i|B_i)</var> の最大値は <var>8</var> であり、<var>8</var> を出力します。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5\n1 6 1 4 3\n0 6 4 0 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>23\n</pre>\n<p>最大となるのは高橋君が <var>3</var> 回操作を行った時であり、この時 <var>A=(4,3,1,6,1)</var> となり、<br>\n<var>\\displaystyle\\sum_{i=0}^{N-1} (A_i|B_i)=(4|0)+(3|6)+(1|4)+(6|0)+(1|1)=4+7+5+6+1=23</var> となります。</p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>600</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There are length-<var>N</var> sequences <var>A=(A_0,A_1,\\ldots,A_{N-1})</var> and <var>B=(B_0,B_1,\\ldots,B_{N-1})</var>.<br>\nTakahashi may perform the following operation on <var>A</var> any number of times (possibly zero):</p>\n<ul>\n<li>apply a left cyclic shift to the sequence <var>A</var>.  In other words, replace <var>A</var> with <var>A'</var> defined by <var>A'_i=A_{(i+1)\\% N}</var>, where <var>x\\% N</var> denotes the remainder when <var>x</var> is divided by <var>N</var>.</li>\n</ul>\n<p>Takahashi's objective is to maximize <var>\\displaystyle\\sum_{i=0}^{N-1} (A_i|B_i)</var>, where <var>x|y</var> denotes the bitwise logical sum (bitwise OR) of <var>x</var> and <var>y</var>.</p>\n<p>Find the maximum possible <var>\\displaystyle\\sum_{i=0}^{N-1} (A_i|B_i)</var>.</p>\n<details>\n<summary>What is the bitwise logical sum (bitwise OR)?</summary>\nThe <strong>logical sum</strong> (or the OR operation) is an operation on two one-bit integers (<var>0</var> or <var>1</var>) defined by the table below.<br>\nThe <strong>bitwise logical sum (bitwise OR)</strong> is an operation of applying the logical sum bitwise.\n\n<table width=\"150\" border=\"1\" style=\"border-collapse: collapse\">\n<thead>\n<tr align=\"center\">\n<td align=\"center\"> <var>x</var> \n</td><td align=\"center\"> <var>y</var> \n</td><td align=\"center\"> <var>x|y</var> \n</td></tr>\n</thead>\n<tbody>\n<tr align=\"center\">\n<td align=\"center\"><var>0</var></td>\n<td align=\"center\"><var>0</var></td>\n<td align=\"center\"><var>0</var></td>\n</tr>\n<tr align=\"center\">\n<td align=\"center\"><var>0</var></td>\n<td align=\"center\"><var>1</var></td>\n<td align=\"center\"><var>1</var></td>\n</tr>\n<tr align=\"center\">\n<td align=\"center\"><var>1</var></td>\n<td align=\"center\"><var>0</var></td>\n<td align=\"center\"><var>1</var></td>\n</tr>\n<tr align=\"center\">\n<td align=\"center\"><var>1</var></td>\n<td align=\"center\"><var>1</var></td>\n<td align=\"center\"><var>1</var></td>\n</tr>\n</tbody>\n</table>\n\n<p>The logical sum yields <var>1</var> if at least one of the bits <var>x</var> and <var>y</var> is <var>1</var>.\nConversely, it yields <var>0</var> only if both of them are <var>0</var>.</p>\n\n<h5>Example</h5>\n<pre>0110 | 0101 = 0111</pre>\n\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 5\\times 10^5</var></li>\n<li><var>0\\leq A_i,B_i \\leq 31</var></li>\n<li>All values in the input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>A_0</var> <var>A_1</var> <var>\\ldots</var> <var>A_{N-1}</var>\n<var>B_0</var> <var>B_1</var> <var>\\ldots</var> <var>B_{N-1}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the maximum possible <var>\\displaystyle\\sum_{i=0}^{N-1} (A_i|B_i)</var>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3\n0 1 3\n0 2 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>8\n</pre>\n<p>If Takahashi does not perform the operation, <var>A</var> remains <var>(0,1,3)</var>, and we have <var>\\displaystyle\\sum_{i=0}^{N-1} (A_i|B_i)=(0|0)+(1|2)+(3|3)=0+3+3=6</var>;<br>\nif he performs the operation once, making <var>A=(1,3,0)</var>, we have <var>\\displaystyle\\sum_{i=0}^{N-1} (A_i|B_i)=(1|0)+(3|2)+(0|3)=1+3+3=7</var>; and<br>\nif he performs the operation twice, making <var>A=(3,0,1)</var>, we have <var>\\displaystyle\\sum_{i=0}^{N-1} (A_i|B_i)=(3|0)+(0|2)+(1|3)=3+2+3=8</var>.<br>\nIf he performs the operation three or more times, <var>A</var> becomes one of the sequences above, so the maximum possible <var>\\displaystyle\\sum_{i=0}^{N-1} (A_i|B_i)</var> is <var>8</var>, which should be printed.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5\n1 6 1 4 3\n0 6 4 0 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>23\n</pre>\n<p>The value is maximized if he performs the operation three times, making <var>A=(4,3,1,6,1)</var>,<br>\nwhere <var>\\displaystyle\\sum_{i=0}^{N-1} (A_i|B_i)=(4|0)+(3|6)+(1|4)+(6|0)+(1|1)=4+7+5+6+1=23</var>.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc291/tasks/abc291_g"}