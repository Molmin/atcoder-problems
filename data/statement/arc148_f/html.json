{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1000</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><strong>この問題は output-only です。</strong> </p>\n<p>符号無し 64 bit 整数の加算・乗算・ <var>998244353</var> を除数とする modulo 演算ができるプログラミング言語があります。<br>\nこの言語を用いて <var>\\text{mod }1000000007</var> における乗算を行うプログラムを作成してください。</p>\n<p>厳密に説明すると、<var>0</var> 以上 <var>1000000006</var> 以下の整数 <var>a,b</var> が与えられたときに <var>a \\times b \\bmod{1000000007}</var> を計算するプログラムを、以下の <strong>仕様</strong>・<strong>形式</strong> に従って作成してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>プログラムの仕様</h3><p>このプログラムでは、英大文字で表される <var>A, B, \\dots, Z</var> の <var>26</var> 個の <strong>変数</strong> を扱うことが出来る。<br>\n各変数は <var>0</var> 以上 <var>2^{64}</var> 未満の整数値 (以下 <strong>符号無し 64 bit 整数</strong> と表記) を保持することが出来る。<br>\nプログラムの実行開始時点で、<var>A</var> には整数 <var>a</var> が、<var>B</var> には整数 <var>b</var> が、それ以外の変数には <var>0</var> が代入されている。<br>\nプログラムの実行終了時点で変数 <var>C</var> に <var>a \\times b \\bmod{1000000007}</var> が保持されている必要がある。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>プログラムの形式</h3><p>プログラムの <var>1</var> 行目にはプログラムの命令数を表す整数 <var>N</var> <var>(1 \\leq N \\leq 100)</var> が書かれる。<br>\nプログラムの <var>2</var> 行目から <var>N + 1</var> 行目には <var>N</var> 個の命令が書かれる。命令は上から下に順次実行される。<br>\n命令は次の 3 つのいずれかである。</p>\n<ul>\n<li><code>add x y z</code><ul>\n<li><var>x</var> に <var>(y + z) \\bmod{2^{64}}</var> を代入する。ここでは <var>x</var> は変数、<var>y, z</var> は変数または符号無し 64 bit 整数である。</li>\n</ul>\n</li>\n<li><code>mul x y z</code><ul>\n<li><var>x</var> に <var>y \\times z \\bmod{2^{64}}</var> を代入する。ここでは <var>x</var> は変数、<var>y, z</var> は変数または符号無し 64 bit 整数である。</li>\n</ul>\n</li>\n<li><code>rem x y</code><ul>\n<li><var>x</var> に <var>y \\bmod{998244353}</var> を代入する。ここでは <var>x</var> は変数、<var>y</var> は変数または符号無し 64 bit 整数である。</li>\n</ul>\n</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>標準入力から与えられる入力は空である。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>問題文に書かれている仕様・形式に従ったプログラムを出力せよ。  </p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>ジャッジ</h3><p>提出されたプログラムの形式が誤っていた場合、ジャッジの判定は不定である。<br>\n提出されたプログラムの形式が正しい場合、ジャッジは <var>1</var> ケース毎に <var>10^4</var> 個の整数の組 <var>(a, b)</var> <var>(0 \\leq a, b \\leq 1000000006)</var> に対してプログラムを独立に実行する。(整数の組はジャッジ側があらかじめ用意したものであり、テストケース毎に固定である。)<br>\n全ての <var>(a, b)</var> の組に対して実行終了時に変数 <var>C</var> に <var>a \\times b \\bmod{1000000007}</var> が保持されている場合、ジャッジの判定は <code>AC</code> となる。そうでない場合は <code>WA</code> となる。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例</h3><p>正しい形式で書かれたプログラムの例を示します。(このプログラムは仕様を満たしていないため、提出しても <code>WA</code> となります。)</p>\n<pre>5\nmul C A B\nrem C C\nadd A A 10\nadd D 2 B\nadd E 1 0\n</pre>\n<p>このプログラムの実行終了時点で各変数に代入されている値は次の通りです。</p>\n<ul>\n<li><var>A</var> : <var>a + 10</var></li>\n<li><var>B</var> : <var>b</var></li>\n<li><var>C</var> : <var>a \\times b \\bmod{998244353}</var></li>\n<li><var>D</var> : <var>b + 2</var></li>\n<li><var>E</var> : <var>1</var></li>\n<li>それ以外の変数 : <var>0</var></li>\n</ul></section>\n</div>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1000</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p><strong>This problem is output-only.</strong> </p>\n<p>We have a programming language equipped with the following operations of unsigned 64-bit integers: addition, multiplication, and a modulo operation where the divisor is <var>998244353</var>.<br>\nWrite a program that performs multiplication modulo <var>1000000007</var> in this language.</p>\n<p>More formally, write a program that receives integers <var>a</var> and <var>b</var> between <var>0</var> and <var>1000000006</var> and computes <var>a \\times b \\bmod{1000000007}</var> under the following <strong>Specification</strong> and <strong>Format</strong>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Specification</h3><p>The program can handle <var>26</var> <strong>variables</strong> represented by uppercase English letters: <var>A, B, \\dots, Z</var>.<br>\nEach variable can hold an integer value between <var>0</var> and <var>2^{64}-1</var> (inclusive). Below, such a value is called <strong>unsigned 64-bit integer</strong>.<br>\nAt the start of the execution of the program, <var>A</var> is assigned an integer <var>a</var>, <var>B</var> is assigned an integer <var>b</var>, and the other variables are assigned <var>0</var>.<br>\nAt the end of the execution, <var>C</var> must hold <var>a \\times b \\bmod{1000000007}</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Format</h3><p>The <var>1</var>-st line of the program contains an integer <var>N</var> <var>(1 \\leq N \\leq 100)</var> representing the number of instructions in the program.<br>\nThe <var>2</var>-nd through <var>(N + 1)</var>-th lines contain <var>N</var> instructions. The instructions are executed one by one from top to bottom.<br>\nEach instruction is in one of the following three forms.</p>\n<ul>\n<li><code>add x y z</code><ul>\n<li>Assign <var>(y + z) \\bmod{2^{64}}</var> to <var>x</var>, where <var>x</var> is a variable, and each of <var>y</var> and <var>z</var> is a variable or an unsigned 64-bit integer.</li>\n</ul>\n</li>\n<li><code>mul x y z</code><ul>\n<li>Assign <var>(y \\times z) \\bmod{2^{64}}</var> to <var>x</var>, where <var>x</var> is a variable, and each of <var>y</var> and <var>z</var> is a variable or an unsigned 64-bit integer.</li>\n</ul>\n</li>\n<li><code>rem x y</code><ul>\n<li>Assign <var>y \\bmod{998244353}</var> to <var>x</var>, where <var>x</var> is a variable, and <var>y</var> is a variable or an unsigned 64-bit integer.</li>\n</ul>\n</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input given from Standard Input is empty.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print a program under the Specification and Format.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Judging</h3><p>If the submitted program is malformed, the verdict will be indeterminate.<br>\nIf the submitted program is well-formed, for each test case, the judge will execute it against <var>10^4</var> pairs of integers <var>(a, b)</var> <var>(0 \\leq a, b \\leq 1000000006)</var> independently. (These pairs are prepared beforehand and constant for each test case.)<br>\nIf the variable <var>C</var> holds <var>a \\times b \\bmod{1000000007}</var> at the end of the execution for all pairs <var>(a, b)</var>, the verdict will be <code>AC</code>; otherwise, it will be <code>WA</code>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output</h3><p>Here is an example of a well-formed program. (The Specification is not satisfied, so it will be judged as <code>WA</code> if submitted.)</p>\n<pre>5\nmul C A B\nrem C C\nadd A A 10\nadd D 2 B\nadd E 1 0\n</pre>\n<p>At the end of the execution of this program, the variables will hold the following values.</p>\n<ul>\n<li><var>A</var>: <var>a + 10</var></li>\n<li><var>B</var>: <var>b</var></li>\n<li><var>C</var>: <var>a \\times b \\bmod{998244353}</var></li>\n<li><var>D</var>: <var>b + 2</var></li>\n<li><var>E</var>: <var>1</var></li>\n<li>The others: <var>0</var></li>\n</ul></section>\n</div>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc148/tasks/arc148_f"}