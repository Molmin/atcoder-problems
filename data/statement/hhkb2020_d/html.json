{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>400</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>整数 <var>N</var>, <var>A</var>, <var>B</var> が与えられます。</p>\n<p>辺の長さが <var>N</var> の白い正方形を座標平面の <var>(0,0), (N,0), (0,N), (N,N)</var> に <var>4</var> 頂点が重なるように置きます。</p>\n<p>次に、この白い正方形の内部または周上に収まるように、辺の長さが <var>A</var> の青い正方形と辺の長さが <var>B</var> の赤い正方形を <var>1</var> つずつ置きます。</p>\n<p>ただし、正方形のどの辺も <var>x</var> 軸または <var>y</var> 軸と平行に置かれている必要があります。</p>\n<p>また、青い正方形と赤い正方形の各頂点は格子点上に置かれている必要があります。</p>\n<p>赤い正方形の内部と青い正方形の内部が重ならないように置く方法の数を <var>1,000,000,007</var> で割ったあまりを求めてください。</p>\n<p><var>1</var> つの入力につき、<var>T</var> 個のテストケースに答えてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq T \\leq 10^5</var></li>\n<li><var>1 \\leq N \\leq 10^9</var></li>\n<li><var>1 \\leq A \\leq N</var></li>\n<li><var>1 \\leq B \\leq N</var></li>\n<li>入力は全て整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。入力の <var>1</var> 行目は以下のとおりである。</p>\n<pre><var>T</var>\n</pre>\n\n<p>そして、 <var>T</var> 個のテストケースが続く。これらはそれぞれ以下の形式で与えられる。</p>\n<pre><var>N</var> <var>A</var> <var>B</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>各テストケースについて、赤い正方形と青い正方形の内部が重ならないように置く方法の数を <var>1,000,000,007</var> で割ったあまりを出力せよ。\n各テストケースごとに改行せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3\n3 1 2\n4 2 2\n331895368 154715807 13941326\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>20\n32\n409369707\n</pre>\n\n<p>例えば最初のテストケースでは、重なりを気にせず青い正方形を置く方法が <var>9</var> 通り、赤い正方形を置く方法が <var>4</var> 通りあります。</p>\n<p>赤い正方形をどこに置いても、赤い正方形の内部に重なるような青い正方形の置き方は <var>4</var> 通りずつあります。</p>\n<p>よって、赤い正方形の内部と青い正方形の内部が重ならないように置く方法の数は、\n<var>9 \\times 4 - 4 \\times 4 = 20</var> 通りです。</p>\n<p>赤い正方形と青い正方形が周上のみを共有するとき、例えば青い正方形の左下の頂点が <var>(0,0)</var>、赤い正方形の左下の頂点が <var>(0,1)</var> のときは赤い正方形と青い正方形の内部が重なっていないことに注意してください。</p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>400</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Given are integers <var>N</var>, <var>A</var>, and <var>B</var>.</p>\n<p>We will place a white square whose side is of length <var>N</var> on the coordinate plane so that the vertices are at <var>(0, 0)</var>, <var>(N, 0)</var>, <var>(0, N)</var>, and <var>(N, N)</var>.</p>\n<p>Then, we will place a blue square whose side is of length <var>A</var> and a red square whose side is of length <var>B</var> so that these squares are inside the white square (including its boundary).</p>\n<p>Here, each side of these squares must be parallel to the <var>x</var>- or <var>y</var>-axis.</p>\n<p>Additionally, each vertex of red and blue squares must be at an integer point.</p>\n<p>Find the number of ways to place red and blue squares so that they do not strictly overlap (they may share boundary with each other), modulo <var>1,000,000,007</var>.</p>\n<p>Solve this problem for <var>T</var> test cases in each input file.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq T \\leq 10^5</var></li>\n<li><var>1 \\leq N \\leq 10^9</var></li>\n<li><var>1 \\leq A \\leq N</var></li>\n<li><var>1 \\leq B \\leq N</var></li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input as follows. The first line of input is in the format below:</p>\n<pre><var>T</var>\n</pre>\n\n<p>Then, <var>T</var> test cases follow, each of which is in the format below:</p>\n<pre><var>N</var> <var>A</var> <var>B</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>For each test case, print the number of ways to place red and blue squares so that they do not strictly overlap, modulo <var>1,000,000,007</var>.\nUse one line for each test case.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3\n3 1 2\n4 2 2\n331895368 154715807 13941326\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>20\n32\n409369707\n</pre>\n\n<p>For example, in the first test case, there are <var>9</var> ways to place the blue squares and <var>4</var> ways to place the red squares, ignoring overlap.</p>\n<p>Wherever we place the red square, there are <var>4</var> ways to place the blue square so that it strictly overlaps with the red square.</p>\n<p>Thus, there are <var>9 \\times 4 - 4 \\times 4 = 20</var> ways to place red and blue squares so that they do not strictly overlap.</p>\n<p>Note that the squares may share boundary with each other. For example, when the bottom-left vertices of blue and red squares are <var>(0, 0)</var> and <var>(0, 1)</var>, respectively, the squares do not strictly overlap.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/hhkb2020/tasks/hhkb2020_d"}