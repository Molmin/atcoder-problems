{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>500</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>2</var> 行 <var>L</var> 列のマス目があります。\n上から <var>i</var> 行目 <var>(i\\in\\lbrace1,2\\rbrace)</var>、左から <var>j</var> 列目 <var>(1\\leq j\\leq L)</var>のマス目を <var>(i,j)</var> で表します。\n<var>(i,j)</var> には整数 <var>x _ {i,j}</var> が書かれています。</p>\n<p><var>x _ {1,j}=x _ {2,j}</var> であるような整数 <var>j</var> の個数を求めてください。</p>\n<p>ただし、<var>x _ {i,j}</var> の情報は <var>(x _ {1,1},x _ {1,2},\\ldots,x _ {1,L})</var> と <var>(x _ {2,1},x _ {2,2},\\ldots,x _ {2,L})</var> をそれぞれ連長圧縮した、長さ <var>N _ 1</var> の列 <var>((v _ {1,1},l _ {1,1}),\\ldots,(v _ {1,N _ 1},l _ {1,N _ 1}))</var> と長さ <var>N _ 2</var> の列 <var>((v _ {2,1},l _ {2,1}),\\ldots,(v _ {2,N _ 2},l _ {2,N _ 2}))</var> として与えられます。</p>\n<p>ここで、列 <var>A</var> の連長圧縮とは、<var>A</var> の要素 <var>v _ i</var> と正整数 <var>l _ i</var> の組 <var>(v _ i,l _ i)</var> の列であって、次の操作で得られるものです。</p>\n<ol>\n<li><var>A</var> を異なる要素が隣り合っている部分で分割する。</li>\n<li>分割した各列 <var>B _ 1,B _ 2,\\ldots,B _ k</var> に対して、<var>v _ i</var> を <var>B _ i</var> の要素、<var>l _ i</var> を <var>B _ i</var> の長さとする。</li>\n</ol>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1\\leq L\\leq 10 ^ {12}</var></li>\n<li><var>1\\leq N _ 1,N _ 2\\leq 10 ^ 5</var></li>\n<li><var>1\\leq v _ {i,j}\\leq 10 ^ 9\\ (i\\in\\lbrace1,2\\rbrace,1\\leq j\\leq N _ i)</var></li>\n<li><var>1\\leq l _ {i,j}\\leq L\\ (i\\in\\lbrace1,2\\rbrace,1\\leq j\\leq N _ i)</var></li>\n<li><var>v _ {i,j}\\neq v _ {i,j+1}\\ (i\\in\\lbrace1,2\\rbrace,1\\leq j\\lt N _ i)</var></li>\n<li><var>l _ {i,1}+l _ {i,2}+\\cdots+l _ {i,N _ i}=L\\ (i\\in\\lbrace1,2\\rbrace)</var></li>\n<li>入力はすべて整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>L</var> <var>N _ 1</var> <var>N _ 2</var>\n<var>v _ {1,1}</var> <var>l _ {1,1}</var>\n<var>v _ {1,2}</var> <var>l _ {1,2}</var>\n<var>\\vdots</var>\n<var>v _ {1,N _ 1}</var> <var>l _ {1,N _ 1}</var>\n<var>v _ {2,1}</var> <var>l _ {2,1}</var>\n<var>v _ {2,2}</var> <var>l _ {2,2}</var>\n<var>\\vdots</var>\n<var>v _ {2,N _ 2}</var> <var>l _ {2,N _ 2}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>答えを <var>1</var> 行で出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>8 4 3\n1 2\n3 2\n2 3\n3 1\n1 4\n2 1\n3 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>4\n</pre>\n<p>マス目は以下の図のようになっています。</p>\n<p><img src=\"https://img.atcoder.jp/abc294/14f38720983c464a322b504738344f24.png\"></p>\n<p><var>x _ {1,j}=x _ {2,j}</var> となるような整数 <var>j</var> は、<var>j=1,2,5,8</var> の <var>4</var> つなので、出力すべき値は <var>4</var> です。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>10000000000 1 1\n1 10000000000\n1 10000000000\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>10000000000\n</pre>\n<p>答えが <var>32\\operatorname{bit}</var> 整数に収まらない場合があることに注意してください。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>1000 4 7\n19 79\n33 463\n19 178\n33 280\n19 255\n33 92\n34 25\n19 96\n12 11\n19 490\n33 31\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>380\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>500</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>We have a grid with <var>2</var> rows and <var>L</var> columns.\nLet <var>(i,j)</var> denote the square at the <var>i</var>-th row from the top <var>(i\\in\\lbrace1,2\\rbrace)</var> and <var>j</var>-th column from the left <var>(1\\leq j\\leq L)</var>.\n<var>(i,j)</var> has an integer <var>x _ {i,j}</var> written on it.</p>\n<p>Find the number of integers <var>j</var> such that <var>x _ {1,j}=x _ {2,j}</var>.</p>\n<p>Here, the description of <var>x _ {i,j}</var> is given to you as the run-length compressions of <var>(x _ {1,1},x _ {1,2},\\ldots,x _ {1,L})</var> and <var>(x _ {2,1},x _ {2,2},\\ldots,x _ {2,L})</var> into sequences of lengths <var>N _ 1</var> and <var>N _ 2</var>, respectively: <var>((v _ {1,1},l _ {1,1}),\\ldots,(v _ {1,N _ 1},l _ {1,N _ 1}))</var> and <var>((v _ {2,1},l _ {2,1}),\\ldots,(v _ {2,N _ 2},l _ {2,N _ 2}))</var>.</p>\n<p>Here, the run-length compression of a sequence <var>A</var> is a sequence of pairs <var>(v _ i,l _ i)</var> of an element <var>v _ i</var> of <var>A</var> and a positive integer <var>l _ i</var> obtained as follows.</p>\n<ol>\n<li>Split <var>A</var> between each pair of different adjacent elements.</li>\n<li>For each sequence <var>B _ 1,B _ 2,\\ldots,B _ k</var> after the split, let <var>v _ i</var> be the element of <var>B _ i</var> and <var>l _ i</var> be the length of <var>B _ i</var>.</li>\n</ol>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1\\leq L\\leq 10 ^ {12}</var></li>\n<li><var>1\\leq N _ 1,N _ 2\\leq 10 ^ 5</var></li>\n<li><var>1\\leq v _ {i,j}\\leq 10 ^ 9\\ (i\\in\\lbrace1,2\\rbrace,1\\leq j\\leq N _ i)</var></li>\n<li><var>1\\leq l _ {i,j}\\leq L\\ (i\\in\\lbrace1,2\\rbrace,1\\leq j\\leq N _ i)</var></li>\n<li><var>v _ {i,j}\\neq v _ {i,j+1}\\ (i\\in\\lbrace1,2\\rbrace,1\\leq j\\lt N _ i)</var></li>\n<li><var>l _ {i,1}+l _ {i,2}+\\cdots+l _ {i,N _ i}=L\\ (i\\in\\lbrace1,2\\rbrace)</var></li>\n<li>All values in the input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>L</var> <var>N _ 1</var> <var>N _ 2</var>\n<var>v _ {1,1}</var> <var>l _ {1,1}</var>\n<var>v _ {1,2}</var> <var>l _ {1,2}</var>\n<var>\\vdots</var>\n<var>v _ {1,N _ 1}</var> <var>l _ {1,N _ 1}</var>\n<var>v _ {2,1}</var> <var>l _ {2,1}</var>\n<var>v _ {2,2}</var> <var>l _ {2,2}</var>\n<var>\\vdots</var>\n<var>v _ {2,N _ 2}</var> <var>l _ {2,N _ 2}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print a single line containing the answer.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>8 4 3\n1 2\n3 2\n2 3\n3 1\n1 4\n2 1\n3 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>4\n</pre>\n<p>The grid is shown below.</p>\n<p><img src=\"https://img.atcoder.jp/abc294/14f38720983c464a322b504738344f24.png\"></p>\n<p>We have four integers <var>j</var> such that <var>x _ {1,j}=x _ {2,j}</var>: <var>j=1,2,5,8</var>. Thus, you should print <var>4</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>10000000000 1 1\n1 10000000000\n1 10000000000\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>10000000000\n</pre>\n<p>Note that the answer may not fit into a <var>32</var>-bit integer.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>1000 4 7\n19 79\n33 463\n19 178\n33 280\n19 255\n33 92\n34 25\n19 96\n12 11\n19 490\n33 31\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>380\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc294/tasks/abc294_e"}