{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>800</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点の完全グラフ <var>G</var> の辺に正整数の番号を付ける方法のうち、以下の条件を満たすものを「良い完全グラフ」と言うことにします。</p>\n<ul>\n<li><var>N</var> 個の頂点を全てちょうど <var>1</var> 回ずつ通るパスのうち、通った辺の番号を通った順に並べた数列が広義単調増加になるものが存在しない。</li>\n</ul>\n<p>「良い完全グラフ」が存在するか判定し、存在する場合は「辺に付ける正整数の番号の最大値」が最小になるものを <var>1</var> 個構築してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\le N \\le 20</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>「良い完全グラフ」が存在しない場合、<code>No</code> と出力せよ。</p>\n<p>「良い完全グラフ」が存在する場合、以下のように出力せよ。ここで、<var>a_{i,j}</var> は頂点 <var>i</var> と頂点 <var>j</var> を結ぶ無向辺に付けられる番号とする。</p>\n<pre>Yes\n<var>a_{1,2}</var> <var>a_{1,3}</var> <var>a_{1,4}</var> <var>\\dots</var> <var>a_{1,N}</var>\n<var>a_{2,3}</var> <var>a_{2,4}</var> <var>\\dots</var> <var>a_{2,N}</var>\n<var>\\vdots</var>\n<var>a_{N-1,N}</var>\n</pre>\n<p>条件を満たす解が複数存在する場合、どれを出力しても正解とみなされる。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>Yes\n2 1 4 4\n4 3 1\n1 3\n2\n</pre>\n<p>例えば頂点 <var>2,5,1,4,3</var> の順に通るパスの場合、通った辺の番号を通った順に並べた数列は <var>(1,4,4,1)</var> となるため、広義単調増加ではありません。</p>\n<p>他にも通った辺の番号を通った順に並べた数列が広義単調増加となるパスが存在しないため、このグラフは条件を満たします。</p>\n<p>また、<var>N=5</var> の場合「辺に付ける正整数の番号の最大値」を <var>3</var> 以下にすることはできないため、この出力は正当です。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>No\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>800</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Among the ways to label the edges of a complete graph <var>G</var> with <var>N</var> vertices with positive integers, a graph satisfying the following condition is called a \"good complete graph\".</p>\n<ul>\n<li>There exists no path that visits all <var>N</var> vertices exactly once and whose sequence of edge labels, in the order the edges are traversed, is non-decreasing.</li>\n</ul>\n<p>Determine whether a good complete graph exists. If it exists, construct one that minimizes the maximum label assigned to an edge.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 20</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If a good complete graph does not exist, print <code>No</code>.</p>\n<p>If it exists, print one as follows. Let <var>a_{i,j}</var> be the label assigned to the undirected edge connecting vertices <var>i</var> and <var>j</var>.</p>\n<pre>Yes\n<var>a_{1,2}</var> <var>a_{1,3}</var> <var>a_{1,4}</var> <var>\\dots</var> <var>a_{1,N}</var>\n<var>a_{2,3}</var> <var>a_{2,4}</var> <var>\\dots</var> <var>a_{2,N}</var>\n<var>\\vdots</var>\n<var>a_{N-1,N}</var>\n</pre>\n<p>If multiple solutions exist, you may print any of them.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>Yes\n2 1 4 4\n4 3 1\n1 3\n2\n</pre>\n<p>For example, consider the path that visits vertices in the order <var>2, 5, 1, 4, 3</var>. The sequence of edge labels traversed is <var>(1, 4, 4, 1)</var>, which is not non-decreasing.</p>\n<p>Moreover, there is no path whose sequence of edge labels is non-decreasing, so this graph satisfies the condition.</p>\n<p>Also, when <var>N=5</var>, it is impossible to assign labels so that the maximum label assigned to an edge is <var>3</var> or less, so this output is valid.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>No\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc189/tasks/arc189_e"}