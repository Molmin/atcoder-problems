{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>500</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>AtCoder 国には、町 <var>1</var> から町 <var>N</var> までの <var>N</var> 個の町と、道路 <var>1</var> から道路 <var>M</var> までの <var>M</var> 本の道路があります。<br>\n道路 <var>i</var> は町 <var>A_i</var> から町 <var>B_i</var> への一方通行で、通るのに <var>C_i</var> 分かかります。<var>A_i = B_i</var> かもしれませんし、同じ町の組を結ぶ道路が複数あるかもしれません。<br>\n高橋君はこの国で散歩をしようと考えました。ある町から出発し、<var>1</var> 本以上の道路を通り、出発した町に帰ってくるような経路を<strong>正しい散歩経路</strong>と呼ぶことにします。<br>\n各町について、その町から出発する正しい散歩経路が存在するかを判定してください。また、存在するなら、そのような経路を通るのにかかる時間の最小値を求めてください。  </p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\le N \\le 2000</var></li>\n<li><var>1 \\le M \\le 2000</var></li>\n<li><var>1 \\le A_i \\le N</var></li>\n<li><var>1 \\le B_i \\le N</var></li>\n<li><var>1 \\le C_i \\le 10^5</var></li>\n<li>入力は全て整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>A_1</var> <var>B_1</var> <var>C_1</var>\n<var>A_2</var> <var>B_2</var> <var>C_2</var>\n<var>A_3</var> <var>B_3</var> <var>C_3</var>\n<var>\\hspace{25pt} \\vdots</var>\n<var>A_M</var> <var>B_M</var> <var>C_M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>N</var> 行に渡って出力せよ。 <var>i(1 \\le i \\le N)</var> 行目には以下を出力せよ。</p>\n<ul>\n<li>町 <var>i</var> から出発する正しい散歩経路が存在するなら、そのような経路を通るのにかかる時間の最小値</li>\n<li>存在しないなら <code>-1</code></li>\n</ul>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>4 4\n1 2 5\n2 3 10\n3 1 15\n4 3 20\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>30\n30\n30\n-1\n</pre>\n<p>道路 <var>1, 2, 3</var> によって、町 <var>1, 2, 3</var> は一周に <var>30</var> 分かかる一つの輪のように繋がっています。<br>\n町 <var>4</var> から町 <var>1, 2, 3</var> に行くことはできますが、町 <var>4</var> に帰ってくることはできません。  </p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>4 6\n1 2 5\n1 3 10\n2 4 5\n3 4 10\n4 1 10\n1 1 10\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>10\n20\n30\n20\n</pre>\n<p><var>A_i = B_i</var> であるような道路が存在するかもしれません。<br>\nこの場合、町 <var>1</var> からは、道路 <var>6</var> だけを使って <var>10</var> 分で町 <var>1</var> に帰ってくることができます。  </p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>4 7\n1 2 10\n2 3 30\n1 4 15\n3 4 25\n3 4 20\n4 3 20\n4 3 30\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>-1\n-1\n40\n40\n</pre>\n<p>同じ町の組を結ぶ道路が複数あるかもしれないことに注意してください。  </p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>500</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>In the Republic of AtCoder, there are <var>N</var> towns numbered <var>1</var> through <var>N</var> and <var>M</var> roads numbered <var>1</var> through <var>M</var>.<br>\nRoad <var>i</var> is a one-way road from Town <var>A_i</var> to Town <var>B_i</var>, and it takes <var>C_i</var> minutes to go through. It is possible that <var>A_i = B_i</var>, and there may be multiple roads connecting the same pair of towns.<br>\nTakahashi is thinking about taking a walk in the country. We will call a walk <strong>valid</strong> when it goes through one or more roads and returns to the town it starts at.<br>\nFor each town, determine whether there is a valid walk that starts at that town. Additionally, if the answer is yes, find the minimum time such a walk requires.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\le N \\le 2000</var></li>\n<li><var>1 \\le M \\le 2000</var></li>\n<li><var>1 \\le A_i \\le N</var></li>\n<li><var>1 \\le B_i \\le N</var></li>\n<li><var>1 \\le C_i \\le 10^5</var></li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>A_1</var> <var>B_1</var> <var>C_1</var>\n<var>A_2</var> <var>B_2</var> <var>C_2</var>\n<var>A_3</var> <var>B_3</var> <var>C_3</var>\n<var>\\hspace{25pt} \\vdots</var>\n<var>A_M</var> <var>B_M</var> <var>C_M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print <var>N</var> lines. The <var>i</var>-th line <var>(1 \\le i \\le N)</var> should contain the following:</p>\n<ul>\n<li>if there is a valid walk that starts at Town <var>i</var>, the minimum time required by such a walk;</li>\n<li>otherwise, <code>-1</code>.</li>\n</ul>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>4 4\n1 2 5\n2 3 10\n3 1 15\n4 3 20\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>30\n30\n30\n-1\n</pre>\n<p>By Roads <var>1, 2, 3</var>, Towns <var>1, 2, 3</var> forms a ring that takes <var>30</var> minutes to go around.<br>\nFrom Town <var>4</var>, we can go to Towns <var>1, 2, 3</var>, but then we cannot return to Town <var>4</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>4 6\n1 2 5\n1 3 10\n2 4 5\n3 4 10\n4 1 10\n1 1 10\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>10\n20\n30\n20\n</pre>\n<p>There may be a road such that <var>A_i = B_i</var>.<br>\nHere, we can use just Road <var>6</var> to depart from Town <var>1</var> and return to that town.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>4 7\n1 2 10\n2 3 30\n1 4 15\n3 4 25\n3 4 20\n4 3 20\n4 3 30\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>-1\n-1\n40\n40\n</pre>\n<p>Note that there may be multiple roads connecting the same pair of towns.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc191/tasks/abc191_e"}