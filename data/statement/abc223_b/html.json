{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>200</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>空でない文字列に対し、先頭の文字を末尾に移動する操作を<strong>左シフト</strong>、末尾の文字を先頭に移動する操作を<strong>右シフト</strong>と呼びます。</p>\n<p>例えば、<code>abcde</code> に対して左シフトを <var>1</var> 回行うと <code>bcdea</code> となり、右シフトを <var>2</var> 回行うと <code>deabc</code> となります。</p>\n<p>英小文字からなる空でない文字列 <var>S</var> が与えられます。<var>S</var> に対し左シフトと右シフトをそれぞれ好きな回数（<var>0</var> 回でもよい）行って得られる文字列のうち、辞書順で最小のものと最大のものを求めてください。</p>\n<details>\n<summary>辞書順とは？</summary>\n<p>\n辞書順とは簡単に説明すると「単語が辞書に載っている順番」を意味します。より厳密な説明として、英小文字からなる相異なる文字列 <var>S, T</var> の大小を判定するアルゴリズムを以下に説明します。\n</p>\n\n<p>以下では「 <var>S</var> の <var>i</var> 文字目の文字」を <var>S_i</var> のように表します。また、 <var>S</var> が <var>T</var> より辞書順で小さい場合は <var>S \\lt T</var> 、大きい場合は <var>S \\gt T</var> と表します。</p>\n\n<ol>\n  <li> <var>S, T</var> のうち長さが大きくない方の文字列の長さを <var>L</var> とします。<var>i=1,2,\\dots,L</var> に対して <var>S_i</var> と <var>T_i</var> が一致するか調べます。 </li>\n  <li> <var>S_i \\neq T_i</var> である <var>i</var> が存在する場合、そのような <var>i</var> のうち最小のものを <var>j</var> とします。そして、<var>S_j</var> と <var>T_j</var> を比較して、<var>S_j</var> が <var>T_j</var> よりアルファベット順で小さい場合は <var>S \\lt T</var> 、そうでない場合は <var>S \\gt T</var> と決定して、アルゴリズムを終了します。\n  </li>\n  <li> <var>S_i \\neq T_i</var> である <var>i</var> が存在しない場合、<var>S</var> と <var>T</var> の長さを比較して、<var>S</var> が <var>T</var> より短い場合は <var>S \\lt T</var> 、長い場合は <var>S \\gt T</var> と決定して、アルゴリズムを終了します。 </li>\n</ol>\n\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>S</var> は英小文字からなる。</li>\n<li><var>S</var> の長さは <var>1</var> 以上 <var>1000</var> 以下である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>S</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>2</var> 行にわたって出力せよ。<var>S</var> に対し左シフトと右シフトをそれぞれ好きな回数（<var>0</var> 回でもよい）行って得られる文字列のうち、辞書順で最小のものと最大のものをそれぞれ <var>S_{\\min}, S_{\\max}</var> とおいたとき、<var>1</var> 行目には <var>S_{\\min}</var> を、<var>2</var> 行目には <var>S_{\\max}</var> を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>aaba\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>aaab\nbaaa\n</pre>\n<p>操作によって、<code>aaab</code> <var>,</var> <code>aaba</code> <var>,</var> <code>abaa</code> <var>,</var> <code>baaa</code> の <var>4</var> 通りの文字列を得ることができます。\nこれらのうち辞書順で最小、最大のものはそれぞれ <code>aaab</code> <var>,</var> <code>baaa</code> です。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>z\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>z\nz\n</pre>\n<p>どのように操作を行っても、得られる文字列は <code>z</code> のみです。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>abracadabra\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>aabracadabr\nracadabraab\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>200</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>On a non-empty string, a <strong>left shift</strong> moves the first character to the end of the string, and a <strong>right shift</strong> moves the last character to the beginning of the string.</p>\n<p>For example, a left shift on <code>abcde</code> results in <code>bcdea</code>, and two right shifts on <code>abcde</code> result in <code>deabc</code>.</p>\n<p>You are given a non-empty <var>S</var> consisting of lowercase English letters. Among the strings that can be obtained by performing zero or more left shifts and zero or more right shifts on <var>S</var>, find the lexicographically smallest string and the lexicographically largest string.</p>\n<details>\n<summary>What is the lexicographical order?</summary>\n<p>\nSimply speaking, the lexicographical order is the order in which words are listed in a dictionary. As a more formal definition, here is the algorithm to determine the lexicographical order between different strings <var>S</var> and <var>T</var>.\n</p>\n\n<p>Below, let <var>S_i</var> denote the <var>i</var>-th character of <var>S</var>. Also, if <var>S</var> is lexicographically smaller than <var>T</var>, we will denote that fact as <var>S \\lt T</var>; if <var>S</var> is lexicographically larger than <var>T</var>, we will denote that fact as <var>S \\gt T</var>.</p>\n\n<ol>\n  <li> Let <var>L</var> be the smaller of the lengths of <var>S</var> and <var>T</var>. For each <var>i=1,2,\\dots,L</var>, we check whether <var>S_i</var> and <var>T_i</var> are the same. </li>\n  <li> If there is an <var>i</var> such that <var>S_i \\neq T_i</var>, let <var>j</var> be the smallest such <var>i</var>. Then, we compare <var>S_j</var> and <var>T_j</var>. If <var>S_j</var> comes earlier than <var>T_j</var> in alphabetical order, we determine that <var>S \\lt T</var> and quit; if <var>S_j</var> comes later than <var>T_j</var>, we determine that <var>S \\gt T</var> and quit.\n  </li>\n  <li> If there is no <var>i</var> such that <var>S_i \\neq T_i</var>, we compare the lengths of <var>S</var> and <var>T</var>. If <var>S</var> is shorter than <var>T</var>, we determine that <var>S \\lt T</var> and quit; if <var>S</var> is longer than <var>T</var>, we determine that <var>S \\gt T</var> and quit. </li>\n</ol>\n\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>S</var> consists of lowercase English letters.</li>\n<li>The length of <var>S</var> is between <var>1</var> and <var>1000</var> (inclusive).</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>S</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print two lines. The first line should contain <var>S_{\\min}</var>, and the second line should contain <var>S_{\\max}</var>. Here, <var>S_{\\min}</var> and <var>S_{\\max}</var> are respectively the lexicographically smallest and largest strings obtained by performing zero or more left shifts and zero or more right shifts on <var>S</var>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>aaba\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>aaab\nbaaa\n</pre>\n<p>By performing shifts, we can obtain four strings: <code>aaab</code>, <code>aaba</code>, <code>abaa</code>, <code>baaa</code>. The lexicographically smallest and largest among them are <code>aaab</code> and <code>baaa</code>, respectively.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>z\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>z\nz\n</pre>\n<p>Any sequence of operations results in <code>z</code>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>abracadabra\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>aabracadabr\nracadabraab\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc223/tasks/abc223_b"}