{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1200</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>高橋君は魔法使いです。高橋君は魔法をかけることで、<var>M</var> 項からなる数列 <var>(a_1,a_2,...,a_M)</var> を、<var>s_i</var> を <var>a_1～a_i</var> の和とした数列 <var>(s_1,s_2,...,s_M)</var> に変えることができます。</p>\n<p>ある日、高橋君は <var>M</var> 項からなる数列を <var>N</var> 個もらい、順番に <var>A_1,A_2,...,A_N</var> と名付けました。さらに、高橋君は魔法をかけることで、辞書順で比較した際に <var>A_1 &lt; A_2 &lt; ... &lt; A_N</var> となるようにしようと思いました。\n高橋君が一つの数列を選んでそれに魔法をかける操作を <var>1</var> 回の魔法とします。このとき、高橋君が目標を達成するために必要な魔法の最小回数を求めてください。</p>\n<p>ただし、<var>M</var> 項からなる <var>2</var> つの数列 <var>a = (a_1,a_2,...,a_M) , b = (b_1,b_2,...,b_M)</var> が辞書順で <var>a &lt; b</var> であるとは、ある <var>i (1 ≦ i ≦ M)</var> で <var>a_j = b_j (1 ≦ j &lt; i)</var> かつ <var>a_i &lt; b_i</var> が成り立つことを指します。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 ≦ N ≦ 10^3</var></li>\n<li><var>1 ≦ M ≦ 10^3</var></li>\n<li><var>A_i</var> の <var>j</var> 項目を <var>A_{(i,j)}</var> としたとき、 <var>1 ≦ A_{(i,j)} ≦ 10^9</var></li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>部分点</h3><ul>\n<li><var>200</var> 点分のテストケースでは、<var>10^4</var> 回以下の回数で目標を達成し、かつ、どの項も <var>10^9</var> 以下となるようにすることができる。</li>\n<li>別の <var>800</var> 点分のテストケースでは、<var>A_{(i,j)} ≦ 80</var> が成立する。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>A_{(1,1)}</var> <var>A_{(1,2)}</var> <var>...</var> <var>A_{(1,M)}</var>\n<var>A_{(2,1)}</var> <var>A_{(2,2)}</var> <var>...</var> <var>A_{(2,M)}</var>\n<var>:</var>\n<var>A_{(N,1)}</var> <var>A_{(N,2)}</var> <var>...</var> <var>A_{(N,M)}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>高橋君がかける魔法の最小回数を出力せよ。ただし、高橋君が目標を達成できないならば、代わりに <code>-1</code> を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例1</h3><pre>3 3\n2 3 1\n2 1 2\n2 6 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例1</h3><pre>1\n</pre>\n<p><var>A_2</var> に対して <var>1</var> 回魔法をかけることで、<var>A_2 = (2 , 3 , 5)</var> となり、高橋君は目標を達成できます。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例2</h3><pre>3 3\n3 2 10\n10 5 4\n9 1 9\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例2</h3><pre>-1\n</pre>\n<p>この場合、何回魔法をかけても高橋君は目標を達成できません。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例3</h3><pre>5 5\n2 6 5 6 9\n2 6 4 9 10\n2 6 8 6 7\n2 1 7 3 8\n2 1 4 8 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例3</h3><pre>11\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1200</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Takahashi is a magician. He can cast a spell on an integer sequence <var>(a_1,a_2,...,a_M)</var> with <var>M</var> terms, to turn it into another sequence <var>(s_1,s_2,...,s_M)</var>, where <var>s_i</var> is the sum of the first <var>i</var> terms in the original sequence.</p>\n<p>One day, he received <var>N</var> integer sequences, each with <var>M</var> terms, and named those sequences <var>A_1,A_2,...,A_N</var>. He will try to cast the spell on those sequences so that <var>A_1 &lt; A_2 &lt; ... &lt; A_N</var> will hold, where sequences are compared lexicographically.\nLet the action of casting the spell on a selected sequence be one cast of the spell. Find the minimum number of casts of the spell he needs to perform in order to achieve his objective.</p>\n<p>Here, for two sequences <var>a = (a_1,a_2,...,a_M), b = (b_1,b_2,...,b_M)</var> with <var>M</var> terms each, <var>a &lt; b</var> holds lexicographically if and only if there exists <var>i (1 ≦ i ≦ M)</var> such that <var>a_j = b_j (1 ≦ j &lt; i)</var> and <var>a_i &lt; b_i</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 ≦ N ≦ 10^3</var></li>\n<li><var>1 ≦ M ≦ 10^3</var></li>\n<li>Let the <var>j</var>-th term in <var>A_i</var> be <var>A_{(i,j)}</var>, then <var>1 ≦ A_{(i,j)} ≦ 10^9</var>.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Partial Scores</h3><ul>\n<li>In the test set worth <var>200</var> points, Takahashi can achieve his objective by at most <var>10^4</var> casts of the spell, while keeping the values of all terms at most <var>10^9</var>.</li>\n<li>In the test set worth another <var>800</var> points, <var>A_{(i,j)} ≦ 80</var>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>A_{(1,1)}</var> <var>A_{(1,2)}</var> … <var>A_{(1,M)}</var>\n<var>A_{(2,1)}</var> <var>A_{(2,2)}</var> … <var>A_{(2,M)}</var>\n:\n<var>A_{(N,1)}</var> <var>A_{(N,2)}</var> … <var>A_{(N,M)}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the minimum number of casts of the spell Takahashi needs to perform. If he cannot achieve his objective, print <code>-1</code> instead.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 3\n2 3 1\n2 1 2\n2 6 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1\n</pre>\n<p>Takahashi can achieve his objective by casting the spell on <var>A_2</var> once to turn it into <var>(2 , 3 , 5)</var>.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>3 3\n3 2 10\n10 5 4\n9 1 9\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>-1\n</pre>\n<p>In this case, Takahashi cannot achieve his objective by casting the spell any number of times.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>5 5\n2 6 5 6 9\n2 6 4 9 10\n2 6 8 6 7\n2 1 7 3 8\n2 1 4 8 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>11\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/cf16-tournament-round2-open/tasks/asaporo_a"}