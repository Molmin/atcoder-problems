{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>400</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>H</var> 行 <var>W</var> 列のマス目を考えます。上から <var>r</var> 番目、左から <var>c</var> 番目のマスを <var>(r, c)</var> と表すことにします。\n全てのマスはそれぞれ白か黒のどちらかの色に塗られています。</p>\n<p>次のような経路が存在するとき、このマス目を\"良い\"状態と呼びます。</p>\n<ul>\n<li>常に白いマスの上にいながら、<var>(1, 1)</var> から、一つ <strong>右か下</strong> のマスに移動することを繰り返し、 <var>(H, W)</var> へ移動する。</li>\n</ul>\n<p>ここで、\"良い\"状態ならば <var>(1, 1)</var> や <var>(H, W)</var> が必ず白いことに注意してください。</p>\n<p>あなたの仕事は、以下の操作を繰り返し、マス目を\"良い\"状態にすることです。最小で何回操作を行う必要があるか求めてください。なお、有限回の操作で必ず\"良い\"状態に出来ることが証明可能です。</p>\n<ul>\n<li><var>4</var> つの整数 <var>r_0, c_0, r_1, c_1(1 \\leq r_0 \\leq r_1 \\leq H, 1 \\leq c_0 \\leq c_1 \\leq W)</var> を選ぶ。<var>r_0 \\leq r \\leq r_1, c_0 \\leq c \\leq c_1</var> を満たす全ての <var>r, c</var> について、<var>(r, c)</var> の色を変更する。つまり、白色ならば黒色にし、黒色ならば白色にする。</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq H, W \\leq 100</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>H</var> <var>W</var>\n<var>s_{11} s_{12} \\cdots s_{1W}</var>\n<var>s_{21} s_{22} \\cdots s_{2W}</var>\n <var>\\vdots</var>\n<var>s_{H1} s_{H2} \\cdots s_{HW}</var>\n</pre>\n\n<p>ここで、<var>s_{rc}</var> は <code>#</code> か <code>.</code> であり、<code>#</code> は <var>(r, c)</var> が黒色、<code>.</code> は白色であることを表す。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>最小の操作回数を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 3\n.##\n.#.\n##.\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1\n</pre>\n\n<p><var>(r_0, c_0, r_1, c_1) = (2, 2, 2, 2)</var>、つまりマス <var>(2, 2)</var> のみ色を変更すれば良いです。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>2 2\n#.\n.#\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>2\n</pre>\n\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>4 4\n..##\n#...\n###.\n###.\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>0\n</pre>\n\n<p>操作が必要ない場合も存在します。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 4</h3><pre>5 5\n.#.#.\n#.#.#\n.#.#.\n#.#.#\n.#.#.\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 4</h3><pre>4\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>400</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Consider a grid with <var>H</var> rows and <var>W</var> columns of squares. Let <var>(r, c)</var> denote the square at the <var>r</var>-th row from the top and the <var>c</var>-th column from the left.\nEach square is painted black or white.</p>\n<p>The grid is said to be <em>good</em> if and only if the following condition is satisfied:</p>\n<ul>\n<li>From <var>(1, 1)</var>, we can reach <var>(H, W)</var> by moving one square <strong>right or down</strong> repeatedly, while always being on a white square.</li>\n</ul>\n<p>Note that <var>(1, 1)</var> and <var>(H, W)</var> must be white if the grid is good.</p>\n<p>Your task is to make the grid good by repeating the operation below. Find the minimum number of operations needed to complete the task. It can be proved that you can always complete the task in a finite number of operations.</p>\n<ul>\n<li>Choose four integers <var>r_0, c_0, r_1, c_1(1 \\leq r_0 \\leq r_1 \\leq H, 1 \\leq c_0 \\leq c_1 \\leq W)</var>. For each pair <var>r, c</var> (<var>r_0 \\leq r \\leq r_1, c_0 \\leq c \\leq c_1</var>), invert the color of <var>(r, c)</var> - that is, from white to black and vice versa.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq H, W \\leq 100</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>H</var> <var>W</var>\n<var>s_{11} s_{12} \\cdots s_{1W}</var>\n<var>s_{21} s_{22} \\cdots s_{2W}</var>\n <var>\\vdots</var>\n<var>s_{H1} s_{H2} \\cdots s_{HW}</var>\n</pre>\n\n<p>Here <var>s_{rc}</var> represents the color of <var>(r, c)</var> - <code>#</code> stands for black, and <code>.</code> stands for white.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the minimum number of operations needed.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 3\n.##\n.#.\n##.\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1\n</pre>\n\n<p>Do the operation with <var>(r_0, c_0, r_1, c_1) = (2, 2, 2, 2)</var> to change just the color of <var>(2, 2)</var>, and we are done.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>2 2\n#.\n.#\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>2\n</pre>\n\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>4 4\n..##\n#...\n###.\n###.\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>0\n</pre>\n\n<p>No operation may be needed.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 4</h3><pre>5 5\n.#.#.\n#.#.#\n.#.#.\n#.#.#\n.#.#.\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 4</h3><pre>4\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc043/tasks/agc043_a"}