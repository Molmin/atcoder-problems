{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1200</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>1</var> から <var>N</var> までの番号がついた <var>N</var> 頂点からなる根付き木 <var>T</var> があります．\n頂点 <var>1</var> が根で，頂点 <var>i</var> (<var>2 \\leq i \\leq N</var>) の親は <var>P_i</var> (<var>P_i &lt; i</var>) です．</p>\n<p><var>(1,2,\\cdots,N)</var> の順列 <var>x=(x_1,x_2,\\cdots,x_N)</var> が<strong>良い</strong>順列か否かは，以下の手順で判定されます．</p>\n<ul>\n<li><var>x</var> に対する次の操作を考える．<ul>\n<li><var>x</var> の隣接する <var>2</var> 要素 <var>u,v</var> であって，<var>u,v</var> が <var>T</var> 上で先祖子孫の関係にあるものを選ぶ．<var>u,v</var> のどちらが先祖でどちらが子孫でも構わない．そして，<var>u,v</var> を swap する．</li>\n</ul>\n</li>\n<li>上記の操作を <var>0</var> 回以上行い，初期状態よりも辞書順で真に小さい順列を得ることが可能ならば，<var>x</var> は良い順列<strong>ではない</strong>．どう操作しても初期状態よりも辞書順で真に小さい順列が得られないなら，<var>x</var> は良い順列である．</li>\n</ul>\n<p>正整数 <var>B</var> が与えられます．\n順列 <var>x</var> に対し，<var>\\operatorname{hash}(x)=\\sum_{1 \\leq i \\leq N} B^{i-1} \\times x_i</var> と定義します．</p>\n<p>良い順列 <var>x</var> すべてに対する <var>\\operatorname{hash}(x)</var> の総和を <var>998244353</var> で割ったあまりを求めてください．</p>\n<details> <summary>数列の辞書順とは？</summary>\n\n<p>数列 <var>S = (S_1,S_2,\\ldots,S_{|S|})</var> が数列 <var>T = (T_1,T_2,\\ldots,T_{|T|})</var> より<strong>辞書順で小さい</strong>とは，下記の 1. と 2. のどちらかが成り立つことを言います．\nここで，<var>|S|, |T|</var> はそれぞれ <var>S, T</var> の長さを表します．</p>\n\n<ol>\n<li> <var>|S| \\lt |T|</var> かつ <var>(S_1,S_2,\\ldots,S_{|S|}) = (T_1,T_2,\\ldots,T_{|S|})</var>． </li>\n<li> ある整数 <var>1 \\leq i \\leq \\min\\lbrace |S|, |T| \\rbrace</var> が存在して，下記の <var>2</var> つがともに成り立つ．\n<ul>\n<li> <var>(S_1,S_2,\\ldots,S_{i-1}) = (T_1,T_2,\\ldots,T_{i-1})</var></li>\n<li> <var>S_i</var> が <var>T_i</var> より（数として）小さい．</li>\n</ul>\n</li></ol>\n\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 100</var></li>\n<li><var>1 \\leq B &lt; 998244353</var></li>\n<li><var>1 \\leq P_i &lt; i</var> (<var>2 \\leq i \\leq N</var>)</li>\n<li>入力される値はすべて整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる．</p>\n<pre><var>N</var> <var>B</var>\n<var>P_2</var> <var>P_3</var> <var>\\cdots</var> <var>P_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>答えを出力せよ．</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 100\n1 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>50502\n</pre>\n<p>例えば，<var>x=(3,1,2)</var> は良い順列ではありません．\nこれは先祖子孫の関係にある <var>3,1</var> を swap することで <var>(1,3,2)</var> というより小さい順列が得られるからです．</p>\n<p>このサンプルでは，良い順列は <var>x=(1,2,3),(1,3,2)</var> の <var>2</var> つです．\nよって，<var>\\operatorname{hash}((1,2,3))+\\operatorname{hash}((1,3,2))=30201+20301=50502</var> が答えになります．</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5 100\n1 2 3 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>504030201\n</pre>\n<p>このサンプルでは，どの <var>2</var> 頂点をとってもそれらは先祖子孫の関係にあります．\nよって良い順列は <var>x=(1,2,3,4,5)</var> のみです．</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>10 248730679\n1 2 1 2 5 6 1 8 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>856673861\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 4</h3><pre>20 480124393\n1 2 3 2 3 4 3 8 3 4 11 10 4 14 15 12 17 18 19\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 4</h3><pre>488941820\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1200</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There is a rooted tree <var>T</var> with <var>N</var> vertices numbered from <var>1</var> to <var>N</var>.\nVertex <var>1</var> is the root, and the parent of vertex <var>i</var> (<var>2 \\leq i \\leq N</var>) is <var>P_i</var> (<var>P_i &lt; i</var>).</p>\n<p>A permutation <var>x = (x_1, x_2, \\cdots, x_N)</var> of <var>(1, 2, \\cdots, N)</var> is judged to be a <strong>good</strong> permutation or not by the following criteria.</p>\n<ul>\n<li>Consider the following operation on <var>x</var>.<ul>\n<li>Choose two adjacent elements <var>u</var> and <var>v</var> in <var>x</var> such that <var>u</var> and <var>v</var> are in an ancestor-descendant relationship in <var>T</var>. It does not matter which is the ancestor and which is the descendant. Then, swap <var>u</var> and <var>v</var>.</li>\n</ul>\n</li>\n<li>If it is possible to obtain a permutation that is lexicographically strictly smaller than the initial state by performing the above operation zero or more times, <var>x</var> is <strong>not</strong> a good permutation. If it is impossible to obtain a permutation lexicographically smaller than the initial state by any such operations, <var>x</var> is a good permutation.</li>\n</ul>\n<p>You are given a positive integer <var>B</var>.\nFor a permutation <var>x</var>, define <var>\\operatorname{hash}(x) = \\sum_{1 \\leq i \\leq N} B^{i-1} \\times x_i</var>.</p>\n<p>Find the sum of <var>\\operatorname{hash}(x)</var> over all good permutations <var>x</var>, modulo <var>998244353</var>.</p>\n<details> <summary>What is lexicographical order on sequences?</summary>\n\n<p>A sequence <var>S = (S_1, S_2, \\ldots, S_{|S|})</var> is said to be <strong>lexicographically smaller</strong> than a sequence <var>T = (T_1, T_2, \\ldots, T_{|T|})</var> if and only if 1. or 2. below holds.\nHere, <var>|S|</var> and <var>|T|</var> denote the lengths of <var>S</var> and <var>T</var>, respectively.</p>\n\n<ol>\n<li> <var>|S| \\lt |T|</var> and <var>(S_1, S_2, \\ldots, S_{|S|}) = (T_1, T_2, \\ldots, T_{|S|})</var>.</li>\n<li> There exists an integer <var>1 \\leq i \\leq \\min\\{ |S|, |T| \\}</var> such that the following two statements hold.\n    <ul>\n    <li> <var>(S_1, S_2, \\ldots, S_{i-1}) = (T_1, T_2, \\ldots, T_{i-1})</var>.</li>\n    <li> <var>S_i</var> is smaller than <var>T_i</var> (as a number).</li>\n    </ul>\n</li>\n</ol>\n\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 100</var></li>\n<li><var>1 \\leq B &lt; 998244353</var></li>\n<li><var>1 \\leq P_i &lt; i</var> (<var>2 \\leq i \\leq N</var>)</li>\n<li>All input values are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>B</var>\n<var>P_2</var> <var>P_3</var> <var>\\cdots</var> <var>P_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the answer.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 100\n1 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>50502\n</pre>\n<p>For example, <var>x = (3, 1, 2)</var> is not a good permutation, because by swapping <var>3</var> and <var>1</var>, which are in an ancestor-descendant relationship, we can obtain <var>(1, 3, 2)</var>, a lexicographically smaller permutation.</p>\n<p>In this sample, the good permutations are <var>x = (1, 2, 3)</var> and <var>x = (1, 3, 2)</var>.\nThus, the answer is <var>\\operatorname{hash}((1,2,3)) + \\operatorname{hash}((1,3,2)) = 30201 + 20301 = 50502</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5 100\n1 2 3 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>504030201\n</pre>\n<p>In this sample, any two vertices are in an ancestor-descendant relationship.\nTherefore, the only good permutation is <var>x = (1, 2, 3, 4, 5)</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>10 248730679\n1 2 1 2 5 6 1 8 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>856673861\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 4</h3><pre>20 480124393\n1 2 3 2 3 4 3 8 3 4 11 10 4 14 15 12 17 18 19\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 4</h3><pre>488941820\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc068/tasks/agc068_d"}