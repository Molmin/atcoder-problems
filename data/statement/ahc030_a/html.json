{"html":{"ja":"<span class=\"lang-ja\">\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N\\times N</var> マスの島がある。\n一番左上のマスの座標を <var>(0,0)</var> とし、そこから下方向に <var>i</var> マス、右方向に <var>j</var> マス進んだ先のマスの座標を <var>(i,j)</var> とする。\n占い師の高橋君によると、この島の地下には <var>M</var> 個の油田が存在しているらしい。</p>\n<p>各油田は <var>1\\times 1</var> マスの正方形の辺同士を繋げた連結な <a href=\"https://ja.wikipedia.org/wiki/%E3%83%9D%E3%83%AA%E3%82%AA%E3%83%9F%E3%83%8E\">ポリオミノ</a> 型をしており、その形状と向きも占いにより事前に判明しているが、島のどこに存在するのかは不明である。\n各油田は<var>N\\times N</var> マスの範囲内に全体が収まっているが、複数個の油田が重なり、同じマスを共有している可能性がある。\n各マス <var>(i,j)</var> に対して、<strong>石油埋蔵量</strong> <var>v(i,j)</var> を、そのマスを含む油田の数として定義する。\n以下の3種類の操作を最大で <var>2 N^2</var> 回繰り返す。</p>\n<ul>\n<li>1マス選び、そのマスの地下を掘る。<var>v(i,j)</var> の値が明らかになり、1のコストが生じる。</li>\n<li>2マス以上の集合 <var>S</var> を選び、それらのマスの石油の埋蔵量の総和 <var>v(S)=\\sum_{(i,j)\\in S} v(i,j)</var> を占う。選択するマスの数が多いほどコストは低くなり、<var>k</var> マス選んだ場合に生じるコストは <var>1/\\sqrt{k}</var> である。一方で、<var>k</var> に比例して占いによって得られる情報の分散も大きくなる。事前に与えられるパラメータ <var>\\epsilon</var> を用いて、以下の平均 <var>\\mu</var> と分散 <var>\\sigma^2</var> の正規分布からサンプルされた値を <var>x</var> とする。このとき、情報として得られる値は <var>\\max(0,\\mathrm{round}(x))</var> である。<ul>\n<li>平均 <var>\\mu = (k-v(S))\\epsilon + v(S)(1-\\epsilon)</var></li>\n<li>分散 <var>\\sigma^2 = k\\epsilon (1-\\epsilon)</var></li>\n</ul>\n</li>\n<li><var>v(i,j)&gt;0</var> であるようなマスを全て推測する。正解の場合はそこで終了し、不正解の場合はコストを1払って操作を継続する。</li>\n</ul>\n<p>出来るだけ少ないコストで<var>v(i,j)&gt;0</var> であるようなマスを全て特定して欲しい。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>得点</h3><p><var>v(i,j)&gt;0</var>であるようなマスを指定された操作回数以内に全て特定出来た場合、支払ったコストの総和を <var>C</var> として、<var>\\mathrm{round}(10^6\\times \\max(C, 1/N))</var> の絶対スコアが得られる。\n特定できなかった場合は、<var>10^9</var> の絶対スコアが得られる。\n絶対スコアは小さければ小さいほど良い。</p>\n<p>各テストケース毎に、<var>\\mathrm{round}(10^9\\times \\frac{全参加者中の最小絶対スコア}{自身の絶対スコア})</var> の<font color=\"red\"><strong>相対評価スコア</strong></font>が得られ、その和が提出の得点となる。</p>\n<p>最終順位はコンテスト終了後に実施されるより多くの入力に対するシステムテストにおける得点で決定される。\n暫定テスト、システムテストともに、一部のテストケースで不正な出力や制限時間超過をした場合、そのテストケースの相対評価スコアは0点となり、そのテストケースにおいては「全参加者中の最小絶対スコア」の計算から除外される。\nシステムテストは<font color=\"red\"><strong> <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"コンパイルエラー\">CE</span> 以外の結果を得た一番最後の提出</strong></font>に対してのみ行われるため、最終的に提出する解答を間違えないよう注意せよ。</p>\n<h4>テストケース数</h4>\n<ul>\n<li>暫定テスト: 50個</li>\n<li>システムテスト: 3000個、コンテスト終了後に <a href=\"https://img.atcoder.jp/ahc030/seeds.txt\">seeds.txt</a> (sha256=45933552af3c557ff53d4e1397ef9fe10cedea89f10fe8140ceb489569dacea2) を公開</li>\n</ul>\n<h4>相対評価システムについて</h4>\n<p>暫定テスト、システムテストともに、<span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"コンパイルエラー\">CE</span> 以外の結果を得た一番最後の提出のみが順位表に反映される。\n相対評価スコアの計算に用いられる各テストケース毎の全参加者中の最小絶対スコアの算出においても、順位表に反映されている最終提出のみが用いられる。</p>\n<p>順位表に表示されているスコアは相対評価スコアであり、新規提出があるたびに、相対評価スコアが再計算される。\n一方、提出一覧から確認出来る各提出のスコアは各テストケース毎の絶対スコアをそのまま足し合わせたものであり、相対評価スコアは表示されない。\n最新以外の提出の、現在の順位表における相対評価スコアを知るためには、再提出が必要である。\n不正な出力や制限時間超過をした場合、提出一覧から確認出来るスコアは0となるが、順位表には正解したテストケースに対する相対スコアの和が表示されている。</p>\n<h4>実行時間について</h4>\n<p>実行時間には多少のブレが生じます。\nまた、システムテストでは同時に大量の実行を行うため、暫定テストに比べて数%程度実行時間が伸びる現象が確認されています。\nそのため、実行時間制限ギリギリの提出がシステムテストで<span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"実行時間制限超過\">TLE</span>となる可能性があります。\nプログラム内で時間を計測して処理を打ち切るか、実行時間に余裕を持たせるようお願いします。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>入出力</h3><p>まずはじめに、標準入力から島の大きさ <var>N</var>、油田の個数 <var>M</var>、エラーパラメータ <var>\\epsilon</var>、各油田の形状が以下の形式で与えられる。</p>\n<pre><var>N</var> <var>M</var> <var>\\epsilon</var>\n<var>d_1</var> <var>i_{1,1}</var> <var>j_{1,1}</var> <var>\\cdots</var> <var>i_{1,d_1}</var> <var>j_{1,d_1}</var>\n<var>\\vdots</var>\n<var>d_M</var> <var>i_{M,1}</var> <var>j_{M,1}</var> <var>\\cdots</var> <var>i_{M,d_M}</var> <var>j_{M,d_M}</var>\n</pre>\n\n<ul>\n<li>島の大きさ <var>N</var> は <var>10\\leq N\\leq 20</var> を満たす。</li>\n<li>油田の個数 <var>M</var> は <var>2\\leq M\\leq 20</var> を満たす。</li>\n<li>エラーパラメータ <var>\\epsilon</var> は <var>0.01\\leq \\epsilon\\leq 0.2</var> を満たし、<var>0.01</var> の倍数である。</li>\n<li><var>d_k</var> は <var>k</var> 番目の油田の面積を表し、<var>4\\leq d_k\\leq N^2/M</var> を満たす。続く <var>d_k</var> 個の座標 <var>(i_{k,1},j_{k,1}),\\cdots,(i_{k,d_k},j_{k,d_k})</var> は上端と左端の座標が共に <var>0</var> となるように平行移動した際のポリオミノに含まれる各マスの座標を表す。例えば、縦2マス、横2マスの正方形型のポリオミノは <code>4 0 0 0 1 1 0 1 1</code> と表される。</li>\n<li>全く同じ形状の油田が複数含まれる場合もあり得る。</li>\n</ul>\n<p>上記の情報を読み込んだら、以下の処理を最大で <var>2 N^2</var> 回繰り返す。</p>\n<p>各反復では、行う操作の種類に応じて以下の処理を行う。</p>\n<p>1マス <var>(i, j)</var> を選び、そのマスの地下を掘る場合、以下の形式で標準出力に出力せよ。</p>\n<pre>q 1 <var>i</var> <var>j</var>\n</pre>\n\n<p>出力後、<var>v(i,j)</var> の値が標準入力から一行で与えられる。\n既に掘ったことのあるマスを再度掘っても構わないが、特に利点はない。</p>\n<p><var>d (\\geq 2)</var> マスの集合 <var>S=\\{(i_1,j_1),\\cdots,(i_d,j_d)\\}</var> を選び、<var>v(S)</var> を占う場合、以下の形式で標準出力に出力せよ。</p>\n<pre>q <var>d</var> <var>i_1</var> <var>j_1</var> <var>\\cdots</var> <var>i_d</var> <var>j_d</var>\n</pre>\n\n<p>ここで、各座標 <var>(i_k,j_k)</var> は互いに異なる必要がある。同じ座標を複数回含む場合、<span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"不正解\">WA</span> と判定される。\n出力後、<var>v(S)</var> の値の <strong>近似値</strong> が標準入力から一行で与えられる。</p>\n<p><var>v(i,j)&gt;0</var> であるマスを全て推測出来た場合、<var>v(i,j)&gt;0</var> であると判断したマスの集合を <var>S=\\{(i_1,j_1),\\cdots,(i_d,j_d)\\}</var> とし、以下の形式で標準出力に出力せよ。</p>\n<pre>a <var>d</var> <var>i_1</var> <var>j_1</var> <var>\\cdots</var> <var>i_d</var> <var>j_d</var>\n</pre>\n\n<p>ここで、出力する集合 <var>S</var> は1つ目の操作により地下を掘って油田の存在が既に明らかとなったマスも全て含めなければならない。\n各座標 <var>(i_k,j_k)</var> は互いに異なる必要がある。同じ座標を複数回含む場合、<span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"不正解\">WA</span> と判定される。\n出力後、推測した集合が正しかった場合は <code>1</code> が、間違っていた場合は <code>0</code> が標準入力から一行で与えられる。\n<code>1</code> が返ってきた場合はその後のクエリは処理されないため、即座に解答プログラムの実行を終了せよ。\n<code>0</code> が返ってきた場合は操作回数の上限まで他の操作を行い、再度挑戦することが出来る。</p>\n<p><font color=\"red\"><strong>出力の後には改行をし、更に標準出力を flush しなければならない。</strong></font>\nそうしない場合、<span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"実行時間制限超過\">TLE</span>となる可能性がある。</p>\n<p>解答プログラムは、# から始まるコメント行を出力に含めても良い。 Web版ビジュアライザを使用すると、コメント行を対応するタイミングで表示出来るため、デバッグや考察等に役立てることが出来る。 ジャッジプログラムはコメント行を全て無視するため、コメント行を出力するプログラムをそのまま提出可能である。コメントのうち、<code>#c</code>から開始するものは特別扱いされ、<code>#c i j color</code>の形式で出力することによりビジュアライザで表示した際に各マスの色を任意に変更できる。例えば <code>#c 0 1 red</code> や <code>#c 0 1 #ff0000</code> と出力すると <var>(0,1)</var> の色が赤に変わる。</p>\n<h4>例</h4>\n<table class=\"table table-bordered\">\n<thead>\n<tr>\n<th><var>t</var></th>\n<th>Output</th>\n<th>Input</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>事前情報</td>\n<td></td>\n<td><pre>15 2 0.01\n19 0 3 1 1 1 3 1 6 2 0 2 1 2 2 2 3 2 4 2 5 2 6 3 1 3 2 3 3 3 4 3 5 4 1 4 2 4 4\n19 0 1 1 1 2 1 3 1 3 2 3 3 3 4 4 1 4 2 5 0 5 1 5 2 5 3 6 1 6 2 6 3 7 1 7 3 8 3</pre></td>\n</tr>\n<tr>\n<td>1</td>\n<td><pre>q 25 0 0 0 1 0 2 ... 4 4</pre></td>\n<td><pre>8</pre></td>\n</tr>\n<tr>\n<td>2</td>\n<td><pre>q 1 0 0</pre></td>\n<td><pre>0</pre></td>\n</tr>\n<tr>\n<td><var>\\vdots</var></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>185</td>\n<td><pre>a 38 2 3 2 10 3 1 ... 10 12</pre></td>\n<td><pre>1</pre></td>\n</tr>\n</tbody>\n</table>\n\n<p><a href=\"https://img.atcoder.jp/ahc030/awGA15Om.html?lang=ja&amp;seed=0&amp;output=sample\">例を見る</a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>サンプルプログラム</h3><details>\n\n<p>Pythonでの解答例を示す。 このプログラムでは、全てのマスを順番に掘ってみて実際に石油が出たマスを最後に出力している。</p>\n<pre class=\"prettyprint linenums\"># read prior information\nline = input().split()\nN = int(line[0])\nM = int(line[1])\neps = float(line[2])\nfields = []\nfor _ in range(M):\n    line = input().split()\n    ps = []\n    for i in range(int(line[0])):\n        ps.append((int(line[2*i+1]), int(line[2*i+2])))\n    fields.append(ps)\n\n# drill every square\nhas_oil = []\nfor i in range(N):\n    for j in range(N):\n        print(\"q 1 {} {}\".format(i, j))\n        resp = input()\n        if resp != \"0\":\n            has_oil.append((i, j))\n\nprint(\"a {} {}\".format(len(has_oil), ' '.join(map(lambda x: \"{} {}\".format(x[0], x[1]), has_oil))))\nresp = input()\nassert resp == \"1\"\n</pre>\n\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>入力生成方法</h3><details>\n\n<p><var>L</var> 以上 <var>U</var> 以下の整数値を一様ランダムに生成する関数を <var>\\mathrm{rand}(L,U)</var> で表す。</p>\n<p>島の大きさ <var>N</var> は <var>\\mathrm{rand}(10,20)</var> により生成される。\n油田の数 <var>M</var> は <var>\\mathrm{rand}(2,\\mathrm{floor}(N^2/20))</var> により生成される。\nエラーパラメータ <var>\\epsilon</var> は <var>0.01\\times \\mathrm{rand}(1,20)</var> により生成される。</p>\n<p>各油田の形状を生成するために、まず2つのパラメータ <var>a,d</var> を以下のように生成する。</p>\n<ul>\n<li><var>a=\\mathrm{floor}(\\mathrm{rand}(\\mathrm{floor}(N^2/5),\\mathrm{floor(N^2/2)})/M)</var></li>\n<li><var>d=\\mathrm{rand}(0,a-4)</var></li>\n</ul>\n<p>各 <var>k=1,\\cdots,M</var> に対し、<var>k</var> 番目の油田の形状を以下のように生成する。\nまず、油田の大きさを <var>s_k=\\mathrm{rand}(a-d,a+d)</var> により生成する。\n次に、<var>S_k=\\{(\\mathrm{floor}(N/2),\\mathrm{floor}(N/2))\\}</var> から開始し、<var>S_k</var> の大きさが <var>s_k</var> となるまで、<var>S_k</var> に隣接するマス集合の中から一様ランダムに一つ選んで <var>S_k</var> に加えることを繰り返す。\n最後に、<var>S_k</var> に含まれるマスの <var>i</var> 座標の最小値と <var>j</var> 座標の最小値がともに <var>0</var> となるように平行移動させる。</p>\n<p>各油田の形状を生成後、島内の各油田の位置を、島からはみ出さない範囲で一様ランダムに選択する。\nすなわち、油田を構成するマスの <var>i</var> 座標の最大値を <var>i_{\\text{max}}</var>、<var>j</var> 座標の最大値を <var>j_{\\text{max}}</var> とすると、\n<var>d_i=\\mathrm{rand}(0,N-i_{\\text{max}}-1)</var> と <var>d_j=\\mathrm{rand}(0,N-j_{\\text{max}}-1)</var> を生成し、<var>(d_i,d_j)</var> だけ平行移動した位置に配置する。</p>\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>ツール(入力ジェネレータ・ローカルテスタ・ビジュアライザ)</h3><ul>\n<li><a href=\"https://img.atcoder.jp/ahc030/awGA15Om.html?lang=ja\">Web版</a>: ローカル版より高性能でアニメーション表示が可能です。</li>\n<li><a href=\"https://img.atcoder.jp/ahc030/awGA15Om_v3.zip\">ローカル版</a>: 使用するには<a href=\"https://www.rust-lang.org/ja\">Rust言語</a>のコンパイル環境をご用意下さい。<ul>\n<li><a href=\"https://img.atcoder.jp/ahc030/awGA15Om_windows_v3.zip\">Windows用のコンパイル済みバイナリ</a>: Rust言語の環境構築が面倒な方は代わりにこちらをご利用下さい。</li>\n</ul>\n</li>\n</ul>\n<p>コンテスト期間中に、ビジュアライズ結果の共有や、解法・考察に関する言及は禁止されています。ご注意下さい。</p>\n<h4>ツールで用いられる入出力ファイルの仕様</h4>\n<details>\n\n<p>ローカルテスタに与える入力ファイルは解答プログラムに与えられる事前情報の末尾に以下の形式の情報が追加されている。</p>\n<pre><var>di_1</var> <var>dj_1</var>\n<var>\\vdots</var>\n<var>di_M</var> <var>dj_M</var>\n<var>v_{0,0}</var> <var>\\cdots</var> <var>v_{0,N-1}</var>\n<var>\\vdots</var>\n<var>v_{N-1,0}</var> <var>\\cdots</var> <var>v_{N-1,N-1}</var>\n<var>e_1</var>\n<var>\\vdots</var>\n<var>e_{2N^2}</var>\n</pre>\n\n<ul>\n<li><var>(di_k,dj_k)</var> は <var>k</var> 番目の油田が配置された座標を表す。すなわち、その油田に属するマスの<var>i</var> 座標の最小値が <var>di_k</var>、<var>j</var> 座標の最小値が <var>dj_k</var> である。</li>\n<li><var>v_{i,j}</var> はマス <var>(i,j)</var> の石油埋蔵量 <var>v(i,j)</var> を表す。</li>\n<li>各 <var>e_k</var> は標準正規分布からサンプルされた値であり、<var>k</var> 回目のクエリに対する結果の誤差を計算する際に用いられる。</li>\n</ul>\n</details></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There is an island consisting of <var>N\\times N</var> squares.\nLet <var>(0, 0)</var> be the coordinates of the top-left square, and <var>(i, j)</var> be the coordinates of the square located <var>i</var> squares down and <var>j</var> squares to the right from there.\nAccording to Mr. Takahashi, the fortune teller, there are <var>M</var> unexplored oil fields under the island.</p>\n<p>Each oil field has a connected <a href=\"https://en.wikipedia.org/wiki/Polyomino\">polyomino</a> shape with the sides of a 1×1 square connected to each other, and its shape and orientation are also known in advance by divination. However, their exact location on the island remains unknown.\nEach oil field is entirely contained within the <var>N\\times N</var> squares, but multiple oil fields may overlap and share the same square.\nFor each <var>(i,j)</var> square, define <strong>oil reserves</strong> <var>v(i,j)</var> as the number of oil fields containing that square.\nRepeat the following three types of operations at most <var>2 N^2</var> times.</p>\n<ul>\n<li>Choose one square and drill underground in that square. The value of <var>v(i,j)</var> is revealed, incurring a cost of 1.</li>\n<li>Choose a set <var>S</var> of two or more squares and divine the sum of the oil reserves in those squares <var>v(S)=\\sum_{(i,j)\\in S} v(i,j)</var>. The larger the number of squares to select, the lower the cost, and selecting <var>k</var> squares costs <var>1/\\sqrt{k}</var>. On the other hand, the variance of the value obtained by divination increases in proportion to <var>k</var>. Let <var>x</var> be the value sampled from the following normal distribution with mean <var>\\mu</var> and variance <var>\\sigma^2</var>, using an error parameter <var>\\epsilon</var> given in advance. Then the obtained value is <var>\\max(0,\\mathrm{round}(x))</var>.<ul>\n<li>Mean <var>\\mu = (k-v(S))\\epsilon + v(S)(1-\\epsilon)</var></li>\n<li>Variance <var>\\sigma^2 = k\\epsilon (1-\\epsilon)</var></li>\n</ul>\n</li>\n<li>Guess all squares such that <var>v(i,j)&gt;0</var>. If the answer is correct, the operation ends there; if it is incorrect, the operation continues at a cost of 1.</li>\n</ul>\n<p>Please identify all squares such that <var>v(i,j)&gt;0</var> with as little cost as possible.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Scoring</h3><p>If you succeed in identifying all squares such that <var>v(i,j)&gt;0</var> within the specified number of operations, you obtain an absolute score of <var>\\mathrm{round}(10^6\\times \\max(C, 1/N))</var>, where <var>C</var> is the sum of the costs you paid.\nIf you fail, you will get an absolute score of <var>10^9</var>.\nThe lower the absolute score, the better.</p>\n<p>For each test case, we compute the <font color=\"red\"><strong>relative score</strong></font> <var>\\mathrm{round}(10^9\\times \\frac{\\mathrm{MIN}}{\\mathrm{YOUR}})</var>, where YOUR is your absolute score and MIN is the lowest absolute score among all competitors obtained on that test case. The score of the submission is the sum of the relative scores.</p>\n<p>The final ranking will be determined by the system test with more inputs which will be run after the contest is over.\nIn both the provisional/system test, if your submission produces illegal output or exceeds the time limit for some test cases, only the score for those test cases will be zero, and your submission will be excluded from the MIN calculation for those test cases.</p>\n<p>The system test will be performed only for <font color=\"red\"><strong>the last submission which received a result other than <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Compilation Error\">CE</span> </strong></font>.\nBe careful not to make a mistake in the final submission.</p>\n<h4>Number of test cases</h4>\n<ul>\n<li>Provisional test: 50</li>\n<li>System test: 3000. We will publish <a href=\"https://img.atcoder.jp/ahc030/seeds.txt\">seeds.txt</a> (sha256=45933552af3c557ff53d4e1397ef9fe10cedea89f10fe8140ceb489569dacea2) after the contest is over.</li>\n</ul>\n<h4>About relative evaluation system</h4>\n<p>In both the provisional/system test, the standings will be calculated using only the last submission which received a result other than <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Compilation Error\">CE</span>.\nOnly the last submissions are used to calculate the MIN for each test case when calculating the relative scores.</p>\n<p>The scores shown in the standings are relative, and whenever a new submission arrives, all relative scores are recalculated.\nOn the other hand, the score for each submission shown on the submissions page is the sum of the absolute score for each test case, and the relative scores are not shown.\nIn order to know the relative score of submission other than the latest one in the current standings, you need to resubmit it.\nIf your submission produces illegal output or exceeds the time limit for some test cases, the score shown on the submissions page will be 0, but the standings show the sum of the relative scores for the test cases that were answered correctly.</p>\n<h4>About execution time</h4>\n<p>Execution time may vary slightly from run to run.\nIn addition, since system tests simultaneously perform a large number of executions, it has been observed that execution time increases by several percent compared to provisional tests.\nFor these reasons, submissions that are very close to the time limit may result in <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Time Limit Exceeded\">TLE</span> in the system test.\nPlease measure the execution time in your program to terminate the process, or have enough margin in the execution time.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Input and Output</h3><p>First, the island size <var>N</var>, the number of oil fields <var>M</var>, the error parameter <var>\\epsilon</var>, and the shape of each oil field are given from the Standard Input in the following format.</p>\n<pre><var>N</var> <var>M</var> <var>\\epsilon</var>\n<var>d_1</var> <var>i_{1,1}</var> <var>j_{1,1}</var> <var>\\cdots</var> <var>i_{1,d_1}</var> <var>j_{1,d_1}</var>\n<var>\\vdots</var>\n<var>d_M</var> <var>i_{M,1}</var> <var>j_{M,1}</var> <var>\\cdots</var> <var>i_{M,d_M}</var> <var>j_{M,d_M}</var>\n</pre>\n\n<ul>\n<li>The island size <var>N</var> satisfies <var>10\\leq N\\leq 20</var>.</li>\n<li>The number of oil fields <var>M</var> satisfies <var>2\\leq M\\leq 20</var>.</li>\n<li>The error parameter <var>\\epsilon</var> satisfies <var>0.01\\leq \\epsilon\\leq 0.2</var> and is a multiple of <var>0.01</var>.</li>\n<li>The <var>d_k</var> denotes the area of the <var>k</var>-th oil field and satisfies <var>4\\leq d_k\\leq N^2/M</var>. The subsequent <var>d_k</var> coordinates <var>(i_{k,1},j_{k,1}),\\cdots,(i_{k,d_k},j_{k,d_k})</var> represent the coordinates of each square in the polyomino when translated so that the top and left coordinates are both <var>0</var>. For example, a <var>2\\times 2</var> square-shaped polyomino is represented as <code>4 0 0 0 1 1 0 1 1</code>.</li>\n<li>It is possible that multiple oil fields may have exactly the same shape.</li>\n</ul>\n<p>After reading the above information, repeat the following process at most <var>2 N^2</var> times.\nIn each iteration, do the following according to the type of operation to be performed.</p>\n<p>If you choose one square <var>(i, j)</var> and drill underground in that square, output to Standard Output in the following format.</p>\n<pre>q 1 <var>i</var> <var>j</var>\n</pre>\n\n<p>After output, the value of <var>v(i,j)</var> is given in one line from Standard Input.\nYou may drill an already drilled square again, although it has no particular advantage.</p>\n<p>If you choose a set <var>S=\\{(i_1,j_1),\\cdots,(i_d,j_d)\\}</var> of <var>d (\\geq 2)</var> squares and divine <var>v(S)</var>, output to Standard Output in the following format.</p>\n<pre>q <var>d</var> <var>i_1</var> <var>j_1</var> <var>\\cdots</var> <var>i_d</var> <var>j_d</var>\n</pre>\n\n<p>Here, each coordinate <var>(i_k,j_k)</var> must be distinct from the others. If the set contains the same coordinate more than once, it is judged as <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Incorrect\">WA</span>.\nAfter output, an <strong>approximation</strong> of the value of <var>v(S)</var> is given in one line from the standard input.</p>\n<p>If you can guess all the squares with <var>v(i,j)&gt;0</var>, let <var>S=\\{(i_1,j_1),\\cdots,(i_d,j_d)\\}</var> be the set of squares you determined to have <var>v(i,j)&gt;0</var> and output it to Standard Output in the following format.</p>\n<pre>a <var>d</var> <var>i_1</var> <var>j_1</var> <var>\\cdots</var> <var>i_d</var> <var>j_d</var>\n</pre>\n\n<p>Here, the output set <var>S</var> must include all squares which have already been revealed to have oil reserves by drilling underground through the first operation.\nEach coordinate <var>(i_k,j_k)</var> must be distinct from the others. If the set contains the same coordinate more than once, it is judged as <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Incorrect\">WA</span>.\nAfter the output, <code>1</code> is given in one line from the standard input if the guessed set is correct, and <code>0</code> if it is wrong.\nIf <code>1</code> is returned, the subsequent queries are not processed, and you should immediately terminate the execution of the program.\nIf <code>0</code> is returned, you can perform additional operations up to the limit and try again.</p>\n<p><font color=\"red\"><strong>The output must be followed by a new line, and you have to flush Standard Output.</strong></font>\nOtherwise, the submission might be judged as <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Time Limit Exceeded\">TLE</span>.</p>\n<p>Your program may output comment lines starting with <code>#</code>. The web version of the visualizer displays the comment lines at the corresponding timing, which may be useful for debugging and analysis. Since the judge program ignores all comment lines, you can submit a program that outputs comment lines as is.\nAmong the comments, those starting with <code>#c</code> are treated specially and can be output in the form of <code>#c i j color</code> to let the visualizer change the color of each square arbitrarily. For example, outputting <code>#c 0 1 red</code> or <code>#c 0 1 #ff0000</code> will change the color of <var>(0,1)</var> to red.</p>\n<h4>Example</h4>\n<table class=\"table table-bordered\">\n<thead>\n<tr>\n<th><var>t</var></th>\n<th>Output</th>\n<th>Input</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Prior Information</td>\n<td></td>\n<td><pre>15 2 0.01\n19 0 3 1 1 1 3 1 6 2 0 2 1 2 2 2 3 2 4 2 5 2 6 3 1 3 2 3 3 3 4 3 5 4 1 4 2 4 4\n19 0 1 1 1 2 1 3 1 3 2 3 3 3 4 4 1 4 2 5 0 5 1 5 2 5 3 6 1 6 2 6 3 7 1 7 3 8 3</pre></td>\n</tr>\n<tr>\n<td>1</td>\n<td><pre>q 25 0 0 0 1 0 2 ... 4 4</pre></td>\n<td><pre>8</pre></td>\n</tr>\n<tr>\n<td>2</td>\n<td><pre>q 1 0 0</pre></td>\n<td><pre>0</pre></td>\n</tr>\n<tr>\n<td><var>\\vdots</var></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>185</td>\n<td><pre>a 38 2 3 2 10 3 1 ... 10 12</pre></td>\n<td><pre>1</pre></td>\n</tr>\n</tbody>\n</table>\n\n<p><a href=\"https://img.atcoder.jp/ahc030/awGA15Om.html?lang=en&amp;seed=0&amp;output=sample\">Show example</a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Solution</h3><details>\n\n<p>This is a sample solution in Python.\nThis program drills all the squares in order and outputs the squares that actually yielded oil at the end.</p>\n<pre class=\"prettyprint linenums\"># read prior information\nline = input().split()\nN = int(line[0])\nM = int(line[1])\neps = float(line[2])\nfields = []\nfor _ in range(M):\n    line = input().split()\n    ps = []\n    for i in range(int(line[0])):\n        ps.append((int(line[2*i+1]), int(line[2*i+2])))\n    fields.append(ps)\n\n# drill every square\nhas_oil = []\nfor i in range(N):\n    for j in range(N):\n        print(\"q 1 {} {}\".format(i, j))\n        resp = input()\n        if resp != \"0\":\n            has_oil.append((i, j))\n\nprint(\"a {} {}\".format(len(has_oil), ' '.join(map(lambda x: \"{} {}\".format(x[0], x[1]), has_oil))))\nresp = input()\nassert resp == \"1\"\n</pre>\n\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Input Generation</h3><details>\n\n<p>Let <var>\\mathrm{rand}(L,U)</var> be a function that generates a uniform random integer between <var>L</var> and <var>U</var>, inclusive.</p>\n<p>The island size <var>N</var> is generated by <var>\\mathrm{rand}(10,20)</var>.\nThe number of oil fields <var>M</var> is generated by <var>\\mathrm{rand}(2,\\mathrm{floor}(N^2/20))</var>.\nThe error parameter <var>\\epsilon</var> is generated by <var>0.01\\times \\mathrm{rand}(1,20)</var>.</p>\n<p>To generate the shape of each oil field, two parameters <var>a,d</var> are first generated as follows.</p>\n<ul>\n<li><var>a=\\mathrm{floor}(\\mathrm{rand}(\\mathrm{floor}(N^2/5),\\mathrm{floor(N^2/2)})/M)</var></li>\n<li><var>d=\\mathrm{rand}(0,a-4)</var></li>\n</ul>\n<p>For each <var>k=1,\\cdots,M</var>, the shape of the <var>k</var>-th oil field is generated as follows.\nFirst, the size of the oil field is generated by <var>s_k=\\mathrm{rand}(a-d,a+d)</var>.\nStarting with <var>S_k=\\{(\\mathrm{floor}(N/2),\\mathrm{floor}(N/2))\\}</var>, add one square at a time, chosen uniformly at random from the set of squares adjacent to <var>S_k</var>, until the size of <var>S_k</var> becomes <var>s_k</var>.\nFinally, translate <var>S_k</var> so that the minimum <var>i</var> coordinate and the minimum <var>j</var> coordinate of the squares contained in <var>S_k</var> are both <var>0</var>.</p>\n<p>After generating the shape of each oil field, the position of each oil field within the island is chosen uniformly at random, ensuring they do not extend beyond the island's boundaries.\nIn other words, given the maximum <var>i</var> coordinate among the squares composing an oil field as <var>i_{\\text{max}}</var>, and the maximum <var>j</var> coordinate as <var>j_{\\text{max}}</var>, generate <var>d_i=\\mathrm{rand}(0,N-i_{\\text{max}}-1)</var> and <var>d_j=\\mathrm{rand}(0,N-j_{\\text{max}}-1)</var>. Then, position the oil field at the location shifted by <var>(d_i, d_j)</var>.</p>\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Tools (Input generator, local tester, and visualizer)</h3><ul>\n<li><a href=\"https://img.atcoder.jp/ahc030/awGA15Om.html?lang=en\">Web version</a>: This is more powerful than the local version providing animations.</li>\n<li><a href=\"https://img.atcoder.jp/ahc030/awGA15Om_v3.zip\">Local version</a>: You need a compilation environment of <a href=\"https://www.rust-lang.org/\">Rust language</a>.<ul>\n<li><a href=\"https://img.atcoder.jp/ahc030/awGA15Om_windows_v3.zip\">Pre-compiled binary for Windows</a>: If you are not familiar with the Rust language environment, please use this instead.</li>\n</ul>\n</li>\n</ul>\n<p>Please be aware that sharing visualization results or discussing solutions/ideas during the contest is prohibited.</p>\n<h4>Specification of input/output files used by the tools</h4>\n<details>\n\n<p>The input file provided to the local tester includes additional information in the following format appended to the end of the prior-information given to the solution program.</p>\n<pre><var>di_1</var> <var>dj_1</var>\n<var>\\vdots</var>\n<var>di_M</var> <var>dj_M</var>\n<var>v_{0,0}</var> <var>\\cdots</var> <var>v_{0,N-1}</var>\n<var>\\vdots</var>\n<var>v_{N-1,0}</var> <var>\\cdots</var> <var>v_{N-1,N-1}</var>\n<var>e_1</var>\n<var>\\vdots</var>\n<var>e_{2N^2}</var>\n</pre>\n\n<ul>\n<li><var>(di_k,dj_k)</var> denotes the coordinates at which the <var>k</var>-th oil field is located. That is, the minimum <var>i</var>-coordinate of the square belonging to that oil field is <var>di_k</var> and the minimum <var>j</var>-coordinate is <var>dj_k</var>.</li>\n<li>Each <var>v_{i,j}</var> represents the oil reserves <var>v(i,j)</var> of the square <var>(i,j)</var>.</li>\n<li>Each <var>e_k</var> is a value sampled from the standard normal distribution and is used in calculating the error of the result for the <var>k</var>-th query.</li>\n</ul>\n</details></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/ahc030/tasks/ahc030_a"}