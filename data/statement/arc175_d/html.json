{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>700</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>頂点に <var>1</var> から <var>N</var> の番号がついた <var>N</var> 頂点の木があります．木の <var>i</var> 番目の辺は頂点 <var>u_i</var> と頂点 <var>v_i</var> を双方向に結んでいます．</p>\n<p><var>(1,\\ldots,N)</var> の順列 <var>P=(P_1,\\ldots,P_N)</var> に対し <var>f(P)</var> を以下で定めます．</p>\n<ul>\n<li>頂点 <var>i\\ (1\\leq i\\leq N)</var> に対し，頂点 <var>1</var> から頂点 <var>i</var> への単純パスを <var>(v_1=1,v_2,\\ldots,v_k=i)</var> として，<var>(P_{v_1},P_{v_2},\\ldots,P_{v_k})</var> の最長増加部分列の長さを <var>L_i</var> とする．<var>f(P) = \\sum_{i=1}^N L_i </var> と定める．</li>\n</ul>\n<p>整数 <var>K</var> が与えられます．<var>f(P)=K</var> を満たす <var>(1,\\ldots,N)</var> の順列 <var>P</var> が存在するか判定し，存在する場合は一つ示してください．</p>\n<details>\n<summary>最長増加部分列とは</summary>\n\n数列の<strong>部分列</strong>とは，数列から <var>0</var> 個以上の要素を取り除いた後，残りの要素を元の順序で連結して得られる数列のことをいいます．\n例えば，<var>(10,30)</var> は <var>(10,20,30)</var> の部分列ですが，<var>(20,10)</var> は <var>(10,20,30)</var> の部分列ではありません．<br>\n\n数列の<strong>最長増加部分列</strong>とは，数列の狭義単調増加な部分列の中で列の長さが最大のものを指します．\n</details>\n\n<details> <summary>単純パスとは</summary>\nグラフ <var>G</var> 上の頂点 <var>X,Y</var> に対して，頂点列 <var>(v_1,v_2, \\ldots, v_k)</var> であって，\n<var>v_1=X</var>, <var>v_k=Y</var> かつ，<var>1\\leq i\\leq k-1</var> に対して <var>v_i</var> と\n<var>v_{i+1}</var> が辺で結ばれているようなものを頂点 <var>X</var> から頂点 <var>Y</var> への <strong>ウォーク</strong> と呼びます．  \nさらに，<var>v_1,v_2, \\ldots, v_k</var> がすべて異なるようなものを頂点 <var>X</var> から頂点 <var>Y</var> への <strong>単純パス</strong> (あるいは単に <strong>パス</strong>) と呼びます．\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li>入力される数値は全て整数</li>\n<li><var>2 \\leq N \\leq 2\\times 10^5</var></li>\n<li><var>1\\leq K \\leq 10^{11}</var></li>\n<li><var>1\\leq u_i,v_i\\leq N</var></li>\n<li>与えられるグラフは木</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる．</p>\n<pre><var>N</var> <var>K</var>\n<var>u_1</var> <var>v_1</var>\n<var>\\vdots</var>\n<var>u_{N-1}</var> <var>v_{N-1}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>f(P)=K</var> を満たす順列 <var>P</var> が存在しない場合， <code>No</code> を出力せよ．</p>\n<p><var>f(P)=K</var> を満たす順列 <var>P</var> が存在する場合，以下の形式で出力せよ．</p>\n<pre>Yes\n<var>P_1</var> <var>\\ldots</var> <var>P_N</var>\n</pre>\n\n<p>条件を満たす順列 <var>P</var> が複数存在する場合，どれを出力しても正解とみなされる．</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5 8\n1 2\n2 3\n2 4\n4 5\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>Yes\n3 2 1 4 5\n</pre>\n\n<p><var>P=(3,2,1,4,5)</var> のとき，<var>f(P)</var> は以下のように定まります．</p>\n<ul>\n<li>\n<p>頂点 <var>1</var> から頂点 <var>1</var> への単純パスは <var>(1)</var> であり，<var>(P_1)=(3)</var> の最長増加部分列の長さは <var>1</var> である．よって <var>L_1 = 1</var> である．</p>\n</li>\n<li>\n<p>頂点 <var>1</var> から頂点 <var>2</var> への単純パスは <var>(1,2)</var> であり，<var>(P_1,P_2)=(3,2)</var> の最長増加部分列の長さは <var>1</var> である．よって <var>L_2 = 1</var> である．</p>\n</li>\n<li>\n<p>頂点 <var>1</var> から頂点 <var>3</var> への単純パスは <var>(1,2,3)</var> であり，<var>(P_1,P_2,P_3)=(3,2,1)</var> の最長増加部分列の長さは <var>1</var> である．よって <var>L_3 = 1</var> である．</p>\n</li>\n<li>\n<p>頂点 <var>1</var> から頂点 <var>4</var> への単純パスは <var>(1,2,4)</var> であり，<var>(P_1,P_2,P_4)=(3,2,4)</var> の最長増加部分列の長さは <var>2</var> である．よって <var>L_4 = 2</var> である．</p>\n</li>\n<li>\n<p>頂点 <var>1</var> から頂点 <var>5</var> への単純パスは <var>(1,2,4,5)</var> であり，<var>(P_1,P_2,P_4,P_5)=(3,2,4,5)</var> の最長増加部分列の長さは <var>3</var> である．よって <var>L_5 = 3</var> である．</p>\n</li>\n<li>\n<p>以上より，<var>f(P)=1+1+1+2+3= 8</var> である．</p>\n</li>\n</ul>\n<p>このことから，出力例の <var>P</var> は <var>f(P)=8</var> という条件を満たすことが分かります．この他にも，例えば <var>P=(3,2,4,5,1)</var> も条件を満たします．</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>7 21\n2 1\n7 2\n5 1\n3 7\n2 6\n3 4\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>No\n</pre>\n\n<p><var>f(P) = 21</var> を満たす順列 <var>P</var> は存在しないことが証明できます．</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>8 20\n3 1\n3 8\n7 1\n7 5\n3 2\n6 5\n4 7\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>Yes\n2 1 3 5 6 8 4 7\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score: <var>700</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There is a tree with <var>N</var> vertices numbered <var>1</var> to <var>N</var>. The <var>i</var>-th edge of the tree connects vertices <var>u_i</var> and <var>v_i</var> bidirectionally.</p>\n<p>For a permutation <var>P=(P_1,\\ldots,P_N)</var> of <var>(1,\\ldots,N)</var>, we define <var>f(P)</var> as follows:</p>\n<ul>\n<li>For each vertex <var>i\\ (1\\leq i\\leq N)</var>, let <var>(v_1=1,v_2,\\ldots,v_k=i)</var> be the simple path from vertex <var>1</var> to vertex <var>i</var>, and let <var>L_i</var> be the length of a longest increasing subsequence of <var>(P_{v_1},P_{v_2},\\ldots,P_{v_k})</var>. We define <var>f(P) = \\sum_{i=1}^N L_i</var>.</li>\n</ul>\n<p>You are given an integer <var>K</var>. Determine whether there is a permutation <var>P</var> of <var>(1,\\ldots,N)</var> such that <var>f(P)=K</var>. If it exists, present one such permutation.</p>\n<details>\n<summary>What is a longest increasing subsequence?</summary>\n\nA <strong>subsequence</strong> of a sequence is a sequence obtained by removing zero or more elements from the original sequence and concatenating the remaining elements without changing the order.\nFor example, <var>(10,30)</var> is a subsequence of <var>(10,20,30)</var>, but <var>(20,10)</var> is not.<br>\n\nThe <strong>longest increasing subsequence</strong> of a sequence is the longest strictly increasing subsequence of that sequence.\n</details>\n\n<details> <summary>What is a simple path?</summary>\nFor vertices <var>X</var> and <var>Y</var> in a graph <var>G</var>, a <strong>walk</strong> from vertex <var>X</var> to vertex <var>Y</var> is a sequence of vertices <var>(v_1,v_2, \\ldots, v_k)</var> such that\n<var>v_1=X</var>, <var>v_k=Y</var>, and <var>v_i</var> and\n<var>v_{i+1}</var> are connected by an edge for all <var>1\\leq i\\leq k-1</var>.  \nFurthermore, if <var>v_1,v_2, \\ldots, v_k</var> are all distinct, it is called a <strong>simple path</strong> (or simply a <strong>path</strong>) from vertex <var>X</var> to vertex <var>Y</var>.\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li>All input values are integers.</li>\n<li><var>2 \\leq N \\leq 2\\times 10^5</var></li>\n<li><var>1\\leq K \\leq 10^{11}</var></li>\n<li><var>1\\leq u_i,v_i\\leq N</var></li>\n<li>The given graph is a tree.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>K</var>\n<var>u_1</var> <var>v_1</var>\n<var>\\vdots</var>\n<var>u_{N-1}</var> <var>v_{N-1}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If there is no permutation <var>P</var> such that <var>f(P)=K</var>, print <code>No</code>.</p>\n<p>If there is a permutation <var>P</var> such that <var>f(P)=K</var>, print it in the following format:</p>\n<pre>Yes\n<var>P_1</var> <var>\\ldots</var> <var>P_N</var>\n</pre>\n\n<p>If multiple permutations <var>P</var> satisfy the condition, any of them will be accepted.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5 8\n1 2\n2 3\n2 4\n4 5\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>Yes\n3 2 1 4 5\n</pre>\n\n<p>If <var>P=(3,2,1,4,5)</var>, then <var>f(P)</var> is determined as follows:</p>\n<ul>\n<li>\n<p>The simple path from vertex <var>1</var> to vertex <var>1</var> is <var>(1)</var>, and the length of the longest increasing subsequence of <var>(P_1)=(3)</var> is <var>1</var>. Thus, <var>L_1 = 1</var>.</p>\n</li>\n<li>\n<p>The simple path from vertex <var>1</var> to vertex <var>2</var> is <var>(1,2)</var>, and the length of the longest increasing subsequence of <var>(P_1,P_2)=(3,2)</var> is <var>1</var>. Thus, <var>L_2 = 1</var>.</p>\n</li>\n<li>\n<p>The simple path from vertex <var>1</var> to vertex <var>3</var> is <var>(1,2,3)</var>, and the length of the longest increasing subsequence of <var>(P_1,P_2,P_3)=(3,2,1)</var> is <var>1</var>. Thus, <var>L_3 = 1</var>.</p>\n</li>\n<li>\n<p>The simple path from vertex <var>1</var> to vertex <var>4</var> is <var>(1,2,4)</var>, and the length of the longest increasing subsequence of <var>(P_1,P_2,P_4)=(3,2,4)</var> is <var>2</var>. Thus, <var>L_4 = 2</var>.</p>\n</li>\n<li>\n<p>The simple path from vertex <var>1</var> to vertex <var>5</var> is <var>(1,2,4,5)</var>, and the length of the longest increasing subsequence of <var>(P_1,P_2,P_4,P_5)=(3,2,4,5)</var> is <var>3</var>. Thus, <var>L_5 = 3</var>.</p>\n</li>\n<li>\n<p>From the above, <var>f(P)=1+1+1+2+3= 8</var>.</p>\n</li>\n</ul>\n<p>Hence, the permutation <var>P</var> in the sample output satisfies the condition <var>f(P)=8</var>. Besides, <var>P=(3,2,4,5,1)</var> also satisfies the condition, for example.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>7 21\n2 1\n7 2\n5 1\n3 7\n2 6\n3 4\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>No\n</pre>\n\n<p>It can be proved that no permutation <var>P</var> satisfies <var>f(P) = 21</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>8 20\n3 1\n3 8\n7 1\n7 5\n3 2\n6 5\n4 7\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>Yes\n2 1 3 5 6 8 4 7\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc175/tasks/arc175_d"}