{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>100</var> 点</p>\n<div class=\"part\"><section>\n    <h3>問題文</h3>\n    <p>クッキー好きの学生たちのために、ある教授がクッキー増殖装置を発明した。</p>\n    <p>この装置に美味しさ <var>x</var> のクッキー1枚を投入し、<var>0</var> 以上 <var>127</var> 以下の整数 <var>y</var> を入力すると、\n    投入したクッキーを消費して、美味しさ <var>y</var> と美味しさ (<var>x</var> XOR <var>y</var>) の2枚のクッキーが生成される。</p>\n    <p>ここで、XORはビットごとの<a href=\"https://ja.wikipedia.org/wiki/%E6%8E%92%E4%BB%96%E7%9A%84%E8%AB%96%E7%90%86%E5%92%8C\">排他的論理和</a>を表す。</p>\n    <p>最初、クッキーは1枚だけあり、美味しさは <var>D</var> である。</p>\n    <p>以下の操作を <var>N-1</var> 回繰り返して生成された、ちょうど <var>N</var> 枚のクッキーの美味しさの合計の最大値を出力せよ。</p>\n    <ol>\n        <li>今あるクッキーのうちいずれか1枚を選んで装置に投入する。</li>\n        <li><var>0</var> 以上 <var>127</var> 以下の整数から自由に1つ選んで装置に入力する。</li>\n    </ol>\n</section></div>\n\n<div class=\"part\"><section>\n    <h3>制約</h3>\n    <ul>\n        <li><var>1 \\leq T \\leq 1000</var></li>\n        <li><var>1 \\leq N_t \\leq 1000</var> <var>(1 \\leq t \\leq T)</var></li>\n        <li><var>1 \\leq D_t \\leq 127</var> <var>(1 \\leq t \\leq T)</var></li>\n    </ul>\n</section></div>\n\n<hr>\n\n<div class=\"io-style\">\n    <div class=\"part\"><section>\n        <h3>入力</h3>\n        <p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>T</var>\n<var>N_1</var> <var>D_1</var>\n:\n<var>N_T</var> <var>D_T</var>\n</pre>\n    <p>\n    入力は複数のテストケースからなる。<var>1</var> 行目には、テストケースの個数を表す整数 <var>T</var> が与えられる。<br>\n    続く <var>T</var> 行にテストケースが1つずつ与えられる。<br>\n    <var>t</var> (<var> 1 \\leq t \\leq T </var>) 番目のテストケースでは、\n    半角スペース区切りで最終的なクッキーの枚数を表す整数 <var>N_t</var> と最初のクッキーの美味しさ <var>D_t</var> が与えられる。<br>\n    </p>\n    </section></div>\n\n    <div class=\"part\"><section>\n        <h3>出力</h3>\n        <p>最終生成物となる <var>N</var> 枚クッキーの美味しさの合計の最大値を標準出力に1行で出力せよ。</p>\n    </section></div>\n</div>\n\n<hr>\n\n<div class=\"part\"><section>\n    <h3>入力例1</h3>\n<pre>3\n3 1\n4 108\n1 10\n</pre>\n</section></div>\n<div class=\"part\"><section>\n    <h3>出力例1</h3>\n<pre>255\n400\n10\n</pre>\n    <p>\n        <var>1</var> つ目のテストケースでは、以下の手順で装置を使用すると、最終的に、美味しさ <var>61</var>, <var>95</var>, <var>99</var> の <var>3</var> 枚のクッキーが生成され、美味しさの合計が最大であるため、<var>255</var> と出力する。\n        </p><ol>\n            <li>美味しさ <var>1</var> のクッキーを投入して消費し、装置に <var>60</var> を入力すると、美味しさ <var>60</var> のクッキーと美味しさ <var>61</var> のクッキーが生成される。</li>\n            <li>美味しさ <var>60</var> のクッキーを投入して消費し、装置に <var>99</var> を入力すると、美味しさ <var>99</var> のクッキーと美味しさ <var>95</var> のクッキーが生成される。</li>\n        </ol>\n    <p></p>\n    <p>\n        また、 <var>3</var> つ目のテストケースのように、装置を使用しないこともある。\n    </p>\n</section></div>\n\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>100</var> points</p>\n\n<div class=\"part\"><section>\n    <h3>Problem Statement</h3>\n    <p>A professor invented Cookie Breeding Machine for his students who like cookies very much. </p>\n    <p>When one cookie with the taste of <var>x</var> is put into the machine and a non-negative integer <var>y</var> less than or equal to <var>127</var> is input on the machine,\n        it consumes the cookie and generates two cookies with the taste of <var>y</var> and (<var>x</var> XOR <var>y</var>). </p>\n    <p>Here, XOR represents <a href=\"https://en.wikipedia.org/wiki/Exclusive_or\">Bitwise Exclusive OR</a>. </p>\n    <p>At first, there is only one cookie and the taste of it is <var>D</var> . </p>\n    <p>Find the maximum value of the sum of the taste of the exactly <var>N</var> cookies generated after the following operation is conducted <var>N-1</var> times. </p>\n    <ol>\n        <li>Put one of the cookies into the machine. </li>\n        <li>Input a non-negative integer less than or equal to <var>127</var> on the machine. </li>\n    </ol>\n</section></div>\n\n<div class=\"part\"><section>\n    <h3>Constraints</h3>\n    <ul>\n        <li><var>1 \\leq T \\leq 1000</var></li>\n        <li><var>1 \\leq N_t \\leq 1000</var> <var>(1 \\leq t \\leq T)</var></li>\n        <li><var>1 \\leq D_t \\leq 127</var> <var>(1 \\leq t \\leq T)</var></li>\n    </ul>\n</section></div>\n\n<hr>\n\n<div class=\"io-style\">\n    <div class=\"part\"><section>\n        <h3>Input</h3>\n        <p>The input is given from Standard Input in the following format:</p>\n<pre><var>T</var>\n<var>N_1</var> <var>D_1</var>\n:\n<var>N_T</var> <var>D_T</var>\n</pre>\n        <p>\n            The input consists of multiple test cases. An Integer <var>T</var> that represents the number of test cases is given on line <var>1</var>. <br>\n            Each test case is given on the next <var>T</var> lines. <br>\n            In the <var>t</var>-th test case (<var> 1 \\leq t \\leq T </var>),\n            <var>N_t</var> that represents the number of cookies generated through the operations and <var>D_t</var> that represents the taste of the initial cookie are given separated by space. <br>\n        </p>\n    </section></div>\n\n    <div class=\"part\"><section>\n        <h3>Output</h3>\n        <p>For each test case, print the maximum value of the sum of the taste of the <var>N</var> cookies generated through the operations on one line. </p>\n    </section></div>\n</div>\n\n<hr>\n\n<div class=\"part\"><section>\n    <h3>Sample Input 1</h3>\n<pre>3\n3 1\n4 108\n1 10\n</pre>\n</section></div>\n<div class=\"part\"><section>\n    <h3>Sample Output 1</h3>\n<pre>255\n400\n10\n</pre>\n    <p>\n        On the 1st test case, if the machine is used as follows, three cookies with the taste of <var>61</var>, <var>95</var> and <var>99</var> are generated.\n        Since the sum of these values is maximum among all possible ways, the answer is <var>255</var>.\n        </p><ol>\n            <li>Put the cookie with the taste of <var>1</var> and input an integer <var>60</var> on the machine, lose the cookie and get two cookies with the taste of <var>60</var> and <var>61</var>. </li>\n            <li>Put the cookie with the taste of <var>60</var> and input an integer <var>99</var> on the machine, lose the cookie and get two cookies with the taste of <var>99</var> and <var>95</var>. </li>\n        </ol>\n    <p></p>\n    <p>\n        On the 3rd test case, the machine may not be used.\n    </p>\n</section></div>\n</span>"},"endpoint":"https://atcoder.jp/contests/kupc2016/tasks/kupc2016_c"}