{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1400</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点からなる木があり、頂点には <var>1</var> から <var>N</var> の番号がついています。\nまた、 <var>N-1</var> 本の辺の内、<var>i</var> 番目の辺は頂点 <var>a_i</var> と頂点 <var>b_i</var> を結んでいます。</p>\n<p>はじめ、各辺は青色に塗られています。\nそこで、高橋君は以下の操作を <var>N-1</var> 回行い、赤色の木に作り替えることにしました。</p>\n<ul>\n<li>青色の辺のみからなるパスを一つ選び、そのパス上の辺を一つ取り除く。</li>\n<li>その後、初めに選んだパスの両端点間に赤色の辺を追加する。</li>\n</ul>\n<p>最終的に、各 <var>i</var> に対し、頂点 <var>c_i</var> と頂点 <var>d_i</var> を結ぶ赤い辺が存在するような <var>N</var> 頂点の木に作り替えたいです。</p>\n<p>これが可能であるかどうか判定してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 ≦ N ≦ 10^5</var></li>\n<li><var>1 ≦ a_i,b_i,c_i,d_i ≦ N</var></li>\n<li><var>a_i ≠ b_i</var></li>\n<li><var>c_i ≠ d_i</var></li>\n<li>入力で与えられるグラフはどちらも木である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>a_1</var> <var>b_1</var>\n:\n<var>a_{N-1}</var> <var>b_{N-1}</var>\n<var>c_1</var> <var>d_1</var>\n:\n<var>c_{N-1}</var> <var>d_{N-1}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>高橋君が木を目標の木に作り替えられるならば <code>YES</code> を、作り替えられないならば <code>NO</code> を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3\n1 2\n2 3\n1 3\n3 2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>YES\n</pre>\n\n<p>高橋君は以下の手順で目標の赤い木を作ることができます。</p>\n<ul>\n<li>まず、頂点 <var>1</var> と頂点 <var>3</var> を結ぶパスを選び、青い辺 <var>1-2</var> を削除する。そして、赤い辺 <var>1-3</var> を追加する。</li>\n<li>次に、頂点 <var>2</var> と頂点 <var>3</var> を結ぶパスを選び、青い辺 <var>2-3</var> を削除する。そして、赤い辺 <var>2-3</var> を追加する。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5\n1 2\n2 3\n3 4\n4 5\n3 4\n2 4\n1 4\n1 5\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>YES\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>6\n1 2\n3 5\n4 6\n1 6\n5 1\n5 3\n1 4\n2 6\n4 3\n5 6\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>NO\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1400</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There is a tree with <var>N</var> vertices numbered <var>1</var> through <var>N</var>.\nThe <var>i</var>-th of the <var>N-1</var> edges connects vertices <var>a_i</var> and <var>b_i</var>.</p>\n<p>Initially, each edge is painted blue.\nTakahashi will convert this blue tree into a red tree, by performing the following operation <var>N-1</var> times:</p>\n<ul>\n<li>Select a simple path that consists of only blue edges, and remove one of those edges.</li>\n<li>Then, span a new red edge between the two endpoints of the selected path.</li>\n</ul>\n<p>His objective is to obtain a tree that has a red edge connecting vertices <var>c_i</var> and <var>d_i</var>, for each <var>i</var>.</p>\n<p>Determine whether this is achievable.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 ≤ N ≤ 10^5</var></li>\n<li><var>1 ≤ a_i,b_i,c_i,d_i ≤ N</var></li>\n<li><var>a_i ≠ b_i</var></li>\n<li><var>c_i ≠ d_i</var></li>\n<li>Both input graphs are trees.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>a_1</var> <var>b_1</var>\n:\n<var>a_{N-1}</var> <var>b_{N-1}</var>\n<var>c_1</var> <var>d_1</var>\n:\n<var>c_{N-1}</var> <var>d_{N-1}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print <code>YES</code> if the objective is achievable; print <code>NO</code> otherwise.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3\n1 2\n2 3\n1 3\n3 2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>YES\n</pre>\n\n<p>The objective is achievable, as below:</p>\n<ul>\n<li>First, select the path connecting vertices <var>1</var> and <var>3</var>, and remove a blue edge <var>1-2</var>. Then, span a new red edge <var>1-3</var>.</li>\n<li>Next, select the path connecting vertices <var>2</var> and <var>3</var>, and remove a blue edge <var>2-3</var>. Then, span a new red edge <var>2-3</var>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5\n1 2\n2 3\n3 4\n4 5\n3 4\n2 4\n1 4\n1 5\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>YES\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>6\n1 2\n3 5\n4 6\n1 6\n5 1\n5 3\n1 4\n2 6\n4 3\n5 6\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>NO\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc014/tasks/agc014_e"}