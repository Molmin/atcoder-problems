{"html":{"en":"<span class=\"lang-en\">\n<p>Score: <var>100</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given <var>N</var> lines on the <var>xy</var>-plane. The <var>i</var>-th line <var>(1 \\le i \\le N)</var> passes through two distinct points <var>(a_i, b_i)</var> and <var>(c_i, d_i)</var>. Specifically, <var>(a_1, b_1, c_1, d_1) = (0, 0, 1, 0)</var> and <var>(a_2, b_2, c_2, d_2) = (0, 0, 0, 1)</var>. That is, the first line represents the <var>x</var>-axis, and the second line represents the <var>y</var>-axis.</p>\n<p>Alice is on the <var>xy</var>-plane. She can perform the following operation any number of times (including zero):</p>\n<blockquote>\n<p>Choose one of the <var>N</var> given lines. Alice moves to the position symmetric to her current position with respect to the chosen line.</p>\n</blockquote>\n<p>Additionally, we define that point <var>P</var> is <strong>reachable</strong> from point <var>S</var> if the following condition is satisfied:</p>\n<blockquote>\n<p>For any real number <var>\\varepsilon &gt; 0</var>, there exists a point <var>Q</var> such that the Euclidean distance between <var>Q</var> and <var>P</var> is at most <var>\\varepsilon</var>, and Alice can move from <var>S</var> to <var>Q</var> in a finite number of operations.</p>\n</blockquote>\n<p>Answer <var>Q</var> queries.\nFor the <var>i</var>-th query <var>(1 \\le i \\le Q)</var>, you are given integers <var>X_i, Y_i, Z_i, W_i</var>. Output <code>Yes</code> if <var>(Z_i, W_i)</var> is reachable from <var>(X_i, Y_i)</var>. Otherwise, output <code>No</code>.</p>\n<p>Solve the problem for <var>T</var> test cases.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li>All input values are integers.</li>\n<li><var>1 \\le T \\le 100</var></li>\n<li>For each test case:<ul>\n<li><var>2 \\le N \\le 2000</var></li>\n<li><var>1 \\le Q \\le 2000</var></li>\n<li><var>-10^8 \\le a_i, b_i, c_i, d_i \\le 10^8 \\ (1 \\le i \\le N)</var></li>\n<li><var>(a_i, b_i) \\neq (c_i, d_i)</var></li>\n<li><var>(a_1, b_1, c_1, d_1) = (0, 0, 1, 0)</var></li>\n<li><var>(a_2, b_2, c_2, d_2) = (0, 0, 0, 1)</var></li>\n<li>All given lines are distinct.</li>\n<li><var>-10^8 \\le X_i, Y_i, Z_i, W_i \\le 10^8 \\ (1 \\le i \\le Q)</var></li>\n</ul>\n</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>T</var>\n<var>\\text{case}_1</var>\n<var>\\text{case}_2</var>\n<var>\\vdots</var>\n<var>\\text{case}_T</var>\n</pre>\n<p>Here, <var>\\text{case}_i</var> represents the <var>i</var>-th test case. Each test case is given in the following format:</p>\n<pre><var>N</var>\n<var>a_1</var> <var>b_1</var> <var>c_1</var> <var>d_1</var>\n<var>a_2</var> <var>b_2</var> <var>c_2</var> <var>d_2</var>\n<var>\\vdots</var>\n<var>a_N</var> <var>b_N</var> <var>c_N</var> <var>d_N</var>\n<var>Q</var>\n<var>X_1</var> <var>Y_1</var> <var>Z_1</var> <var>W_1</var>\n<var>X_2</var> <var>Y_2</var> <var>Z_2</var> <var>W_2</var>\n<var>\\vdots</var>\n<var>X_Q</var> <var>Y_Q</var> <var>Z_Q</var> <var>W_Q</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>For each test case, output <var>Q</var> lines. The <var>i</var>-th line <var>(1 \\le i \\le Q)</var> should contain the answer to the <var>i</var>-th query.<br>\nThe judge is case-insensitive for <code>Yes</code> and <code>No</code>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>2\n3\n0 0 1 0\n0 0 0 1\n0 2 2 0\n4\n1 0 2 3\n1 -2 -1 2\n1 1 -1 0\n3 3 3 3\n3\n0 0 1 0\n0 0 0 1\n-2 1 2 3\n2\n2 1 -1 5\n-1 -1 3 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>Yes\nYes\nNo\nYes\nYes\nYes\n</pre>\n<p>Let us explain the first test case. For the first query, Alice can use the second and third lines in sequence to move <var>(1, 0) \\to (-1, 0) \\to (2, 3)</var>. Thus, <var>(2, 3)</var> is reachable from <var>(1, 0)</var>. Note that for the fourth query, if <var>(X_i, Y_i) = (Z_i, W_i)</var>, the destination is always reachable.</p>\n<p>Now let us explain the second test case. For the first query, Alice can use the first and third lines in sequence to move <var>(2, 1) \\to (2, -1) \\to \\left(-\\frac{6}{5}, \\frac{27}{5}\\right)</var>. The distance between <var>(-1, 5)</var> and <var>\\left(-\\frac{6}{5}, \\frac{27}{5}\\right)</var> is <var>\\frac{1}{\\sqrt{5}}</var>. This means that for <var>\\varepsilon \\ge \\frac{1}{\\sqrt{5}}</var>, Alice can find a point <var>Q</var> that satisfies the \"reachable\" condition. Moreover, for any <var>\\varepsilon &gt; 0</var>, Alice can find such a point <var>Q</var>. As a result, <var>(2, 1)</var> is reachable from <var>(-1, 5)</var>.</p></section>\n</div>\n</span>","ja":"<span class=\"lang-ja\">\n<p>配点 : <var>100</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>xy</var> 平面上に <var>N</var> 本の直線が与えられます。<var>i</var> 本目 <var>(1 \\le i \\le N)</var> の直線は異なる <var>2</var> 点 <var>(a_i,b_i),(c_i,d_i)</var> を通る直線です。ただし、<var>(a_1,b_1,c_1,d_1)=(0,0,1,0)</var>、<var>(a_2,b_2,c_2,d_2)=(0,0,0,1)</var> です。すなわち、<var>1</var> 本目の直線は <var>x</var> 軸を表しており、<var>2</var> 本目の直線は <var>y</var> 軸を表しています。</p>\n<p>Alice が <var>xy</var> 平面上にいます。Alice は、以下の操作を <var>0</var> 回以上好きな回数行うことができます。</p>\n<blockquote>\n<p>与えられた <var>N</var> 本の直線のうち <var>1</var> つを選ぶ。Alice は、選んだ直線について現在位置と線対称な位置に移動する。</p>\n</blockquote>\n<p>また、点 <var>S</var> から点 <var>P</var> に<strong>到達可能である</strong>ということを、次のように定義します。</p>\n<blockquote>\n<p>任意の実数 <var>\\varepsilon &gt;0</var> について、<var>P</var> とのユークリッド距離が <var>\\varepsilon</var> 以下であるような点 <var>Q</var> が存在して、Alice が <var>S</var> から <var>Q</var> に有限回の操作で移動できる。</p>\n</blockquote>\n<p><var>Q</var> 個のクエリに答えてください。 \n<var>i</var> 番目 <var>(1 ≤ i ≤ Q)</var> のクエリでは、整数 <var>X_i,Y_i,Z_i,W_i</var> が与えられるので、<var>(X_i,Y_i)</var> から <var>(Z_i,W_i)</var> に到達可能であるならば <code>Yes</code> を、そうでないならば <code>No</code> を出力してください。</p>\n<p><var>T</var> 個のテストケースについて解いてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li>入力はすべて整数</li>\n<li><var>1 \\le T \\le 100</var></li>\n<li>各テストケースについて:<ul>\n<li><var>2 \\le N \\le 2000</var></li>\n<li><var>1 \\le Q \\le 2000</var></li>\n<li><var>-10^8 \\le a_i,b_i,c_i,d_i \\le 10^8 \\ (1 \\le i \\le N)</var></li>\n<li><var>(a_i,b_i) \\ne (c_i,d_i)</var></li>\n<li><var>(a_1,b_1,c_1,d_1)=(0,0,1,0)</var></li>\n<li><var>(a_2,b_2,c_2,d_2)=(0,0,0,1)</var></li>\n<li>与えられる直線はすべて異なる</li>\n<li><var>-10^8 \\le X_i,Y_i,Z_i,W_i \\le 10^8 \\ (1 \\le i \\le Q)</var></li>\n</ul>\n</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>T</var>\n<var>\\text{case}_1</var>\n<var>\\text{case}_2</var>\n<var>\\vdots</var>\n<var>\\text{case}_T</var>\n</pre>\n<p>ここで、<var>\\text{case}_i</var> は <var>i</var> 番目のテストケースを表す。各テストケースは以下の形式で与えられる。</p>\n<pre><var>N</var>\n<var>a_1</var> <var>b_1</var> <var>c_1</var> <var>d_1</var>\n<var>a_2</var> <var>b_2</var> <var>c_2</var> <var>d_2</var>\n<var>\\vdots</var>\n<var>a_N</var> <var>b_N</var> <var>c_N</var> <var>d_N</var>\n<var>Q</var>\n<var>X_1</var> <var>Y_1</var> <var>Z_1</var> <var>W_1</var>\n<var>X_2</var> <var>Y_2</var> <var>Z_2</var> <var>W_2</var>\n<var>\\vdots</var>\n<var>X_Q</var> <var>Y_Q</var> <var>Z_Q</var> <var>W_Q</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>各テストケースに対して、<var>Q</var> 行出力せよ。そのうち <var>i</var> 行目 <var>(1 ≤ i ≤ Q)</var> には、<var>i</var> 番目のクエリの答えを出力せよ。<br>\nなお、ジャッジは <code>Yes</code> と <code>No</code> の大文字小文字を区別しない。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>2\n3\n0 0 1 0\n0 0 0 1\n0 2 2 0\n4\n1 0 2 3\n1 -2 -1 2\n1 1 -1 0\n3 3 3 3\n3\n0 0 1 0\n0 0 0 1\n-2 1 2 3\n2\n2 1 -1 5\n-1 -1 3 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>Yes\nYes\nNo\nYes\nYes\nYes\n</pre>\n<p>最初のテストケースについて述べます。<var>1</var> つ目のクエリについて、<var>2</var> 本目、<var>3</var> 本目の直線を順に使うことで、<var>(1,0) \\rightarrow (-1,0) \\rightarrow (2,3)</var> と移動することができるので、<var>(1,0)</var> から <var>(2,3)</var> は到達可能です。<var>4</var> つ目のクエリについて、<var>(X_i,Y_i)=(Z_i,W_i)</var> であるときは常に到達可能なことに注意してください。</p>\n<p><var>2</var> 番目のテストケースについて述べます。<var>1</var> つ目のクエリについて、<var>1</var> 本目、<var>3</var> 本目と順に使うと、<var>(2,1) \\rightarrow (2,-1) \\rightarrow (-\\frac{6}{5},\\frac{27}{5})</var> と移動することができます。<var>(-1,5)</var> と <var>(-\\frac{6}{5},\\frac{27}{5})</var> の距離は <var>\\frac{1}{\\sqrt{5}}</var> なので、<var>\\varepsilon \\ge \\frac{1}{\\sqrt{5}}</var> に対しては、問題文中の到達可能の条件を満たすような <var>Q</var> として <var>(-\\frac{6}{5},\\frac{27}{5})</var> をとることができます。同様に、任意の <var>\\varepsilon &gt; 0</var> に対しても <var>Q</var> をとることができるため、<var>(2,1)</var> から <var>(-1,5)</var> は到達可能です。</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/ttpc2024_1/tasks/ttpc2024_1_f"}