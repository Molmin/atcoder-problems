{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1200</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 個の頂点と、<var>M</var> 本の辺からなる単純かつ連結な無向グラフ <var>G</var> が与えられます。\n頂点には <var>1</var> から <var>N</var> の番号が、辺には <var>1</var> から <var>M</var> の番号がついています。</p>\n<p>辺 <var>i</var> は頂点 <var>a_i</var> と <var>b_i</var> を双方向につなぐ辺です。\nここで、頂点 <var>1,2,\\ldots,N</var> と辺 <var>1,2,\\ldots,N-1</var> からなる部分グラフが <var>G</var> の全域木となることが保証されます。</p>\n<p>頂点 <var>1,2,\\ldots,N</var> と辺 <var>1,2,\\ldots,N-1</var> からなる木が <var>G</var> の最小全域木となるような辺への重みの割り当て方を <em>良い割り当て</em> と呼びます。</p>\n<p>それぞれの辺に <var>1</var> から <var>M</var> までの相異なる整数の重みを割り当てる方法は <var>M!</var> 通りあります。\nそれらのうち、良い割り当てであるようなもの全てについて最小全域木に含まれる辺の重みの和を求め、それらの総和を <var>10^{9}+7</var> で割ったあまりを出力してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li>入力は全て整数</li>\n<li><var>2 \\leq N \\leq 20</var></li>\n<li><var>N-1 \\leq M \\leq N(N-1)/2</var></li>\n<li><var>1 \\leq a_i, b_i \\leq N</var></li>\n<li><var>G</var> に自己ループや多重辺は存在しない</li>\n<li>頂点 <var>1,2,\\ldots,N</var> と辺 <var>1,2,\\ldots,N-1</var> からなる部分グラフは <var>G</var> の全域木となる</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>a_1</var> <var>b_1</var>\n<var>\\vdots</var>\n<var>a_M</var> <var>b_M</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>答えを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 3\n1 2\n2 3\n1 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>6\n</pre>\n\n<ul>\n<li>辺 <var>3</var> に重み <var>3</var> が割り当てられたときに限り、良い割り当てとなります。</li>\n<li>これらの良い割り当てにおける <var>G</var> の最小全域木に含まれる辺の重みの和は <var>3</var> であり、良い割り当ての個数は <var>2</var> つなので答えは <var>6</var> となります。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>4 4\n1 2\n3 2\n3 4\n1 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>50\n</pre>\n\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>15 28\n10 7\n5 9\n2 13\n2 14\n6 1\n5 12\n2 10\n3 9\n10 15\n11 12\n12 6\n2 12\n12 8\n4 10\n15 3\n13 14\n1 15\n15 12\n4 14\n1 7\n5 11\n7 13\n9 10\n2 7\n1 9\n5 6\n12 14\n5 2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>657573092\n</pre>\n\n<ul>\n<li>総和を <var>10^{9}+7</var> で割ったあまりを出力してください。</li>\n</ul></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1200</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a simple connected undirected graph <var>G</var> consisting of <var>N</var> vertices and <var>M</var> edges.\nThe vertices are numbered <var>1</var> to <var>N</var>, and the edges are numbered <var>1</var> to <var>M</var>.</p>\n<p>Edge <var>i</var> connects Vertex <var>a_i</var> and <var>b_i</var> bidirectionally.\nIt is guaranteed that the subgraph consisting of Vertex <var>1,2,\\ldots,N</var> and Edge <var>1,2,\\ldots,N-1</var> is a spanning tree of <var>G</var>.</p>\n<p>An allocation of weights to the edges is called a <em>good allocation</em> when the tree consisting of Vertex <var>1,2,\\ldots,N</var> and Edge <var>1,2,\\ldots,N-1</var> is a minimum spanning tree of <var>G</var>.</p>\n<p>There are <var>M!</var> ways to allocate the edges distinct integer weights between <var>1</var> and <var>M</var>.\nFor each good allocation among those, find the total weight of the edges in the minimum spanning tree, and print the sum of those total weights modulo <var>10^{9}+7</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li>All values in input are integers.</li>\n<li><var>2 \\leq N \\leq 20</var></li>\n<li><var>N-1 \\leq M \\leq N(N-1)/2</var></li>\n<li><var>1 \\leq a_i, b_i \\leq N</var></li>\n<li><var>G</var> does not have self-loops or multiple edges.</li>\n<li>The subgraph consisting of Vertex <var>1,2,\\ldots,N</var> and Edge <var>1,2,\\ldots,N-1</var> is a spanning tree of <var>G</var>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>a_1</var> <var>b_1</var>\n<var>\\vdots</var>\n<var>a_M</var> <var>b_M</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the answer.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 3\n1 2\n2 3\n1 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>6\n</pre>\n\n<p>An allocation is good only if Edge <var>3</var> has the weight <var>3</var>. For these good allocations, the total weight of the edges in the minimum spanning tree is <var>3</var>, and there are two good allocations, so the answer is <var>6</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>4 4\n1 2\n3 2\n3 4\n1 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>50\n</pre>\n\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>15 28\n10 7\n5 9\n2 13\n2 14\n6 1\n5 12\n2 10\n3 9\n10 15\n11 12\n12 6\n2 12\n12 8\n4 10\n15 3\n13 14\n1 15\n15 12\n4 14\n1 7\n5 11\n7 13\n9 10\n2 7\n1 9\n5 6\n12 14\n5 2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>657573092\n</pre>\n\n<p>Print the sum of those total weights modulo <var>10^{9}+7</var>.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/diverta2019/tasks/diverta2019_f"}