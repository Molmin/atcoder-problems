{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>500</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 個の都市があり、都市 <var>1</var>, 都市 <var>2</var>, <var>\\ldots</var>, 都市 <var>N</var> と番号づけられています。<br>\nいくつかの異なる都市の間は一方通行のテレポーターによって移動できます。\n都市 <var>i</var> <var>(1\\leq i\\leq N)</var> からテレポーターによって直接移動できる都市は <code>0</code> と <code>1</code> からなる長さ <var>M</var> の文字列 <var>S_i</var> によって表されます。具体的には、<var>1\\leq j\\leq N</var> に対して、</p>\n<ul>\n<li><var>1\\leq j-i\\leq M</var> かつ <var>S_i</var> の <var>(j-i)</var> 文字目が <code>1</code> ならば、都市 <var>i</var> から都市 <var>j</var> に直接移動できる。</li>\n<li>そうでない時、都市 <var>i</var> から都市 <var>j</var> へは直接移動できない。</li>\n</ul>\n<p><var>k=2,3,\\ldots, N-1</var> に対して次の問題を解いてください。</p>\n<blockquote>\n<p>テレポータを繰り返し使用することによって、<b>都市 <var>k</var> を通らずに</b>都市 <var>1</var> から 都市 <var>N</var> へ移動できるか判定し、\nできるならばそのために必要なテレポーターの使用回数の最小値を、\nできないならば <var>-1</var> を出力せよ。</p>\n</blockquote>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>3 \\leq N \\leq 10^5</var></li>\n<li><var>1\\leq M\\leq 10</var></li>\n<li><var>M&lt;N</var></li>\n<li><var>S_i</var> は <code>0</code> と <code>1</code> のみからなる長さ <var>M</var> の文字列</li>\n<li><var>i+j&gt;N</var> ならば <var>S_i</var> の <var>j</var> 文字目は <code>0</code></li>\n<li><var>N,M</var> は整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>S_1</var>\n<var>S_2</var>\n<var>\\vdots</var>\n<var>S_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>N-2</var> 個の整数を空白区切りで一行に出力せよ。\n<var>i</var> <var>(1\\leq i\\leq N-2)</var> 番目には、<var>k=i+1</var> に対する問題の答えを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5 2\n11\n01\n11\n10\n00\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>2 3 2\n</pre>\n<p>テレポータによって各都市からはそれぞれ以下の都市へ直接移動する事ができます。</p>\n<ul>\n<li>都市 <var>1</var> からは都市 <var>2,3</var> へ移動できる。</li>\n<li>都市 <var>2</var> からは都市 <var>4</var> へ移動できる。</li>\n<li>都市 <var>3</var> からは都市 <var>4,5</var> へ移動できる。</li>\n<li>都市 <var>4</var> からは都市 <var>5</var> へ移動できる。</li>\n<li>都市 <var>5</var> から移動できる都市は存在しない。</li>\n</ul>\n<p>よって、都市 <var>1</var> から都市 <var>5</var> へ移動する方法は、</p>\n<ul>\n<li>経路 <var>1</var> : 都市 <var>1</var> <var>\\to</var> 都市 <var>2</var> <var>\\to</var> 都市 <var>4</var> <var>\\to</var> 都市 <var>5</var></li>\n<li>経路 <var>2</var> : 都市 <var>1</var> <var>\\to</var> 都市 <var>3</var> <var>\\to</var> 都市 <var>4</var> <var>\\to</var> 都市 <var>5</var></li>\n<li>経路 <var>3</var> : 都市 <var>1</var> <var>\\to</var> 都市 <var>3</var> <var>\\to</var> 都市 <var>5</var></li>\n</ul>\n<p>の <var>3</var> つがあり、</p>\n<ul>\n<li>都市 <var>2</var> を通らない経路は経路 <var>2</var>, 経路 <var>3</var> の <var>2</var>つであり、そのうちテレポーターの使用回数が最小となるのは経路 <var>3</var> で、この時 <var>2</var> 回使用する。</li>\n<li>都市 <var>3</var> を通らない経路は経路 <var>1</var> のみであり、この時テレポーターは <var>3</var> 回使用する。</li>\n<li>都市 <var>4</var> を通らない経路は経路 <var>3</var> のみであり、この時テレポーターは <var>2</var> 回使用する。</li>\n</ul>\n<p>となります。よって、<var>2,3,2</var> をこの順に空白区切りで出力します。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>6 3\n101\n001\n101\n000\n100\n000\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>-1 3 3 -1\n</pre>\n<p>都市 <var>1</var> から都市 <var>6</var> へ移動する方法は、都市 <var>1</var> <var>\\to</var> 都市 <var>2</var> <var>\\to</var> 都市 <var>5</var> <var>\\to</var> 都市 <var>6</var> のみであるため、<br>\n<var>k=2,5</var> の場合には都市 <var>k</var> を通らずに都市 <var>1</var> から都市 <var>6</var> へ移動する方法は存在せず、<br>\n<var>k=3,4</var> の場合には上の方法が条件をみたし、テレポーターを <var>3</var> 回使用します。</p>\n<p>よって、<var>-1,3,3,-1</var> をこの順に空白区切りで出力します。</p>\n<p>テレポーターは一方通行であるため、\n都市 <var>3</var> から都市 <var>4</var> へはテレポーターによって移動できますが、\n都市 <var>4</var> から都市 <var>3</var> へは移動できず、<br>\n都市 <var>1</var> <var>\\to</var> 都市 <var>4</var> <var>\\to</var> 都市 <var>3</var> <var>\\to</var> 都市 <var>6</var> \nのような移動はできない事に注意してください。</p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>500</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There are <var>N</var> cities numbered city <var>1</var>, city <var>2</var>, <var>\\ldots</var>, and city <var>N</var>.<br>\nThere are also one-way teleporters that send you to different cities.\nWhether a teleporter can send you directly from city <var>i</var> <var>(1\\leq i\\leq N)</var> to another is represented by a length-<var>M</var> string <var>S_i</var> consisting of <code>0</code> and <code>1</code>.  Specifically, for <var>1\\leq j\\leq N</var>,</p>\n<ul>\n<li>if <var>1\\leq j-i\\leq M</var> and the <var>(j-i)</var>-th character of <var>S_i</var> is <code>1</code>, then a teleporter can send you directly from city <var>i</var> to city <var>j</var>;</li>\n<li>otherwise, it cannot send you directly from city <var>i</var> to city <var>j</var>.</li>\n</ul>\n<p>Solve the following problem for <var>k=2,3,\\ldots, N-1</var>:</p>\n<blockquote>\n<p>Can you travel from city <var>1</var> to city <var>N</var> <b>without visiting city <var>k</var></b> by repeatedly using a teleporter?\nIf you can, print the minimum number of times you need to use a teleporter;\notherwise, print <var>-1</var>.</p>\n</blockquote>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>3 \\leq N \\leq 10^5</var></li>\n<li><var>1\\leq M\\leq 10</var></li>\n<li><var>M&lt;N</var></li>\n<li><var>S_i</var> is a string of length <var>M</var> consisting of <code>0</code> and <code>1</code>.</li>\n<li>If <var>i+j&gt;N</var>, then the <var>j</var>-th character of <var>S_i</var> is <code>0</code>.</li>\n<li><var>N</var> and <var>M</var> are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>S_1</var>\n<var>S_2</var>\n<var>\\vdots</var>\n<var>S_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print <var>(N-2)</var> integers, separated by spaces, in a single line.\nThe <var>i</var>-th <var>(1\\leq i\\leq N-2)</var> integer should be the answer to the problem for <var>k=i+1</var>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5 2\n11\n01\n11\n10\n00\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>2 3 2\n</pre>\n<p>A teleporter sends you</p>\n<ul>\n<li>from city <var>1</var> to cities <var>2</var> and <var>3</var>;</li>\n<li>from city <var>2</var> to city <var>4</var>;</li>\n<li>from city <var>3</var> to cities <var>4</var> and <var>5</var>;</li>\n<li>from city <var>4</var> to city <var>5</var>; and</li>\n<li>from city <var>5</var> to nowhere.</li>\n</ul>\n<p>Therefore, there are three paths to travel from city <var>1</var> to city <var>5</var>:</p>\n<ul>\n<li>path <var>1</var> : city <var>1</var> <var>\\to</var> city <var>2</var> <var>\\to</var> city <var>4</var> <var>\\to</var> city <var>5</var>;</li>\n<li>path <var>2</var> : city <var>1</var> <var>\\to</var> city <var>3</var> <var>\\to</var> city <var>4</var> <var>\\to</var> city <var>5</var>; and</li>\n<li>path <var>3</var> : city <var>1</var> <var>\\to</var> city <var>3</var> <var>\\to</var> city <var>5</var>.</li>\n</ul>\n<p>Among these paths,</p>\n<ul>\n<li>two paths, path <var>2</var> and path <var>3</var>, do not visit city <var>2</var>.  Among them, path <var>3</var> requires the minimum number of teleporter uses (twice).</li>\n<li>Path <var>1</var> is the only path without city <var>3</var>.  It requires using a teleporter three times.</li>\n<li>Path <var>3</var> is the only path without city <var>4</var>.  It requires using a teleporter twice.</li>\n</ul>\n<p>Thus, <var>2</var>, <var>3</var>, and <var>2</var>, separated by spaces, should be printed.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>6 3\n101\n001\n101\n000\n100\n000\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>-1 3 3 -1\n</pre>\n<p>The only path from city <var>1</var> to city <var>6</var> is city <var>1</var> <var>\\to</var> city <var>2</var> <var>\\to</var> city <var>5</var> <var>\\to</var> city <var>6</var>.<br>\nFor <var>k=2,5</var>, there is no way to travel from city <var>1</var> to city <var>6</var> without visiting city <var>k</var>.<br>\nFor <var>k=3,4</var>, the path above satisfies the condition; it requires using a teleporter three times.</p>\n<p>Thus, <var>-1</var>, <var>3</var>, <var>3</var>, and <var>-1</var>, separated by spaces, should be printed.</p>\n<p>Note that a teleporter is one-way;\na teleporter can send you from city <var>3</var> to city <var>4</var>,\nbut not from city <var>4</var> to city <var>3</var>,<br>\nso the following path, for example, is invalid: \ncity <var>1</var> <var>\\to</var> city <var>4</var> <var>\\to</var> city <var>3</var> <var>\\to</var> city <var>6</var>.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc291/tasks/abc291_f"}