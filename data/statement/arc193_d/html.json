{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1000</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><code>0</code> と <code>1</code> のみからなる <var>2</var> つの長さ <var>N</var> の文字列 <var>A = A_1A_2 \\ldots A_N</var> と <var>B = B_1B_2 \\ldots B_N</var> が与えられます。</p>\n<p>左右に一列に並んだ <var>N</var> 個のマスがあります。\n<var>i = 1, 2, \\ldots, N</var> について、左から <var>i</var> 番目のマスはマス <var>i</var> と呼ばれ、\nはじめマス <var>i</var> には、<var>A_i</var> = <code>1</code> ならばコマが <var>1</var> 個置かれており、<var>A_i</var> = <code>0</code> ならばコマは置かれていません。</p>\n<p>下記の操作を好きな回数（ <var>0</var> 回でも良い）だけ繰り返します。</p>\n<ul>\n<li>まず、<var>1</var> 以上 <var>N</var> 以下の整数 <var>i</var> を選ぶ。</li>\n<li>そして、すべてのコマを同時に、マス <var>i</var> に近づく方向に <var>1</var> マス動かす。すなわち、各コマを次が成り立つように動かす：\nそのコマの移動前の位置をマス <var>j</var> 、移動後の位置をマス <var>j'</var> とすると、<ul>\n<li><var>i \\lt j</var> ならば <var>j' = j-1</var> 、</li>\n<li><var>i \\gt j</var> ならば <var>j' = j+1</var> 、</li>\n<li><var>i = j</var> ならば <var>j' = j</var> 。</li>\n</ul>\n</li>\n</ul>\n<p>上記の操作の繰り返しによって、下記の条件を満たす状態にすることが可能かを判定し、可能な場合はそれまでに操作を行う回数としてありえる最小値を求めてください。</p>\n<blockquote>\n<p>すべての <var>i = 1, 2, \\ldots, N</var> について次が成り立つ：\n <var>B_i = </var> <code>1</code> であるとき、かつ、そのときに限り、マス <var>i</var> にコマが <var>1</var> 個以上存在する。</p>\n</blockquote>\n<p><var>T</var> 個の独立なテストケースが与えられるので、それぞれについて答えを出力してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq T \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq N \\leq 10^6</var></li>\n<li><var>T, N</var> は整数</li>\n<li><var>A, B</var> はそれぞれ <code>0</code> と <code>1</code> のみからなる長さ <var>N</var> の文字列</li>\n<li><var>A_i = </var> <code>1</code> である <var>i</var> が存在する</li>\n<li><var>B_i = </var> <code>1</code> である <var>i</var> が存在する</li>\n<li>すべてのテストケースにわたる <var>N</var> の総和は <var>10^6</var> 以下</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>T</var>\n<var>\\mathrm{case}_1</var>\n<var>\\mathrm{case}_2</var>\n<var>\\vdots</var>\n<var>\\mathrm{case}_T</var>\n</pre>\n<p>ここで、<var>i = 1, 2, \\ldots, T</var> について、<var>\\mathrm{case}_i</var> は <var>i</var> 番目のテストケースを表す。</p>\n<p>各テストケースは下記の形式で与えられる。</p>\n<pre><var>N</var>\n<var>A</var>\n<var>B</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>T</var> 行出力せよ。\n<var>i = 1, 2, \\ldots, T</var> について、<var>i</var> 行目には <var>i</var> 番目のテストケースに対する答えとして、\n問題文中の条件を満たす状態にすることが不可能な場合は <code>-1</code> を、\n可能な場合はそれまでに操作を行う回数としてありえる最小値を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3\n8\n01001101\n00001011\n3\n010\n111\n20\n10100011011110101011\n00010001111101100000\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>3\n-1\n5\n</pre>\n<p>入力は <var>3</var> 個の独立なテストケースからなります。</p>\n<p><var>1</var> 番目のテストケースでは、\n初期状態において、コマの配置、すなわち各マスに置かれているコマの個数を並べた列は <var>(0, 1, 0, 0, 1, 1, 0, 1)</var> です。\n下記の通りに <var>3</var> 回の操作を行うことで、問題文中の条件を満たす状態にすることができます。</p>\n<ul>\n<li><var>1</var> 回目の操作として、<var>i = 5</var> として操作を行う。その結果、コマの配置は <var>(0, 0, 1, 0, 2, 0, 1, 0)</var> となる。</li>\n<li><var>2</var> 回目の操作として、<var>i = 8</var> として操作を行う。その結果、コマの配置は <var>(0, 0, 0, 1, 0, 2, 0, 1)</var> となる。</li>\n<li><var>3</var> 回目の操作として、<var>i = 8</var> として操作を行う。その結果、コマの配置は <var>(0, 0, 0, 0, 1, 0, 2, 1)</var> となる。</li>\n</ul>\n<p>一方、<var>3</var> 回未満の操作で問題文中の条件を満たす状態にすることはできないため、<var>1</var> 番目のテストケースに対する答えとして、<var>3</var> を出力します。</p>\n<p><var>2</var> 番目のテストケースでは、\nどのような手順で操作を行っても、問題文中の条件を満たすことはできません。\nよって、<var>2</var> 番目のテストケースに対する答えとして、<code>-1</code> を出力します。</p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1000</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given two length-<var>N</var> strings <var>A = A_1A_2 \\ldots A_N</var> and <var>B = B_1B_2 \\ldots B_N</var>, each consisting of <code>0</code> and <code>1</code>.</p>\n<p>There are <var>N</var> squares aligned in a row from left to right. For <var>i = 1, 2, \\ldots, N</var>, the <var>i</var>-th square from the left is called square <var>i</var>. Initially, square <var>i</var> contains a piece if <var>A_i = </var> <code>1</code>, and no piece if <var>A_i = </var> <code>0</code>.</p>\n<p>You may repeat the following operation any number of times (possibly zero):</p>\n<ul>\n<li>Choose an integer <var>i</var> between <var>1</var> and <var>N</var>, inclusive.</li>\n<li>Move all pieces simultaneously one square closer to square <var>i</var>. That is, for each piece, let square <var>j</var> be its current position and square <var>j'</var> be its new position, and the following holds:<ul>\n<li>if <var>i &lt; j</var>, then <var>j' = j-1</var>;</li>\n<li>if <var>i &gt; j</var>, then <var>j' = j+1</var>;</li>\n<li>if <var>i = j</var>, then <var>j' = j</var>.</li>\n</ul>\n</li>\n</ul>\n<p>Determine whether it is possible to reach a configuration satisfying the following condition, and if it is possible, find the minimum number of operations needed to do so:</p>\n<blockquote>\n<p>For every <var>i = 1, 2, \\ldots, N</var>, there is at least one piece in square <var>i</var> if and only if <var>B_i = </var> <code>1</code>.</p>\n</blockquote>\n<p>You are given <var>T</var> independent test cases. Print the answer for each of them.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq T \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq N \\leq 10^6</var></li>\n<li><var>T</var> and <var>N</var> are integers.</li>\n<li><var>A</var> and <var>B</var> are strings of length <var>N</var>, each consisting of <code>0</code> and <code>1</code>.</li>\n<li>There exists <var>i</var> such that <var>A_i = </var> <code>1</code>.</li>\n<li>There exists <var>i</var> such that <var>B_i = </var> <code>1</code>.</li>\n<li>The sum of <var>N</var> over all test cases is at most <var>10^6</var>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>T</var>\n<var>\\mathrm{case}_1</var>\n<var>\\mathrm{case}_2</var>\n<var>\\vdots</var>\n<var>\\mathrm{case}_T</var>\n</pre>\n<p>Here, <var>\\mathrm{case}_i</var> (<var>i=1,2,\\ldots,T</var>) denotes the <var>i</var>-th test case.</p>\n<p>Each test case is given in the following format:</p>\n<pre><var>N</var>\n<var>A</var>\n<var>B</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print <var>T</var> lines.\nFor each <var>i = 1, 2, \\ldots, T</var>, on the <var>i</var>-th line, print <code>-1</code> if it is impossible to reach a configuration satisfying the condition for the <var>i</var>-th test case. Otherwise, print the minimum number of operations needed.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3\n8\n01001101\n00001011\n3\n010\n111\n20\n10100011011110101011\n00010001111101100000\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>3\n-1\n5\n</pre>\n<p>The input has three independent test cases.</p>\n<p>In the first test case, initially, the sequence of the numbers of pieces in the squares is <var>(0, 1, 0, 0, 1, 1, 0, 1)</var>. By performing the operation three times as follows, you can satisfy the condition:</p>\n<ul>\n<li>Choose <var>i = 5</var>. After the operation, the configuration is <var>(0, 0, 1, 0, 2, 0, 1, 0)</var>.</li>\n<li>Choose <var>i = 8</var>. After the operation, the configuration is <var>(0, 0, 0, 1, 0, 2, 0, 1)</var>.</li>\n<li>Choose <var>i = 8</var>. After the operation, the configuration is <var>(0, 0, 0, 0, 1, 0, 2, 1)</var>.</li>\n</ul>\n<p>It is impossible to satisfy the condition in fewer than three operations, so the answer is <var>3</var>.</p>\n<p>In the second test case, no matter how you perform the operations, you cannot satisfy the condition, so the answer is <code>-1</code>.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc193/tasks/arc193_d"}