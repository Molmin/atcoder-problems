{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1600</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>黒板に <var>N</var> 個の整数が書かれています。<var>i</var> 番目の整数は <var>A_i</var> です。</p>\n<p>高橋君と青木君は以下の手順でこれらの数を一列に並べることにしました。</p>\n<ul>\n<li>最初に、高橋君が好きな順に一列に並べる。</li>\n<li>次に、青木君が隣り合う <var>2</var> つの数を選んで入れ替えることを好きな回数だけ繰り返す。<br>\n  ただし、入れ替える <var>2</var> 数は互いに素でなければならない。</li>\n</ul>\n<p>高橋君は最終的な並びが辞書順最小となるように、青木君は最終的な並びが辞書順最大となるように最適に行動するとしたとき、\n最終的な数列を求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 ≦ N ≦ 2000</var></li>\n<li><var>1 ≦ A_i ≦ 10^8</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>A_1</var> <var>A_2</var> … <var>A_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>最終的な数列を一行に出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5\n1 2 3 4 5\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>5 3 2 4 1\n</pre>\n\n<p>高橋君は与えられた数を <var>(1,2,3,4,5)</var> という順番で並べれば、青木君が最適に動かしても <var>(5,3,2,4,1)</var> となります。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>4\n2 3 4 6\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>2 4 6 3\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1600</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There are <var>N</var> integers written on a blackboard. The <var>i</var>-th integer is <var>A_i</var>.</p>\n<p>Takahashi and Aoki will arrange these integers in a row, as follows:</p>\n<ul>\n<li>First, Takahashi will arrange the integers as he wishes.</li>\n<li>Then, Aoki will repeatedly swap two adjacent integers that are coprime, as many times as he wishes.</li>\n</ul>\n<p>We will assume that Takahashi acts optimally so that the eventual sequence will be lexicographically as small as possible, and we will also assume that Aoki acts optimally so that the eventual sequence will be lexicographically as large as possible.\nFind the eventual sequence that will be produced.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 ≦ N ≦ 2000</var></li>\n<li><var>1 ≦ A_i ≦ 10^8</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>A_1</var> <var>A_2</var> … <var>A_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the eventual sequence that will be produced, in a line.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5\n1 2 3 4 5\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>5 3 2 4 1\n</pre>\n\n<p>If Takahashi arranges the given integers in the order <var>(1,2,3,4,5)</var>, they will become <var>(5,3,2,4,1)</var> after Aoki optimally manipulates them.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>4\n2 3 4 6\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>2 4 6 3\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc010/tasks/agc010_e"}