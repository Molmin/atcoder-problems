{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>700</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>L</var> 個のマスが横一列に並んでいます．\nマスは左から順に <var>1,2,\\ldots,L</var> と番号が振られています．</p>\n<p><var>N</var> 匹のペンギンがマス目の上にいます．\nペンギンは左から順に <var>1,2,\\ldots,N</var> と番号が振られています．\n最初，ペンギン <var>i</var> はマス <var>A_i</var> の上にいます．\nここで，<var>1 \\leq A_1 &lt; A_2 &lt; \\ldots &lt; A_N \\leq L</var> です．</p>\n<p>あなたは，次の操作を好きな回数行うことができます．</p>\n<ul>\n<li>ペンギンを <var>1</var> 匹選び，左または右へ向かって滑らせる．\nペンギンは，目の前に空マスがある限り滑り続ける．\n別のペンギンのいるマスの直前のマスに到達する，もしくは目の前にマスが存在しなくなったら，ペンギンは停止する．</li>\n</ul>\n<p>例えば，<var>N=3,L=10</var> で，ペンギンのいるマスが <var>(2,3,7)</var> であるとします．\nこのとき，ペンギン <var>2</var> を右に滑らせると，ペンギン <var>2</var> はマス <var>6</var> まで移動します．\nまた，ペンギン <var>3</var> を右に滑らせると，ペンギン <var>3</var> はマス <var>10</var> まで移動します．</p>\n<p>あなたの目標は，すべての <var>i</var> について，ペンギン <var>i</var> がマス <var>B_i</var> の上にいるようにすることです．\nここで，<var>1 \\leq B_1 &lt; B_2 &lt; \\ldots &lt; B_N \\leq L</var> です．\n目標が達成可能か判定し，可能ならば必要な操作回数の最小値を求めてください．</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq N \\leq 10^5</var></li>\n<li><var>N \\leq L \\leq 10^9</var></li>\n<li><var>1 \\leq A_1 &lt; A_2 &lt; \\ldots &lt; A_N \\leq L</var></li>\n<li><var>1 \\leq B_1 &lt; B_2 &lt; \\ldots &lt; B_N \\leq L</var></li>\n<li>入力される数はすべて整数．</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる．</p>\n<pre><var>N</var> <var>L</var>\n<var>A_1</var> <var>A_2</var> <var>\\cdots</var> <var>A_N</var>\n<var>B_1</var> <var>B_2</var> <var>\\cdots</var> <var>B_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>目標が達成不可能な場合は <var>-1</var> を，可能な場合は必要な操作回数の最小値を出力せよ．</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>4 11\n3 4 6 10\n1 5 6 11\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>3\n</pre>\n\n<p>次のように操作すればよいです．</p>\n<ul>\n<li>ペンギン <var>1</var> を左に滑らせる．ペンギンの位置は，<var>(1,4,6,10)</var> になる．</li>\n<li>ペンギン <var>2</var> を右に滑らせる．ペンギンの位置は，<var>(1,5,6,10)</var> になる．</li>\n<li>ペンギン <var>4</var> を右に滑らせる．ペンギンの位置は，<var>(1,5,6,11)</var> になる．</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>1 3\n1\n2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>-1\n</pre>\n\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>10 1000000000\n65110170 68805223 123016442 275946481 661490312 760727752 764540566 929355340 930658577 947099792\n1 2 123016442 661490311 929355337 930658574 999999997 999999998 999999999 1000000000\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>13\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>700</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There are <var>L</var> squares lining up horizontally in a row, numbered <var>1, 2, \\ldots, L</var> from left to right.</p>\n<p>On those squares are <var>N</var> penguins, numbered <var>1, 2, \\ldots, N</var> from left to right.\nInitially, Penguin <var>i</var> is on Square <var>A_i</var>.\nHere, <var>1 \\leq A_1 &lt; A_2 &lt; \\ldots &lt; A_N \\leq L</var> holds.</p>\n<p>You can do the following operations any number of times:</p>\n<ul>\n<li>Choose one penguin and slide it to the left or the right.\nThe penguin will keep sliding as long as there is an empty square ahead.\nIt will stop when it reaches a square just before a square occupied by another penguin, or there is no square ahead.</li>\n</ul>\n<p>For example, assume that <var>N=3</var>, <var>L=10</var>, and the penguins are on the squares <var>(2,3,7)</var>.\nHere, if we slide Penguin <var>2</var> to the right, it will move to Square <var>6</var>; if we slide Penguin <var>3</var> to the right, it will move to Square <var>10</var>.</p>\n<p>Your objective is to put Penguin <var>i</var> on Square <var>B_i</var> for every <var>i</var>.\nHere, <var>1 \\leq B_1 &lt; B_2 &lt; \\ldots &lt; B_N \\leq L</var> holds.\nDetermine whether the objective is achievable. If it is achievable, find the minimum number of operations needed.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N \\leq 10^5</var></li>\n<li><var>N \\leq L \\leq 10^9</var></li>\n<li><var>1 \\leq A_1 &lt; A_2 &lt; \\ldots &lt; A_N \\leq L</var></li>\n<li><var>1 \\leq B_1 &lt; B_2 &lt; \\ldots &lt; B_N \\leq L</var></li>\n<li>All numbers in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>L</var>\n<var>A_1</var> <var>A_2</var> <var>\\cdots</var> <var>A_N</var>\n<var>B_1</var> <var>B_2</var> <var>\\cdots</var> <var>B_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If the objective is unachievable, print <var>-1</var>; if it is achievable, print the minimum number of operations needed.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>4 11\n3 4 6 10\n1 5 6 11\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>3\n</pre>\n\n<p>The following sequence of operations achieves the objective:</p>\n<ul>\n<li>Slide Penguin <var>1</var> to the left. The penguins are now on the squares <var>(1,4,6,10)</var>.</li>\n<li>Slide Penguin <var>2</var> to the right. The penguins are now on the squares <var>(1,5,6,10)</var>.</li>\n<li>Slide Penguin <var>4</var> to the right. The penguins are now on the squares <var>(1,5,6,11)</var>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>1 3\n1\n2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>-1\n</pre>\n\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>10 1000000000\n65110170 68805223 123016442 275946481 661490312 760727752 764540566 929355340 930658577 947099792\n1 2 123016442 661490311 929355337 930658574 999999997 999999998 999999999 1000000000\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>13\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc048/tasks/agc048_c"}