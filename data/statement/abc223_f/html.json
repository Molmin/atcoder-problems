{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>500</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>以下のいずれかの条件を満たす文字列を<strong>正しい括弧列</strong>と定義します。</p>\n<ul>\n<li>空文字列</li>\n<li>ある<strong>正しい括弧列</strong> <var>A</var> が存在して、<code>(</code>, <var>A</var>, <code>)</code> をこの順に連結した文字列</li>\n<li>ある空でない<strong>正しい括弧列</strong> <var>A</var>, <var>B</var> が存在して、<var>A</var>, <var>B</var> をこの順に連結した文字列</li>\n</ul>\n<p><code>(</code> と <code>)</code> のみからなる長さ <var>N</var> の文字列 <var>S</var> があります。</p>\n<p><var>Q</var> 個のクエリ <var>\\text{Query}_1,\\text{Query}_2,\\ldots,\\text{Query}_Q</var> が与えられるので、順番に処理してください。クエリには <var>2</var> 種類があり、入力形式とクエリの内容は以下の通りです。</p>\n<ul>\n<li><code>1 l r</code> : <var>S</var> の <var>l</var> 文字目と <var>r</var> 文字目を入れ替える。</li>\n<li><code>2 l r</code> : <var>S</var> の <var>l</var> 文字目から <var>r</var> 文字目までの連続部分文字列が<strong>正しい括弧列</strong>であるか判定する。</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq N,Q \\leq 2 \\times 10^5</var></li>\n<li><var>S</var> は <code>(</code> と <code>)</code> のみからなる長さ <var>N</var> の文字列</li>\n<li><var>1 \\leq l &lt; r \\leq N</var></li>\n<li><var>N,Q,l,r</var> はいずれも整数</li>\n<li>各クエリは <code>1 l r</code>、<code>2 l r</code> のいずれかの形式で与えられる。</li>\n<li><code>2 l r</code> の形式のクエリは <var>1</var> つ以上与えられる。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>Q</var>\n<var>S</var>\n<var>\\text{Query}_1</var>\n<var>\\text{Query}_2</var>\n<var>\\vdots</var>\n<var>\\text{Query}_Q</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><code>2 l r</code> の形式の各クエリに対して、連続部分文字列が<strong>正しい括弧列</strong>である場合 <code>Yes</code>、そうでない場合 <code>No</code> と出力し、改行せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5 3\n(())(\n2 1 4\n2 1 2\n2 4 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>Yes\nNo\nNo\n</pre>\n<p><var>1</var> つ目のクエリにおいて、<code>(())</code> は<strong>正しい括弧列</strong>です。</p>\n<p><var>2</var> つ目のクエリにおいて、<code>((</code> は<strong>正しい括弧列</strong>ではありません。</p>\n<p><var>3</var> つ目のクエリにおいて、<code>)(</code> は<strong>正しい括弧列</strong>ではありません。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5 3\n(())(\n2 1 4\n1 1 4\n2 1 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>Yes\nNo\n</pre>\n<p><var>1</var> つ目のクエリにおいて、<code>(())</code> は<strong>正しい括弧列</strong>です。</p>\n<p><var>2</var> つ目のクエリによって、<var>S</var> は <code>)()((</code> となります。</p>\n<p><var>3</var> つ目のクエリにおいて、<code>)()(</code> は<strong>正しい括弧列</strong>ではありません。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>8 8\n(()(()))\n2 2 7\n2 2 8\n1 2 5\n2 3 4\n1 3 4\n1 3 5\n1 1 4\n1 6 8\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>Yes\nNo\nNo\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>500</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Let us define a <strong>correct parenthesis sequence</strong> as a string that satisfies one of the following conditions.</p>\n<ul>\n<li>It is an empty string.</li>\n<li>It is a concatenation of <code>(</code>, <var>A</var>, <code>)</code>, in this order, for some <strong>correct parenthesis sequence</strong> <var>A</var>.</li>\n<li>It is a concatenation of <var>A</var>, <var>B</var>, in this order, for some <strong>correct parenthesis sequences</strong> <var>A</var> and <var>B</var>.</li>\n</ul>\n<p>We have a string <var>S</var> of length <var>N</var> consisting of <code>(</code> and <code>)</code>.</p>\n<p>Given <var>Q</var> queries <var>\\text{Query}_1,\\text{Query}_2,\\ldots,\\text{Query}_Q</var>, process them in order. There are two kinds of queries, with the following formats and content.</p>\n<ul>\n<li><code>1 l r</code>: Swap the <var>l</var>-th and <var>r</var>-th characters of <var>S</var>.</li>\n<li><code>2 l r</code>: Determine whether the contiguous substring from the <var>l</var>-th through the <var>r</var>-th character is a <strong>correct parenthesis sequence</strong>.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N,Q \\leq 2 \\times 10^5</var></li>\n<li><var>S</var> is a string of length <var>N</var> consisting of <code>(</code> and <code>)</code>.</li>\n<li><var>1 \\leq l &lt; r \\leq N</var></li>\n<li><var>N,Q,l,r</var> are all integers.</li>\n<li>Each query is in the format <code>1 l r</code> or <code>2 l r</code>.</li>\n<li>There is at least one query in the format <code>2 l r</code>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>Q</var>\n<var>S</var>\n<var>\\text{Query}_1</var>\n<var>\\text{Query}_2</var>\n<var>\\vdots</var>\n<var>\\text{Query}_Q</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>For each query in the format <code>2 l r</code>, print <code>Yes</code> if the contiguous substring is a <strong>correct parenthesis sequence</strong>, and <code>No</code> otherwise, followed by a newline.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5 3\n(())(\n2 1 4\n2 1 2\n2 4 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>Yes\nNo\nNo\n</pre>\n<p>In the first query, <code>(())</code> is a <strong>correct parenthesis sequence</strong>.</p>\n<p>In the second query, <code>((</code> is not a <strong>correct parenthesis sequence</strong>.</p>\n<p>In the third query, <code>)(</code> is not a <strong>correct parenthesis sequence</strong>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5 3\n(())(\n2 1 4\n1 1 4\n2 1 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>Yes\nNo\n</pre>\n<p>In the first query, <code>(())</code> is a <strong>correct parenthesis sequence</strong>.</p>\n<p>In the second query, <var>S</var> becomes <code>)()((</code>.</p>\n<p>In the third query, <code>)()(</code> is not a <strong>correct parenthesis sequence</strong>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>8 8\n(()(()))\n2 2 7\n2 2 8\n1 2 5\n2 3 4\n1 3 4\n1 3 5\n1 1 4\n1 6 8\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>Yes\nNo\nNo\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc223/tasks/abc223_f"}