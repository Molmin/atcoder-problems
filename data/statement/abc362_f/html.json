{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>550</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点の木 <var>T</var> が与えられます。<var>T</var> の頂点には <var>1</var> から <var>N</var> の番号がついており、 <var>i\\,(1\\leq i \\leq N-1)</var> 番目の辺は頂点 <var>u_i</var> と頂点 <var>v_i</var> を双方向に結んでいます。</p>\n<p><var>T</var> を用いて、<var>N</var> 頂点の完全グラフ <var>G</var> を次のように定めます。</p>\n<ul>\n<li><var>G</var> の頂点 <var>x</var> と頂点 <var>y</var> の間の辺の重み <var>w(x,y)</var> を、<var>T</var> における頂点 <var>x</var> と頂点 <var>y</var> の間の最短距離とする</li>\n</ul>\n<p><var>G</var> の<strong>最大重み最大マッチング</strong>を一つ求めてください。すなわち、<var>\\lfloor N/2 \\rfloor</var> 個の頂点のペアの集合 <var>M=\\{(x_1,y_1),(x_2,y_2),\\dots,(x_{\\lfloor N/2 \\rfloor},y_{\\lfloor N/2 \\rfloor})\\}</var> であって、各頂点 <var>1,2,\\dots, N</var> が <var>M</var> に現れる回数がたかだか <var>1</var> 回であるようなもののうち、 <var>\\displaystyle \\sum_{i=1}^{\\lfloor N/2 \\rfloor} w(x_i,y_i)</var> が最大であるものを一つ求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq u_i &lt; v_i \\leq N</var></li>\n<li>入力されるグラフは木である</li>\n<li>入力はすべて整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>u_1</var> <var>v_1</var>\n<var>u_2</var> <var>v_2</var>\n<var>\\vdots</var>\n<var>u_{N-1}</var> <var>v_{N-1}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>答えを <var>\\{(x_1,y_1),(x_2,y_2),\\dots,(x_{\\lfloor N/2 \\rfloor},y_{\\lfloor N/2 \\rfloor})\\}</var> として、以下の形式で出力せよ。答えが複数あり得る場合、そのうちどれを出力しても良い。</p>\n<pre><var>x_1</var> <var>y_1</var>\n<var>x_2</var> <var>y_2</var>\n<var>\\vdots</var>\n<var>x_{\\lfloor N/2 \\rfloor}</var> <var>y_{\\lfloor N/2 \\rfloor}</var>\n</pre>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>4\n1 2\n2 3\n3 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>2 4\n1 3\n</pre>\n<p><var>T</var> において、頂点 <var>2,4</var> 間の距離は <var>2</var>、頂点 <var>1,3</var> 間の距離は <var>2</var> なので、マッチング <var>\\{(2,4),(1,3)\\}</var> の重みは <var>4</var> です。重みが <var>4</var> より大きいマッチングは存在しないので、これが最大重み最大マッチングの一つです。他にも、</p>\n<pre>2 3\n1 4\n</pre>\n<p>などを出力しても正解になります。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>3\n1 2\n2 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>1 3\n</pre>\n<p><var>T</var> において、頂点 <var>1,3</var> 間の距離は <var>2</var> なので、マッチング <var>\\{(1,3)\\}</var> の重みは <var>2</var> です。重みが <var>2</var> より大きいマッチングは存在しないので、これが最大重み最大マッチングの一つです。他にも、</p>\n<pre>3 1\n</pre>\n<p>を出力しても正解になります。</p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>550</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a tree <var>T</var> with <var>N</var> vertices. The vertices are numbered <var>1</var> to <var>N</var>, and the <var>i</var>-th edge <var>(1 \\leq i \\leq N-1)</var> connects vertices <var>u_i</var> and <var>v_i</var> bidirectionally.</p>\n<p>Using <var>T</var>, define a complete graph <var>G</var> with <var>N</var> vertices as follows:</p>\n<ul>\n<li>The weight <var>w(x,y)</var> of the edge between vertices <var>x</var> and <var>y</var> in <var>G</var> is the shortest distance between vertices <var>x</var> and <var>y</var> in <var>T</var>.</li>\n</ul>\n<p>Find one <strong>maximum weight maximum matching</strong> in <var>G</var>. That is, find a set of <var>\\lfloor N/2 \\rfloor</var> pairs of vertices <var>M=\\{(x_1,y_1),(x_2,y_2),\\dots,(x_{\\lfloor N/2 \\rfloor},y_{\\lfloor N/2 \\rfloor})\\}</var> such that each vertex <var>1,2,\\dots, N</var> appears in <var>M</var> at most once, and <var>\\displaystyle \\sum_{i=1}^{\\lfloor N/2 \\rfloor} w(x_i,y_i)</var> is maximized.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq u_i &lt; v_i \\leq N</var></li>\n<li>The input graph is a tree.</li>\n<li>All input values are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>u_1</var> <var>v_1</var>\n<var>u_2</var> <var>v_2</var>\n<var>\\vdots</var>\n<var>u_{N-1}</var> <var>v_{N-1}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print a solution as <var>\\{(x_1,y_1),(x_2,y_2),\\dots,(x_{\\lfloor N/2 \\rfloor},y_{\\lfloor N/2 \\rfloor})\\}</var> in the following format. If multiple solutions exist, any of them is acceptable.</p>\n<pre><var>x_1</var> <var>y_1</var>\n<var>x_2</var> <var>y_2</var>\n<var>\\vdots</var>\n<var>x_{\\lfloor N/2 \\rfloor}</var> <var>y_{\\lfloor N/2 \\rfloor}</var>\n</pre>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>4\n1 2\n2 3\n3 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>2 4\n1 3\n</pre>\n<p>In <var>T</var>, the distance between vertices <var>2</var> and <var>4</var> is <var>2</var>, and the distance between vertices <var>1</var> and <var>3</var> is <var>2</var>, so the weight of the matching <var>\\{(2,4),(1,3)\\}</var> is <var>4</var>. There is no matching with a weight greater than <var>4</var>, so this is a maximum weight maximum matching. Other acceptable outputs include:</p>\n<pre>2 3\n1 4\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>3\n1 2\n2 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>1 3\n</pre>\n<p>In <var>T</var>, the distance between vertices <var>1</var> and <var>3</var> is <var>2</var>, so the weight of the matching <var>\\{(1,3)\\}</var> is <var>2</var>. There is no matching with a weight greater than <var>2</var>, so this is a maximum weight maximum matching. Another acceptable output is:</p>\n<pre>3 1\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc362/tasks/abc362_f"}