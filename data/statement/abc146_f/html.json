{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>600</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>高橋君は双六で遊んでいます。</p>\n<p>この双六には <var>0</var> から <var>N</var> までの番号がついた <var>N + 1</var> 個のマスがあります。高橋君はマス <var>0</var> からスタートし、ゴールするにはマス <var>N</var> にちょうど止まらなければなりません。</p>\n<p>この双六では、<var>1</var> から <var>M</var> までの <var>M</var> 種類の目が出るルーレットを使います。各手番で、高橋君はルーレットを回して出た目の数だけ進みます。この結果マス <var>N</var> を越えて進むことになる場合、ゲームオーバーとなります。</p>\n<p>また、いくつかのマスは「ゲームオーバーマス」であり、それらのマスに止まってもゲームオーバーとなります。マスの情報は長さ <var>N + 1</var> の文字列 <var>S</var> で与えられます。各 <var>i</var> <var>(0 \\leq i \\leq N)</var> について、<var>S[i] = 1</var> のときマス <var>i</var> はゲームオーバーマスであり、<var>S[i] = 0</var> のときマス <var>i</var> はゲームオーバーマスではありません。</p>\n<p>高橋君がゲームオーバーとならずに最短手数でゴールするときの出目を順に答えてください。そのような目の出方が複数存在するときは、そのうち出目の列が辞書順で最小であるものを出力してください。ゲームオーバーとならずにゴールすることが不可能である場合は、 <var>-1</var> を出力してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 ≤ N ≤ 10^5</var></li>\n<li><var>1 ≤ M ≤ 10^5</var></li>\n<li><var>|S| = N + 1</var></li>\n<li><var>S</var> は<code>0</code>と<code>1</code>から成る</li>\n<li><var>S[0] =</var> <code>0</code></li>\n<li><var>S[N] =</var> <code>0</code></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>S</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>ゴールすることが可能である場合、そのような最短の出目の列のうち辞書順で最小のものを出力せよ。ゴールすることが不可能である場合、<var>-1</var> を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>9 3\n0001000100\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1 3 2 3\n</pre>\n\n<p><var>1</var> , <var>3</var> , <var>2</var> , <var>3</var> の順に目を出すと、高橋君はマス <var>1</var> , <var>4</var> , <var>6</var> を経由してマス <var>9</var> に到達することが出来ます。高橋君が <var>3</var> 手以内にマス <var>9</var> に到達することは不可能であり、また <var>4</var> 手でマス <var>9</var> に到達するような出目の列の中ではこれが辞書順で最小です。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5 4\n011110\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>-1\n</pre>\n\n<p>高橋君はマス <var>5</var> に到達することが出来ません。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>6 6\n0101010\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>6\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>600</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Takahashi is playing a board game called Sugoroku.</p>\n<p>On the board, there are <var>N + 1</var> squares numbered <var>0</var> to <var>N</var>. Takahashi starts at Square <var>0</var>, and he has to stop exactly at Square <var>N</var> to win the game.</p>\n<p>The game uses a roulette with the <var>M</var> numbers from <var>1</var> to <var>M</var>. In each turn, Takahashi spins the roulette. If the number <var>x</var> comes up when he is at Square <var>s</var>, he moves to Square <var>s+x</var>. If this makes him go beyond Square <var>N</var>, he loses the game.</p>\n<p>Additionally, some of the squares are Game Over Squares. He also loses the game if he stops at one of those squares. You are given a string <var>S</var> of length <var>N + 1</var>, representing which squares are Game Over Squares. For each <var>i</var> <var>(0 \\leq i \\leq N)</var>, Square <var>i</var> is a Game Over Square if <var>S[i] = 1</var> and not if <var>S[i] = 0</var>.</p>\n<p>Find the sequence of numbers coming up in the roulette in which Takahashi can win the game in the fewest number of turns possible. If there are multiple such sequences, find the lexicographically smallest such sequence. If Takahashi cannot win the game, print <var>-1</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N \\leq 10^5</var></li>\n<li><var>1 \\leq M \\leq 10^5</var></li>\n<li><var>|S| = N + 1</var></li>\n<li><var>S</var> consists of <code>0</code> and <code>1</code>.</li>\n<li><var>S[0] =</var> <code>0</code></li>\n<li><var>S[N] =</var> <code>0</code></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>S</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If Takahashi can win the game, print the lexicographically smallest sequence among the shortest sequences of numbers coming up in the roulette in which Takahashi can win the game, with spaces in between.</p>\n<p>If Takahashi cannot win the game, print <var>-1</var>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>9 3\n0001000100\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1 3 2 3\n</pre>\n\n<p>If the numbers <var>1</var>, <var>3</var>, <var>2</var>, <var>3</var> come up in this order, Takahashi can reach Square <var>9</var> via Square <var>1</var>, <var>4</var>, and <var>6</var>. He cannot reach Square <var>9</var> in three or fewer turns, and this is the lexicographically smallest sequence in which he reaches Square <var>9</var> in four turns.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5 4\n011110\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>-1\n</pre>\n\n<p>Takahashi cannot reach Square <var>5</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>6 6\n0101010\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>6\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc146/tasks/abc146_f"}