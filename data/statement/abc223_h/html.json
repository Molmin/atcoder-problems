{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>600</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>長さ <var>N</var> の正整数列 <var>A = (A_1, \\dots, A_N)</var> が与えられます。</p>\n<p><var>Q</var> 個のクエリを処理してください。<var>i \\, (1 \\leq i \\leq Q)</var> 番目のクエリでは、<var>A_{L_i}, A_{L_i + 1}, \\dots, A_{R_i}</var> から <var>1</var> つ以上の要素を選び、それらの排他的論理和を <var>X_i</var> にできるかどうか判定してください。</p>\n<details>\n<summary>排他的論理和とは</summary>\n<p>\n整数 <var>a, b</var> のビットごとの排他的論理和 <var>a\\ \\mathrm{xor}\\ b</var> は、以下のように定義されます。\n</p><ul>\n<li> <var>a\\ \\mathrm{xor}\\ b</var> を二進表記した際の <var>2^k \\, (k \\geq 0)</var> の位の数は、<var>a, b</var> を二進表記した際の <var>2^k</var> の位の数のうち一方のみが <var>1</var> であれば <var>1</var>、そうでなければ <var>0</var> である。</li>\n</ul>\n例えば、<var>3\\ \\mathrm{xor}\\ 5 = 6</var> となります（二進表記すると: <var>011\\ \\mathrm{xor}\\ 101 = 110</var>）。\n<p></p>\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq N \\leq 4 \\times 10^5</var></li>\n<li><var>1 \\leq Q \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq A_i \\lt 2^{60}</var></li>\n<li><var>1 \\leq L_i \\leq R_i \\leq N</var></li>\n<li><var>1 \\leq X_i \\lt 2^{60}</var></li>\n<li>入力は全て整数である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>Q</var>\n<var>A_1</var> <var>\\ldots</var> <var>A_N</var>\n<var>L_1</var> <var>R_1</var> <var>X_1</var>\n<var>\\vdots</var>\n<var>L_Q</var> <var>R_Q</var> <var>X_Q</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>Q</var> 行にわたって出力せよ。<var>i \\, (1 \\leq i \\leq Q)</var> 行目には、<var>A_{L_i}, A_{L_i + 1}, \\dots, A_{R_i}</var> から <var>1</var> つ以上の要素を選び、それらの排他的論理和を <var>X_i</var> にできるならば <code>Yes</code> と、できないならば <code>No</code> と出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5 2\n3 1 4 1 5\n1 3 7\n2 5 7\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>Yes\nNo\n</pre>\n<p><var>1</var> つ目のクエリでは、<var>A_1, A_3</var> を選ぶことで排他的論理和を <var>7</var> にすることができます。</p>\n<p><var>2</var> つ目のクエリでは、どのように要素を選んでも排他的論理和を <var>7</var> にすることはできません。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>10 10\n8 45 56 9 38 28 33 5 15 19\n10 10 53\n3 8 60\n1 10 29\n5 7 62\n3 7 51\n8 8 52\n1 4 60\n6 8 32\n4 8 58\n5 9 2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>No\nNo\nYes\nNo\nYes\nNo\nNo\nNo\nYes\nYes\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>600</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Given is a sequence of <var>N</var> positive integers <var>A = (A_1, \\dots, A_N)</var>.</p>\n<p>Process <var>Q</var> queries. In the <var>i</var>-th query <var>(1 \\leq i \\leq Q)</var>, determine whether it is possible to choose one or more elements from <var>A_{L_i}, A_{L_i + 1}, \\dots, A_{R_i}</var> so that their <var>\\mathrm{XOR}</var> is <var>X_i</var>.</p>\n<details>\n<summary>What is <var>\\mathrm{XOR}</var>?</summary>\n<p>\nThe bitwise <var>\\mathrm{XOR}</var> of integers <var>A</var> and <var>B</var>, <var>A\\ \\mathrm{XOR}\\ B</var>, is defined as follows:\n</p><ul>\n<li>When <var>A\\ \\mathrm{XOR}\\ B</var> is written in base two, the digit in the <var>2^k</var>'s place (<var>k \\geq 0</var>) is <var>1</var> if exactly one of <var>A</var> and <var>B</var> is <var>1</var>, and <var>0</var> otherwise.</li>\n</ul>\nFor example, we have <var>3\\ \\mathrm{XOR}\\ 5 = 6</var> (in base two: <var>011\\ \\mathrm{XOR}\\ 101 = 110</var>).\n<p></p>\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N \\leq 4 \\times 10^5</var></li>\n<li><var>1 \\leq Q \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq A_i \\lt 2^{60}</var></li>\n<li><var>1 \\leq L_i \\leq R_i \\leq N</var></li>\n<li><var>1 \\leq X_i \\lt 2^{60}</var></li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>Q</var>\n<var>A_1</var> <var>\\ldots</var> <var>A_N</var>\n<var>L_1</var> <var>R_1</var> <var>X_1</var>\n<var>\\vdots</var>\n<var>L_Q</var> <var>R_Q</var> <var>X_Q</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print <var>Q</var> lines. The <var>i</var>-th line <var>(1 \\leq i \\leq Q)</var> should contain <code>Yes</code> if it is possible to choose one or more elements from <var>A_{L_i}, A_{L_i + 1}, \\dots, A_{R_i}</var> so that their <var>\\mathrm{XOR}</var> is <var>X_i</var>, and <code>No</code> otherwise.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5 2\n3 1 4 1 5\n1 3 7\n2 5 7\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>Yes\nNo\n</pre>\n<p>In the first query, you can choose <var>A_1</var> and <var>A_3</var>, whose <var>\\mathrm{XOR}</var> is <var>7</var>.</p>\n<p>In the second query, there is no way to choose elements so that their <var>\\mathrm{XOR}</var> is <var>7</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>10 10\n8 45 56 9 38 28 33 5 15 19\n10 10 53\n3 8 60\n1 10 29\n5 7 62\n3 7 51\n8 8 52\n1 4 60\n6 8 32\n4 8 58\n5 9 2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>No\nNo\nYes\nNo\nYes\nNo\nNo\nNo\nYes\nYes\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc223/tasks/abc223_h"}