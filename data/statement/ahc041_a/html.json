{"html":{"ja":"<span class=\"lang-ja\">\n\n<div class=\"part\">\n<section>\n<h3>ストーリー</h3><p>AtCoderオフィスでは、一足遅いクリスマスパーティーの準備が進められている。高橋社長は、クリスマスツリーに使う根付き木を切りに行くことにした。</p>\n<p>根付き木の各頂点は <strong>美しさ</strong> を持ち、高いところに美しい頂点が存在するとパーティー会場の <strong>見栄え</strong> が良くなる。ただし、根付き木が高すぎるとAtCoderオフィスの天井にぶつかってしまうため、パーティー会場に持ち込むことのできる根付き木の高さには制限がかけられている。</p>\n<p>与えられたグラフから根付き木をいくつか切り出して、できるだけパーティー会場の <strong>見栄え</strong> を良くして欲しい。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点 <var>M</var> 辺の連結な無向平面グラフ <var>G</var> が与えられる。頂点には <var>0</var> から <var>N-1</var> の番号が、辺には <var>0</var> から <var>M-1</var> の番号がそれぞれ付けられている。頂点 <var>v</var> の座標は <var>(x_v, y_v)</var> であり、 辺 <var>i</var> は頂点 <var>u_i</var> と <var>v_i</var> を結んでいる。各頂点には正の整数をとる <strong>美しさ</strong> が定められており、頂点 <var>v</var> の <strong>美しさ</strong> は <var>A_v</var> である。</p>\n<p>根付き木 <var>T</var> の <strong>見栄え</strong> を以下のように定義する。\n<var>T</var> における頂点 <var>v</var> の <strong>高さ</strong> <var>h_v</var> を、根から <var>v</var> へのパスに含まれる辺の本数とする。\nこのとき、根付き木 <var>T</var> の <strong>見栄え</strong> <var>a(T)</var> は <var>a(T):=\\sum_{v\\in T} (h_v + 1) A_v</var> と定義される。</p>\n<p>与えられたグラフ <var>G</var> から以下の条件を満たすような根付き木の集合を構築し、<strong>見栄え</strong> の総和をできるだけ大きくせよ。</p>\n<ul>\n<li>各根付き木 <var>T</var> に含まれる辺は全て <var>G</var> に含まれる。</li>\n<li><var>G</var> の各頂点はちょうど <var>1</var> つの根付き木に属する。</li>\n<li>各根付き木における頂点の高さは全て <var>H</var> 以下である。</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>得点</h3><p>出力した根付き木の集合を <var>F</var> としたとき、<var>1+\\sum_{T\\in F}a(T)</var> の得点が得られる。</p>\n<p>合計で 150 個のテストケースがあり、各テストケースの得点の合計が提出の得点となる。\n一つ以上のテストケースで不正な出力や制限時間超過をした場合、提出全体の判定が<span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"不正解\">WA</span>や<span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"実行時間制限超過\">TLE</span>となる。\nコンテスト時間中に得た最高得点で最終順位が決定され、コンテスト終了後のシステムテストは行われない。 同じ得点を複数の参加者が得た場合、提出時刻に関わらず同じ順位となる。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var> <var>H</var>\n<var>A_0</var> <var>\\cdots</var> <var>A_{N-1}</var>\n<var>u_0</var> <var>v_0</var>\n<var>\\vdots</var>\n<var>u_{M-1}</var> <var>v_{M-1}</var>\n<var>x_0</var> <var>y_0</var>\n<var>\\vdots</var>\n<var>x_{N-1}</var> <var>y_{N-1}</var>\n</pre>\n<p>入力は以下の制約を満たす。</p>\n<ul>\n<li><var>N=1000</var></li>\n<li><var>1000\\le M \\le 3000</var></li>\n<li><var>H=10</var></li>\n<li><var>1\\le A_v\\le 100</var></li>\n<li><var>0\\le u_i \\lt v_i\\le N-1</var></li>\n<li><var>0\\le x_v, y_v\\le 1000</var></li>\n<li><var>(x_v, y_v)</var> は全て異なる。</li>\n<li>入力は全て整数。</li>\n<li>与えられるグラフは連結な平面グラフであり、頂点 <var>v</var> を座標 <var>(x_v, y_v)</var> に配置し、各辺を両端点を結ぶ線分として描画した時、どの二辺も端点以外に共通点を持たないことが保証されている。</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>構築した根付き木の集合における頂点 <var>v</var> の親の頂点番号を <var>p_v</var>（<var>v</var> が根の場合は <var>p_v=-1</var>）として、以下の形式で標準出力に出力せよ。</p>\n<pre><var>p_0</var> <var>p_1</var> <var>\\cdots</var> <var>p_{N-1}</var>\n</pre>\n<p><a href=\"https://img.atcoder.jp/ahc041/m0Bwp9WL.html?lang=ja&amp;seed=0&amp;output=sample\">例を見る</a></p>\n<p>解は複数回出力しても良い。 複数出力された場合、一番最後に出力された解のみが採点に用いられる。 Web版のビジュアライザを用いると、複数の解の比較が可能である。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>入力生成方法</h3><p><var>L</var> 以上 <var>U</var> 以下の整数値を一様ランダムに生成する関数を <var>\\mathrm{rand}(L,U)</var> と表す。</p>\n<h4>グラフ <var>G</var> の生成</h4>\n<p>中心 <var>(500,500)</var> 、半径 <var>500</var> の円に含まれる格子点からランダムに点を一つずつ、合計 <var>N</var> 個選んで <var>(x_0, y_0), \\cdots, (x_{N-1}, y_{N-1})</var> とする。ただし、既に選んだ点とのユークリッド距離が <var>15</var> 以下の場合は選び直す。</p>\n<p>以上により得られた頂点集合 <var>V</var> に対して<a href=\"https://ja.wikipedia.org/wiki/%E3%83%89%E3%83%AD%E3%83%8D%E3%83%BC%E5%9B%B3\">ドロネー三角形分割</a>を計算し、三角形分割の辺集合を <var>E</var> として <var>G=(V, E)</var> とする。</p>\n<h4>美しさ <var>A</var> の生成</h4>\n<p>頂点 <var>v</var> の美しさは <var>A_v=\\mathrm{rand}(1, 100)</var> により生成する。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>ツール(入力ジェネレータ・ローカルテスタ・ビジュアライザ)</h3><ul>\n<li><a href=\"https://img.atcoder.jp/ahc041/m0Bwp9WL.html?lang=ja\">Web版</a>: ローカル版より高性能でアニメーション表示が可能です。</li>\n<li><a href=\"https://img.atcoder.jp/ahc041/m0Bwp9WL.zip\">ローカル版</a>: 使用するには<a href=\"https://www.rust-lang.org/ja\">Rust言語</a>のコンパイル環境をご用意下さい。</li>\n<li><a href=\"https://img.atcoder.jp/ahc041/m0Bwp9WL_windows.zip\">Windows用のコンパイル済みバイナリ</a>: Rust言語の環境構築が面倒な方は代わりにこちらをご利用下さい。</li>\n</ul>\n<p>コンテスト期間中における、ビジュアライズ結果の共有や解法・考察に関する言及は禁止されています。ご注意下さい。</p></section>\n</div>\n</div>\n</span>","en":"<span class=\"lang-en\">\n\n<div class=\"part\">\n<section>\n<h3>Story</h3><p>At the AtCoder office, preparations are underway for a slightly belated Christmas party. CEO Takahashi has decided to go cut down rooted trees to use as the Christmas trees.</p>\n<p>Each vertex in a rooted tree has a <strong>beauty value</strong>, and the party venue looks more attractive if beautiful vertices are located high. However, if the rooted tree is too tall, it will hit the ceiling of the AtCoder office. Therefore, there is a limit to the height of rooted trees that can be brought into the venue.</p>\n<p>Your task is to cut out several rooted trees from a given graph to maximize the <strong>attractiveness</strong> of the party venue.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a connected, undirected planar graph <var>G</var> with <var>N</var> vertices and <var>M</var> edges. The vertices are numbered from <var>0</var> to <var>N-1</var>, and the edges are numbered from <var>0</var> to <var>M-1</var>. The coordinates of vertex <var>v</var> are <var>(x_v, y_v)</var>, and edge <var>i</var> connects vertices <var>u_i</var> and <var>v_i</var>. Each vertex has a <strong>beauty value</strong>, which is a positive integer. The <strong>beauty value</strong> of vertex <var>v</var> is <var>A_v</var>.</p>\n<p>The <strong>attractiveness</strong> of a rooted tree <var>T</var> is defined as follows:\nLet the <strong>height</strong> <var>h_v</var> of vertex <var>v</var> in <var>T</var> be the number of edges in the path from the root to <var>v</var>.\nThe <strong>attractiveness</strong> <var>a(T)</var> of the rooted tree <var>T</var> is defined as <var>a(T):=\\sum_{v \\in T} (h_v + 1) A_v</var>.</p>\n<p>Your task is to construct a set of rooted trees from the given graph <var>G</var> that satisfies the following conditions, and make the sum of <strong>attractiveness</strong> as large as possible:</p>\n<ul>\n<li>All edges in each rooted tree <var>T</var> must belong to <var>G</var>.</li>\n<li>Each vertex in <var>G</var> belongs to exactly one rooted tree.</li>\n<li>The height of all vertices in each rooted tree must be less than or equal to <var>H</var>.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Scoring</h3><p>Let <var>F</var> be the set of rooted trees you construct. Then, you will obtain a score of <var>1+\\sum_{T\\in F}a(T)</var>.</p>\n<p>There are <var>150</var> test cases, and the score of a submission is the total score for each test case.\nIf your submission produces an illegal output or exceeds the time limit for some test cases, the submission itself will be judged as <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Wrong Answer\">WA</span> or <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Time Limit Exceeded\">TLE</span> , and the score of the submission will be zero.\nThe highest score obtained during the contest will determine the final ranking, and there will be no system test after the contest.\nIf more than one participant gets the same score, they will be ranked in the same place regardless of the submission time.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var> <var>H</var>\n<var>A_0</var> <var>\\cdots</var> <var>A_{N-1}</var>\n<var>u_0</var> <var>v_0</var>\n<var>\\vdots</var>\n<var>u_{M-1}</var> <var>v_{M-1}</var>\n<var>x_0</var> <var>y_0</var>\n<var>\\vdots</var>\n<var>x_{N-1}</var> <var>y_{N-1}</var>\n</pre>\n<p>The input satisfies the following constraints:</p>\n<ul>\n<li><var>N = 1000</var></li>\n<li><var>1000 \\leq M \\leq 3000</var></li>\n<li><var>H = 10</var></li>\n<li><var>1 \\leq A_v \\leq 100</var></li>\n<li><var>0 \\leq u_i &lt; v_i \\leq N-1</var></li>\n<li><var>0 \\leq x_v, y_v \\leq 1000</var></li>\n<li><var>(x_v, y_v)</var> are all distinct.</li>\n<li>All inputs are integers.</li>\n<li>The given graph is a connected planar graph. If vertex <var>v</var> is placed at coordinate <var>(x_v, y_v)</var>, and each edge is drawn as a line segment connecting its endpoints, no two edges share points other than their endpoints.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Let <var>p_v</var> be the parent of vertex <var>v</var> in the constructed set of rooted trees.\nIf <var>v</var> is a root, let <var>p_v=-1</var>.\nThen, output to Standard Output in the following format:</p>\n<pre><var>p_0</var> <var>p_1</var> <var>\\cdots</var> <var>p_{N-1}</var>\n</pre>\n<p><a href=\"https://img.atcoder.jp/ahc041/m0Bwp9WL.html?lang=en&amp;seed=0&amp;output=sample\">Show example</a></p>\n<p>Your program may output multiple solutions.\nIf multiple solutions are output, only the last one is used for scoring.\nYou can compare multiple solutions using the web version of the visualizer.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Input Generation</h3><p>Let <var>\\mathrm{rand}(L,U)</var> be a function that generates a uniform random integer between <var>L</var> and <var>U</var>, inclusive.</p>\n<h4>Generation of the graph <var>G</var></h4>\n<p>Randomly select <var>N</var> points <var>(x_0,y_0),\\cdots,(x_{N-1},y_{N-1})</var> from the lattice points contained in a circle with center <var>(500,500)</var> and radius <var>500</var>.\nIf the Euclidean distance between <var>(x_i,y_i)</var> and an already selected point <var>(x_j,y_j)</var> (<var>j&lt;i</var>) is less than or equal to <var>15</var>, we select <var>(x_i,y_i)</var> again.</p>\n<p>For the vertex set <var>V</var> obtained as described above, compute the <a href=\"https://en.wikipedia.org/wiki/Delaunay_triangulation\">Delaunay triangulation</a>, define the edge set of the triangulation as <var>E</var>, and let <var>G = (V, E)</var>.</p>\n<h4>Generation of the beauty values <var>A</var></h4>\n<p>For each vertex <var>v</var>, the beauty value <var>A_v</var> is generated using <var>\\mathrm{rand}(1, 100)</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Tools (Input generator, local tester and visualizer)</h3><ul>\n<li><a href=\"https://img.atcoder.jp/ahc041/m0Bwp9WL.html?lang=en\">Web version</a>: This is more powerful than the local version and can display animations.</li>\n<li><a href=\"https://img.atcoder.jp/ahc041/m0Bwp9WL.zip\">Local version</a>: You need a compilation environment of <a href=\"https://www.rust-lang.org\">Rust language</a>.<ul>\n<li><a href=\"https://img.atcoder.jp/ahc041/m0Bwp9WL_windows.zip\">Pre-compiled binary for Windows</a>: If you are not familiar with the Rust language environment, please use this instead.</li>\n</ul>\n</li>\n</ul>\n<p>Please be aware that sharing visualization results or discussing solutions/ideas during the contest is prohibited.</p></section>\n</div>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/ahc041/tasks/ahc041_a"}