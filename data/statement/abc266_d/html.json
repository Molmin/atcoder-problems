{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>400</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>高橋君はすぬけ君たちを捕まえようとしています。</p>\n<p>数直線上の座標 <var>0,1,2,3,4</var> の <var>5</var> 箇所に穴があり、すぬけ君たちの巣につながっています。</p>\n<p>これから <var>N</var> 匹のすぬけ君が穴から出てきます。<var>i</var> 番目のすぬけ君は時刻 <var>T_i</var> に座標 <var>X_i</var> の穴から出てきて、大きさは <var>A_i</var> であることがわかっています。</p>\n<p>高橋君は時刻 <var>0</var> に座標 <var>0</var> におり、数直線上を単位時間あたり <var>1</var> 以下の速さで移動することができます。<br>\nすぬけ君が穴から出てきたのと同じ時刻に同じ座標に高橋君がいるとき、かつ、そのときに限り、高橋君はすぬけ君を捕まえることができます。<br>\nすぬけ君を捕まえるのにかかる時間は無視できます。</p>\n<p>高橋君が適切に行動したとき、捕まえることができるすぬけ君の大きさの合計の最大値を求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq N \\leq 10^5</var></li>\n<li><var>0 &lt; T_1 &lt; T_2 &lt; \\ldots &lt; T_N \\leq 10^5</var></li>\n<li><var>0 \\leq X_i \\leq 4</var></li>\n<li><var>1 \\leq A_i \\leq 10^9</var></li>\n<li>入力に含まれる値は全て整数である</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>T_1</var> <var>X_1</var> <var>A_1</var>\n<var>T_2</var> <var>X_2</var> <var>A_2</var>\n<var>\\vdots</var>\n<var>T_N</var> <var>X_N</var> <var>A_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>答えを整数として出力せよ。  </p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3\n1 0 100\n3 3 10\n5 4 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>101\n</pre>\n<p>次のように行動するのが最適です。</p>\n<ul>\n<li>座標 <var>0</var> で待機し、時刻 <var>1</var> に <var>1</var> 番目のすぬけ君を捕まえる</li>\n<li>座標 <var>4</var> へ移動し、時刻 <var>5</var> に <var>3</var> 番目のすぬけ君を捕まえる</li>\n</ul>\n<p><var>1</var> 番目と <var>2</var> 番目のすぬけ君を両方とも捕まえることはできないので、これが最大です。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>3\n1 4 1\n2 4 1\n3 4 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>0\n</pre>\n<p>高橋君はすぬけ君を <var>1</var> 匹も捕まえることができません。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>10\n1 4 602436426\n2 1 623690081\n3 3 262703497\n4 4 628894325\n5 3 450968417\n6 1 161735902\n7 1 707723857\n8 2 802329211\n9 0 317063340\n10 2 125660016\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>2978279323\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>400</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Takahashi is trying to catch many Snuke.</p>\n<p>There are five pits at coordinates <var>0</var>, <var>1</var>, <var>2</var>, <var>3</var>, and <var>4</var> on a number line, connected to Snuke's nest.</p>\n<p>Now, <var>N</var> Snuke will appear from the pits. It is known that the <var>i</var>-th Snuke will appear from the pit at coordinate <var>X_i</var> at time <var>T_i</var>, and its size is <var>A_i</var>.</p>\n<p>Takahashi is at coordinate <var>0</var> at time <var>0</var> and can move on the line at a speed of at most <var>1</var>.<br>\nHe can catch a Snuke appearing from a pit if and only if he is at the coordinate of that pit exactly when it appears.<br>\nThe time it takes to catch a Snuke is negligible.</p>\n<p>Find the maximum sum of the sizes of Snuke that Takahashi can catch by moving optimally.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N \\leq 10^5</var></li>\n<li><var>0 &lt; T_1 &lt; T_2 &lt; \\ldots &lt; T_N \\leq 10^5</var></li>\n<li><var>0 \\leq X_i \\leq 4</var></li>\n<li><var>1 \\leq A_i \\leq 10^9</var></li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>T_1</var> <var>X_1</var> <var>A_1</var>\n<var>T_2</var> <var>X_2</var> <var>A_2</var>\n<var>\\vdots</var>\n<var>T_N</var> <var>X_N</var> <var>A_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the answer as an integer.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3\n1 0 100\n3 3 10\n5 4 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>101\n</pre>\n<p>The optimal strategy is as follows.</p>\n<ul>\n<li>Wait at coordinate <var>0</var> to catch the first Snuke at time <var>1</var>.</li>\n<li>Go to coordinate <var>4</var> to catch the third Snuke at time <var>5</var>.</li>\n</ul>\n<p>It is impossible to catch both the first and second Snuke, so this is the best he can.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>3\n1 4 1\n2 4 1\n3 4 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>0\n</pre>\n<p>Takahashi cannot catch any Snuke.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>10\n1 4 602436426\n2 1 623690081\n3 3 262703497\n4 4 628894325\n5 3 450968417\n6 1 161735902\n7 1 707723857\n8 2 802329211\n9 0 317063340\n10 2 125660016\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>2978279323\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc266/tasks/abc266_d"}