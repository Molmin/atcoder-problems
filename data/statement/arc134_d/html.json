{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>600</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>長さ <var>2N</var> の数列 <var>a</var> が与えられます。</p>\n<p>すぬけ君が <var>(1,2, \\ldots, N)</var> の<strong>空でない</strong>（連続するとは限らない）部分列 <var>x=(x_1,x_2,\\ldots,x_k)</var> を用いて、数列を作ろうとしています。\n作られる数列は、<var>a</var> の <var>x_1</var> 番目、<var>x_2</var> 番目、<var>\\ldots</var>、<var>x_k</var> 番目、<var>x_{1}+N</var> 番目、<var>\\ldots</var>、<var>x_{k}+N</var> 番目の要素を抜き出してこの順で連結した数列です。</p>\n<p>すぬけ君が作ることができる数列のうち、辞書順最小のものを求めてください。</p>\n<details> <summary>数列の辞書順とは？</summary> <p> \n相異なる数列 <var>S</var> と数列 <var>T</var> の大小を判定するアルゴリズムを以下に説明します。 </p>\n\n<p>以下では <var>S</var> の <var>i</var> 番目の要素を <var>S_i</var> のように表します。また、 <var>S</var> が <var>T</var> より辞書順で小さい場合は <var>S \\lt T</var> 、大きい場合は <var>S \\gt T</var> と表します。</p>\n\n<ol> <li> <var>S</var> と <var>T</var> のうち長さが短い方の数列の長さを <var>L</var> とします。<var>i=1,2,\\dots,L</var> に対して <var>S_i</var> と <var>T_i</var> が一致するか調べます。 </li> <li> <var>S_i \\neq T_i</var> である <var>i</var> が存在する場合、そのような <var>i</var> のうち最小のものを <var>j</var> とします。そして、<var>S_j</var> と <var>T_j</var> を比較して、 <var>S_j</var> が <var>T_j</var> より（数として）小さい場合は <var>S \\lt T</var> 、大きい場合は <var>S \\gt T</var> と決定して、アルゴリズムを終了します。 </li> <li> <var>S_i \\neq T_i</var> である <var>i</var> が存在しない場合、 <var>S</var> と <var>T</var> の長さを比較して、<var>S</var> が <var>T</var> より短い場合は <var>S \\lt T</var> 、長い場合は <var>S \\gt T</var> と決定して、アルゴリズムを終了します。 </li> </ol>\n\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li>与えられる入力は全て整数</li>\n<li><var>1 \\leq N \\leq 10^5</var></li>\n<li><var>1 \\leq a_i \\leq 10^9</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>a_{1}</var> <var>\\cdots</var> <var>a_{2N}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>すぬけ君が作ることができる数列のうち、辞書順最小のものを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3\n2 1 3 1 2 2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1 2\n</pre>\n\n<ul>\n<li><var>x = (2)</var> とします。</li>\n<li>このとき、作られる数列は <var>(1,2)</var> となり辞書順最小です。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>10\n38 38 80 62 62 67 38 78 74 52 53 77 59 83 74 63 80 61 68 55\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>38 38 38 52 53 77 80 55\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>12\n52 73 49 63 55 74 35 68 22 22 74 50 71 60 52 62 65 54 70 59 65 54 60 52\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>22 22 50 65 54 52\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>600</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Given is an integer sequence <var>a</var> of length <var>2N</var>.</p>\n<p>Snuke is going to make a sequence using a <strong>non-empty</strong> (not necessarily contiguous) subsequence <var>x=(x_1,x_2,\\ldots,x_k)</var> of <var>(1,2, \\ldots, N)</var>.\nThe sequence will be made by extracting and concatenating the <var>x_1</var>-th, <var>x_2</var>-th, <var>\\ldots</var>, <var>x_k</var>-th, <var>(x_{1}+N)</var>-th, <var>\\ldots</var>, <var>(x_{k}+N)</var>-th elements of <var>a</var> in this order.</p>\n<p>Find the lexicographically smallest sequence that Snuke can make.</p>\n<details>\n<summary>Lexicographical order on sequences</summary>\n<p>\nHere is the algorithm to determine the lexicographical order between different sequences <var>S</var> and <var>T</var>.\n</p>\n\n<p>Below, let <var>S_i</var> denote the <var>i</var>-th element of <var>S</var>. Also, if <var>S</var> is lexicographically smaller than <var>T</var>, we will denote that fact as <var>S \\lt T</var>; if <var>S</var> is lexicographically larger than <var>T</var>, we will denote that fact as <var>S \\gt T</var>.</p>\n\n<ol>\n  <li> Let <var>L</var> be the smaller of the lengths of <var>S</var> and <var>T</var>. For each <var>i=1,2,\\dots,L</var>, we check whether <var>S_i</var> and <var>T_i</var> are the same. </li>\n  <li> If there is an <var>i</var> such that <var>S_i \\neq T_i</var>, let <var>j</var> be the smallest such <var>i</var>. Then, we compare <var>S_j</var> and <var>T_j</var>. If <var>S_j</var> is smaller than <var>T_j</var> in numerical order, we determine that <var>S \\lt T</var> and quit; if <var>S_j</var> is greater than <var>T_j</var>, we determine that <var>S \\gt T</var> and quit.\n  </li>\n  <li> If there is no <var>i</var> such that <var>S_i \\neq T_i</var>, we compare the lengths of <var>S</var> and <var>T</var>. If <var>S</var> is shorter than <var>T</var>, we determine that <var>S \\lt T</var> and quit; if <var>S</var> is longer than <var>T</var>, we determine that <var>S \\gt T</var> and quit. </li>\n</ol>\n\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li>All values in input are integers.</li>\n<li><var>1 \\leq N \\leq 10^5</var></li>\n<li><var>1 \\leq a_i \\leq 10^9</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>a_{1}</var> <var>\\cdots</var> <var>a_{2N}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the lexicographically smallest sequence that Snuke can make.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3\n2 1 3 1 2 2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1 2\n</pre>\n\n<ul>\n<li>We choose <var>x = (2)</var>.</li>\n<li>Then, the resulting sequence will be <var>(1,2)</var>, the lexicographically smallest possible result.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>10\n38 38 80 62 62 67 38 78 74 52 53 77 59 83 74 63 80 61 68 55\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>38 38 38 52 53 77 80 55\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>12\n52 73 49 63 55 74 35 68 22 22 74 50 71 60 52 62 65 54 70 59 65 54 60 52\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>22 22 50 65 54 52\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc134/tasks/arc134_d"}