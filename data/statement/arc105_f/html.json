{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>900</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>1</var> から <var>N</var> の番号がついた <var>N</var> 個の頂点と、<var>1</var> から <var>M</var> の番号がついた <var>M</var> 本の辺からなる無向グラフ <var>G</var> が与えられます。<var>G</var> は連結で、自己ループや多重辺が存在しないことが保証されます。\n辺 <var>i</var> は頂点 <var>a_i</var> と頂点 <var>b_i</var> を双方向につなぐ辺です。\nそれぞれの辺は赤か青のどちらかの色で塗ることができます。はじめ、全ての辺は赤で塗られています。</p>\n<p><var>G</var> から <var>0</var> 本以上の辺を取り除き新しいグラフ <var>G^{\\prime}</var> を作ることを考えます。\n<var>G^{\\prime}</var> としてありうるグラフは <var>2^M</var> 通りありますが、これらのうちよいグラフ(後述)であるようなものの個数を <var>998244353</var> で割ったあまりを求めてください。</p>\n<p><var>G^{\\prime}</var> が以下の条件の両方を満たすとき、<var>G^{\\prime}</var> は <em>よいグラフ</em> であるといいます。</p>\n<ul>\n<li><var>G^{\\prime}</var> は連結</li>\n<li>以下の操作を <var>0</var> 回以上繰り返すことで、全ての辺の色を青色にできる<ul>\n<li>頂点を <var>1</var> つ選び、その頂点に接続する全ての辺の色を変化させる。すなわち、辺の色が赤ならば青へ、青ならば赤へ変化させる。</li>\n</ul>\n</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li>与えられる入力は全て整数</li>\n<li><var>1 \\leq N \\leq 17</var></li>\n<li><var>N-1 \\leq M \\leq N(N-1)/2</var></li>\n<li><var>G</var> は連結で、自己ループや多重辺が存在しない</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>a_1</var> <var>b_1</var>\n<var>\\vdots</var>\n<var>a_M</var> <var>b_M</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>G^{\\prime}</var> としてありうるグラフのうち、よいグラフであるものの個数を <var>998244353</var> で割ったあまりを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 2\n1 2\n2 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1\n</pre>\n\n<ul>\n<li>辺 <var>1</var>、辺 <var>2</var> のどちらも取り除かない場合のみ条件を満たします。<ul>\n<li>例えば、頂点 <var>2</var> に対して操作を行うことで、全ての辺を青色にすることが可能です。</li>\n</ul>\n</li>\n<li>それ以外の場合はグラフが非連結になるため、条件を満たしません。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>19\n</pre>\n\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>17 50\n16 17\n10 9\n16 10\n5 17\n6 15\n5 9\n15 11\n16 1\n8 13\n6 17\n15 3\n16 15\n11 3\n7 6\n1 4\n11 13\n10 6\n10 12\n3 16\n7 3\n16 5\n13 3\n12 13\n7 11\n3 12\n13 10\n1 12\n9 15\n11 14\n4 6\n13 2\n6 1\n15 2\n1 14\n15 17\n2 11\n14 13\n16 9\n16 8\n8 17\n17 12\n1 11\n6 12\n17 2\n8 1\n14 6\n9 7\n11 10\n5 14\n17 7\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>90625632\n</pre>\n\n<ul>\n<li><var>998244353</var> で割ったあまりを求めるのを忘れずに。</li>\n</ul></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>900</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Given is an undirected graph <var>G</var> consisting of <var>N</var> vertices numbered <var>1</var> through <var>N</var> and <var>M</var> edges numbered <var>1</var> through <var>M</var>. It is guaranteed that <var>G</var> is connected and contains no self-loops and no multi-edges.\nEdge <var>i</var> connects Vertex <var>a_i</var> and Vertex <var>b_i</var> bidirectionally.\nEach edge can be painted red or blue. Initially, every edge is painted red.</p>\n<p>Consider making a new graph <var>G^{\\prime}</var> by removing zero or more edges from <var>G</var>.\nThere are <var>2^M</var> graphs that <var>G^{\\prime}</var> can be. Among them, find the number of good graphs defined below, modulo <var>998244353</var>.</p>\n<p><var>G^{\\prime}</var> is said to be a <em>good graph</em> when both of the following conditions are satisfied:</p>\n<ul>\n<li><var>G^{\\prime}</var> is connected.</li>\n<li>It is possible to make all edges blue by doing the following operation zero or more times.<ul>\n<li>Choose one vertex and change the color of every edge incident to that vertex, that is, red to blue and vice versa.</li>\n</ul>\n</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li>All values in input are integers.</li>\n<li><var>1 \\leq N \\leq 17</var></li>\n<li><var>N-1 \\leq M \\leq N(N-1)/2</var></li>\n<li><var>G</var> is connected and has no self-loops and no multi-edges.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>a_1</var> <var>b_1</var>\n<var>\\vdots</var>\n<var>a_M</var> <var>b_M</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the number of good graphs among the ones that <var>G^{\\prime}</var> can be, modulo <var>998244353</var>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 2\n1 2\n2 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1\n</pre>\n\n<ul>\n<li>The conditions are satisfied only if neither Edge <var>1</var> nor Edge <var>2</var> is removed.<ul>\n<li>In this case, we can make all edges blue by, for example, doing the operation for Vertex <var>2</var>.</li>\n</ul>\n</li>\n<li>Otherwise, the graph gets disconnected and thus does not satisfy the condition.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>19\n</pre>\n\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>17 50\n16 17\n10 9\n16 10\n5 17\n6 15\n5 9\n15 11\n16 1\n8 13\n6 17\n15 3\n16 15\n11 3\n7 6\n1 4\n11 13\n10 6\n10 12\n3 16\n7 3\n16 5\n13 3\n12 13\n7 11\n3 12\n13 10\n1 12\n9 15\n11 14\n4 6\n13 2\n6 1\n15 2\n1 14\n15 17\n2 11\n14 13\n16 9\n16 8\n8 17\n17 12\n1 11\n6 12\n17 2\n8 1\n14 6\n9 7\n11 10\n5 14\n17 7\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>90625632\n</pre>\n\n<ul>\n<li>Be sure to find the count modulo <var>998244353</var>.</li>\n</ul></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc105/tasks/arc105_f"}