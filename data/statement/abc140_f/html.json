{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>600</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>1</var> 匹のスライムがいます。</p>\n<p>あなたはこのスライムの「体力」を自由な整数の値に設定できます。</p>\n<p>スライムは <var>1</var> 秒ごとに、自分より真に小さい整数の体力をもつスライムを <var>1</var> 匹生成することで増殖していきます。生成されるスライムの体力は、スライムごとに毎回自由に決めることができます。最初の増殖はこれから <var>1</var> 秒後に起こります。</p>\n<p>最初のスライム、および生成されるスライムの体力を適切に定めることで、これから <var>N</var> 秒後に存在する <var>2^N</var> 匹のスライムの体力の集合を集合 <var>S</var> に一致させることができるか判定してください。</p>\n<p>ここで <var>S</var> は <var>2^N</var> 要素からなる重複を認める整数の集合で、その要素は <var>S_1,~S_2,~...,~S_{2^N}</var> です。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li>入力は全て整数である。</li>\n<li><var>1 \\leq N \\leq 18</var></li>\n<li><var>1 \\leq S_i \\leq 10^9</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>S_1</var> <var>S_2</var> <var>...</var> <var>S_{2^N}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>最初のスライム、および生成されるスライムの体力を適切に定めることで、<var>N</var> 秒後に存在する <var>2^N</var> 匹のスライムの体力の集合を集合 <var>S</var> に一致させることができるなら <code>Yes</code> を、できないなら <code>No</code> を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>2\n4 2 3 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>Yes\n</pre>\n\n<p><var>2</var> 秒後に存在するスライムの体力の集合を <var>S</var> に一致させる一例を示します。</p>\n<p>まず最初のスライムの体力を <var>4</var> に設定します。</p>\n<p>最初のスライムに体力が <var>3</var> のスライムを生成させることで、<var>1</var> 秒後に存在するスライムの体力を <var>4,~3</var> とできます。</p>\n<p>そして最初のスライムに体力が <var>2</var> の、<var>2</var> 匹目のスライムに体力が <var>1</var> のスライムを生成させることで、<var>2</var> 秒後に存在するスライムの体力を <var>4,~3,~2,~1</var> とできます。これは集合として <var>S</var> に一致しています。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>2\n1 2 3 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>Yes\n</pre>\n\n<p><var>S</var> は同じ整数を複数含むこともあります。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>1\n1 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>No\n</pre>\n\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 4</h3><pre>5\n4 3 5 3 1 2 7 8 7 4 6 3 7 2 3 6 2 7 3 2 6 7 3 4 6 7 3 4 2 5 2 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 4</h3><pre>No\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>600</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>We have one slime.</p>\n<p>You can set the <em>health</em> of this slime to any integer value of your choice.</p>\n<p>A slime reproduces every second by spawning another slime that has strictly less health. You can freely choose the health of each new slime. The first reproduction of our slime will happen in one second.</p>\n<p>Determine if it is possible to set the healths of our first slime and the subsequent slimes spawn so that the multiset of the healths of the <var>2^N</var> slimes that will exist in <var>N</var> seconds equals a multiset <var>S</var>.</p>\n<p>Here <var>S</var> is a multiset containing <var>2^N</var> (possibly duplicated) integers: <var>S_1,~S_2,~...,~S_{2^N}</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li>All values in input are integers.</li>\n<li><var>1 \\leq N \\leq 18</var></li>\n<li><var>1 \\leq S_i \\leq 10^9</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>S_1</var> <var>S_2</var> <var>...</var> <var>S_{2^N}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If it is possible to set the healths of the first slime and the subsequent slimes spawn so that the multiset of the healths of the <var>2^N</var> slimes that will exist in <var>N</var> seconds equals <var>S</var>, print <code>Yes</code>; otherwise, print <code>No</code>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>2\n4 2 3 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>Yes\n</pre>\n\n<p>We will show one way to make the multiset of the healths of the slimes that will exist in <var>2</var> seconds equal to <var>S</var>.</p>\n<p>First, set the health of the first slime to <var>4</var>.</p>\n<p>By letting the first slime spawn a slime whose health is <var>3</var>, the healths of the slimes that exist in <var>1</var> second can be <var>4,~3</var>.</p>\n<p>Then, by letting the first slime spawn a slime whose health is <var>2</var>, and letting the second slime spawn a slime whose health is <var>1</var>, the healths of the slimes that exist in <var>2</var> seconds can be <var>4,~3,~2,~1</var>, which is equal to <var>S</var> as multisets.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>2\n1 2 3 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>Yes\n</pre>\n\n<p><var>S</var> may contain multiple instances of the same integer.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>1\n1 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>No\n</pre>\n\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 4</h3><pre>5\n4 3 5 3 1 2 7 8 7 4 6 3 7 2 3 6 2 7 3 2 6 7 3 4 6 7 3 4 2 5 2 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 4</h3><pre>No\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc140/tasks/abc140_f"}