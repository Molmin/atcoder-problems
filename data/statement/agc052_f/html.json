{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>2000</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点の木が与えられます。\n木の頂点には <var>1</var> から <var>N</var> までの番号が付けられており、<var>i</var> 番目の辺は頂点 <var>u_i, v_i</var> を結びます。</p>\n<p>はじめ、木の各頂点には <var>1</var> という数が書かれています。</p>\n<p><var>1</var> 回の操作で、あなたは以下を行えます。</p>\n<ul>\n<li>木から頂点 <var>v</var> を選ぶ。<var>v</var> に隣接する頂点全てに書き込まれた値の <strong>XOR</strong> が <var>X</var> であるとする。<var>v</var> に書かれた値が <var>a_v</var> であるとして、この値を <var>(a_v\\ \\mathrm{XOR}\\ X)</var> に置き換える。</li>\n</ul>\n<p>この操作を任意の有限回（<var>0</var> 回も含む）行えるとして、得られる木の形態は何通りあるでしょうか。この数は大きい可能性があるため、これを <var>998244353</var> で割った余りを出力してください。</p>\n<p>ここで、木の <var>2</var> つの形態は、書かれた数が異なるような頂点 <var>v</var> が存在するときに異なるとみなされます。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>3 \\le N \\le 2\\cdot 10^5</var></li>\n<li><var>1\\le u_i, v_i \\le N</var></li>\n<li><var>u_i \\neq v_i</var></li>\n<li>入力が表すグラフは木である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>u_1</var> <var>v_1</var>\n<var>u_2</var> <var>v_2</var>\n<var>\\vdots</var>\n<var>u_{N-1}</var> <var>v_{N-1}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>初期状態から得られる木の形態の個数を <var>998244353</var> で割った余りを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>4\n1 2\n2 3\n3 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>10\n</pre>\n<p>頂点 <var>1,2,3,4</var> に <var>a,b,c,d</var> が書かれている形態を <var>abcd</var> と表すと、到達可能な形態は <var>1111</var>, <var>1110</var>, <var>1100</var>, <var>1000</var>, <var>0111</var>, <var>0110</var>, <var>0100</var>, <var>0011</var>, <var>0010</var>, <var>0001</var> です。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5\n1 2\n1 3\n1 4\n1 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>24\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>6\n1 3\n2 3\n3 4\n4 5\n4 6\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>40\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 4</h3><pre>9\n1 2\n2 3\n1 4\n4 5\n1 6\n6 7\n7 8\n8 9\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 4</h3><pre>255\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>2000</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a tree with <var>N</var> vertices.\nThe vertices are numbered from <var>1</var> to <var>N</var>, and the <var>i</var>-th edge connects vertices <var>u_i</var> and <var>v_i</var>.</p>\n<p>Initially, on each vertex of the tree is written number <var>1</var>.</p>\n<p>In one operation, you can do the following:</p>\n<ul>\n<li>Choose any vertex <var>v</var> of the tree. Let <var>X</var> be the <strong>XOR</strong> of the values written in the neighbors of <var>v</var>. Then, if the number written on <var>v</var> is <var>a_v</var>, replace it by <var>(a_v\\ \\mathrm{XOR}\\ X)</var>.</li>\n</ul>\n<p>You can perform this operation any finite (maybe zero) number of times. How many configurations can you achieve? As this number can be large, output it modulo <var>998244353</var>.</p>\n<p>Two configurations are called different if there exists a vertex <var>v</var>, such that the numbers written in <var>v</var> in these configurations are different. </p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>3 \\le N \\le 2\\cdot 10^5</var></li>\n<li><var>1\\le u_i, v_i \\le N</var></li>\n<li><var>u_i \\neq v_i</var></li>\n<li>The input represents a valid tree.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>u_1</var> <var>v_1</var>\n<var>u_2</var> <var>v_2</var>\n<var>\\vdots</var>\n<var>u_{N-1}</var> <var>v_{N-1}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Output the number of configurations you can get from the initial state, modulo <var>998244353</var>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>4\n1 2\n2 3\n3 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>10\n</pre>\n<p>We can get the following configurations (<var>abcd</var> means vertices <var>1,2,3,4</var> have <var>a,b,c,d</var> written on them):\n<var>1111</var>, <var>1110</var>, <var>1100</var>, <var>1000</var>, <var>0111</var>, <var>0110</var>, <var>0100</var>, <var>0011</var>, <var>0010</var>, <var>0001</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5\n1 2\n1 3\n1 4\n1 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>24\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>6\n1 3\n2 3\n3 4\n4 5\n4 6\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>40\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 4</h3><pre>9\n1 2\n2 3\n1 4\n4 5\n1 6\n6 7\n7 8\n8 9\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 4</h3><pre>255\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc052/tasks/agc052_f"}