{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1000</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>0</var> と <var>1</var> からなる同じ長さの二つの文字列 <var>A = A_1 A_2 ... A_n</var> と <var>B = B_1 B_2 ... B_n</var> があります。</p>\n<p>あなたは、以下の操作を任意の順序で何度でも行って <var>A</var> を変化させることができます。</p>\n<ul>\n<li><var>A</var> を一文字左にシフトする（すなわち、<var>A = A_1 A_2 ... A_n</var> として <var>A</var> を <var>A_2 A_3 ... A_n A_1</var> に置き換える）。</li>\n<li><var>A</var> を一文字右にシフトする（すなわち、<var>A = A_1 A_2 ... A_n</var> として <var>A</var> を <var>A_n A_1 A_2 ... A_{n-1}</var> に置き換える）。</li>\n<li><var>B_i = 1</var> であるような <var>i</var> をいずれか一つ選び、<var>A_i</var> を反転する（すなわち、<var>A_i = 1 - A_i</var> とする）。</li>\n</ul>\n<p>あなたの目標は文字列 <var>A, B</var> を一致させることです。</p>\n<p>これに必要な最小の操作回数を出力してください。ただし、これが不可能である場合は <var>-1</var> と出力してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq |A| = |B| \\leq 2,000</var></li>\n<li><var>A, B</var> は <var>0</var> と <var>1</var> からなる。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>A</var>\n<var>B</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>文字列 <var>A, B</var> を一致させるために必要な最小の操作回数を出力せよ。ただし、これが不可能である場合は <var>-1</var> と出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>1010\n1100\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>3\n</pre>\n\n<p>目標を達成する最短の操作列を一つ示します。</p>\n<ul>\n<li><var>A_1</var> を反転: <var>A = 0010</var></li>\n<li><var>A</var> を左にシフト: <var>A = 0100</var></li>\n<li><var>A_1</var> を再度反転: <var>A = 1100</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>1\n0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>-1\n</pre>\n\n<p><var>A</var> の唯一のビットを反転させる方法はありません。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>11010\n10001\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>4\n</pre>\n\n<p>目標を達成する最短の操作列を一つ示します。</p>\n<ul>\n<li><var>A</var> を右にシフト: <var>A = 01101</var></li>\n<li><var>A_5</var> を反転: <var>A = 01100</var></li>\n<li><var>A</var> を左にシフト: <var>A = 11000</var></li>\n<li><var>A</var> を再度左にシフト: <var>A = 10001</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 4</h3><pre>0100100\n1111111\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 4</h3><pre>5\n</pre>\n\n<p><var>A_1</var>, <var>A_3</var>, <var>A_4</var>, <var>A_6</var>, <var>A_7</var> を任意の順序で反転すればよいです。</p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1000</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You have two strings <var>A = A_1 A_2 ... A_n</var> and <var>B = B_1 B_2 ... B_n</var> of the same length consisting of <var>0</var> and <var>1</var>.</p>\n<p>You can transform <var>A</var> using the following operations in any order and as many times as you want:</p>\n<ul>\n<li>Shift <var>A</var> by one character to the left (i.e., if <var>A = A_1 A_2 ... A_n</var>, replace <var>A</var> with <var>A_2 A_3 ... A_n A_1</var>).</li>\n<li>Shift <var>A</var> by one character to the right (i.e., if <var>A = A_1 A_2 ... A_n</var>, replace <var>A</var> with <var>A_n A_1 A_2 ... A_{n-1}</var>).</li>\n<li>Choose any <var>i</var> such that <var>B_i = 1</var>. Flip <var>A_i</var> (i.e., set <var>A_i = 1 - A_i</var>).</li>\n</ul>\n<p>You goal is to make strings <var>A</var> and <var>B</var> equal.</p>\n<p>Print the smallest number of operations required to achieve this, or <var>-1</var> if the goal is unreachable.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq |A| = |B| \\leq 2,000</var></li>\n<li><var>A</var> and <var>B</var> consist of <var>0</var> and <var>1</var>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>A</var>\n<var>B</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the smallest number of operations required to make strings <var>A</var> and <var>B</var> equal, or <var>-1</var> if the goal is unreachable.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>1010\n1100\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>3\n</pre>\n\n<p>Here is one fastest way to achieve the goal:</p>\n<ul>\n<li>Flip <var>A_1</var>: <var>A = 0010</var></li>\n<li>Shift <var>A</var> to the left: <var>A = 0100</var></li>\n<li>Flip <var>A_1</var> again: <var>A = 1100</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>1\n0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>-1\n</pre>\n\n<p>There is no way to flip the only bit in <var>A</var>.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>11010\n10001\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>4\n</pre>\n\n<p>Here is one fastest way to achieve the goal:</p>\n<ul>\n<li>Shift <var>A</var> to the right: <var>A = 01101</var></li>\n<li>Flip <var>A_5</var>: <var>A = 01100</var></li>\n<li>Shift <var>A</var> to the left: <var>A = 11000</var></li>\n<li>Shift <var>A</var> to the left again: <var>A = 10001</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 4</h3><pre>0100100\n1111111\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 4</h3><pre>5\n</pre>\n\n<p>Flip <var>A_1</var>, <var>A_3</var>, <var>A_4</var>, <var>A_6</var> and <var>A_7</var> in any order.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc019/tasks/agc019_d"}