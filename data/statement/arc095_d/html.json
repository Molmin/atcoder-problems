{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>900</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>高橋くんには <var>(1,2,...,n)</var> の順列 <var>(p_1,p_2,...,p_n)</var> を使い、\n次の手順で木を作る能力があります。</p>\n<p>頂点 <var>1</var>、頂点 <var>2</var>、 <var>...</var>、 頂点 <var>n</var> を用意する。\n各 <var>i=1,2,...,n</var> について次の操作を行う。</p>\n<ul>\n<li><var>p_i = 1</var> である場合、何もしない。</li>\n<li><var>p_i \\neq 1</var> である場合、<var>p_j &lt; p_i</var> であるような <var>j</var> のうち最大のものを <var>j'</var> とする。\n  頂点 <var>i</var> と 頂点 <var>j'</var> の間に辺を貼る。</li>\n</ul>\n<p>高橋くんはこの能力を使ってお気に入りの木を作ろうとしています。\n高橋くんのお気に入りの木は 頂点 <var>1</var> から頂点 <var>n</var> の\n<var>n</var> 頂点からなり、 <var>i</var> 番目の辺は頂点 <var>v_i</var> と <var>w_i</var> を結んでいます。\n適切な順列を使うことで、高橋くんのお気に入りの木と同型な木を作ることが可能か\n判定して下さい。\n可能な場合、そのような順列のうち辞書順で最も小さいものを求めて下さい。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>注意</h3><p>木が同型であることの定義は<a href=\"https://ja.wikipedia.org/wiki/%E3%82%B0%E3%83%A9%E3%83%95%E5%90%8C%E5%9E%8B\">wikipedia</a>を参照して下さい。\n直感的には、木と木が同型であるとは、頂点の番号を無視すると同じ木になることを言います。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq n \\leq 10^5</var></li>\n<li><var>1 \\leq v_i, w_i \\leq n</var></li>\n<li>与えられるグラフは木である</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>n</var>\n<var>v_1</var> <var>w_1</var>\n<var>v_2</var> <var>w_2</var>\n<var>:</var>\n<var>v_{n-1}</var> <var>w_{n-1}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>高橋くんのお気に入りの木と同型な木を作ることのできる順列が存在しない場合は <code>-1</code> を出力せよ。\n存在する場合は、辞書順で最小の順列を空白区切りで出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>6\n1 2\n1 3\n1 4\n1 5\n5 6\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1 2 4 5 3 6\n</pre>\n\n<p><var>(1, 2, 4, 5, 3, 6)</var> という順列を使って木を作ると、次の図のようになります。</p>\n<p><img alt=\"\" src=\"https://img.atcoder.jp/arc095/db000b879402aed649a1516620eb1e21.png\"></p>\n<p>これは入力のグラフと同型です。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>6\n1 2\n2 3\n3 4\n1 5\n5 6\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>1 2 3 4 5 6\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>15\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n4 8\n4 9\n5 10\n5 11\n6 12\n6 13\n7 14\n7 15\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>-1\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>900</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Takahashi has an ability to generate a tree using a permutation <var>(p_1,p_2,...,p_n)</var> of <var>(1,2,...,n)</var>, in the following process:</p>\n<p>First, prepare Vertex <var>1</var>, Vertex <var>2</var>, ..., Vertex <var>N</var>.\nFor each <var>i=1,2,...,n</var>, perform the following operation:</p>\n<ul>\n<li>If <var>p_i = 1</var>, do nothing.</li>\n<li>If <var>p_i \\neq 1</var>, let <var>j'</var> be the largest <var>j</var> such that <var>p_j &lt; p_i</var>. Span an edge between Vertex <var>i</var> and Vertex <var>j'</var>.</li>\n</ul>\n<p>Takahashi is trying to make his favorite tree with this ability.\nHis favorite tree has <var>n</var> vertices from Vertex <var>1</var> through Vertex <var>n</var>, and its <var>i</var>-th edge connects Vertex <var>v_i</var> and <var>w_i</var>.\nDetermine if he can make a tree isomorphic to his favorite tree by using a proper permutation.\nIf he can do so, find the lexicographically smallest such permutation.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Notes</h3><p>For the definition of isomorphism of trees, see <a href=\"https://en.wikipedia.org/wiki/Graph_isomorphism\">wikipedia</a>. Intuitively, two trees are isomorphic when they are the \"same\" if we disregard the indices of their vertices.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq n \\leq 10^5</var></li>\n<li><var>1 \\leq v_i, w_i \\leq n</var></li>\n<li>The given graph is a tree.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>n</var>\n<var>v_1</var> <var>w_1</var>\n<var>v_2</var> <var>w_2</var>\n<var>:</var>\n<var>v_{n-1}</var> <var>w_{n-1}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If there is no permutation that can generate a tree isomorphic to Takahashi's favorite tree, print <code>-1</code>.\nIf it exists, print the lexicographically smallest such permutation, with spaces in between.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>6\n1 2\n1 3\n1 4\n1 5\n5 6\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1 2 4 5 3 6\n</pre>\n\n<p>If the permutation <var>(1, 2, 4, 5, 3, 6)</var> is used to generate a tree, it looks as follows:</p>\n<p><img alt=\"\" src=\"https://img.atcoder.jp/arc095/db000b879402aed649a1516620eb1e21.png\"></p>\n<p>This is isomorphic to the given graph.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>6\n1 2\n2 3\n3 4\n1 5\n5 6\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>1 2 3 4 5 6\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>15\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n4 8\n4 9\n5 10\n5 11\n6 12\n6 13\n7 14\n7 15\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>-1\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc095/tasks/arc095_d"}