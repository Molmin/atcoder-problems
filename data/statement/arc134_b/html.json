{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>400</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>長さ <var>N</var> の文字列 <var>s</var> が与えられます。\n<var>s</var> の <var>i</var> 文字目は <var>s_i</var> と表します。</p>\n<p>すぬけ君は以下の手順で <var>s</var> を変化させます。</p>\n<ul>\n<li><var>(1,2, \\ldots, N)</var> の長さが<strong>偶数の</strong>（連続するとは限らない）部分列 <var>x=(x_1, x_2, \\ldots, x_{2k})</var> を選ぶ(<var>k=0</var> でも構わない)。</li>\n<li><var>s_{x_1}</var> と <var>s_{x_{2k}}</var> を入れ替える。</li>\n<li><var>s_{x_2}</var> と <var>s_{x_{2k-1}}</var> を入れ替える。</li>\n<li><var>s_{x_3}</var> と <var>s_{x_{2k-2}}</var> を入れ替える。</li>\n<li><var>\\vdots</var></li>\n<li><var>s_{x_{k}}</var> と <var>s_{x_{k+1}}</var> を入れ替える。</li>\n</ul>\n<p>すぬけ君が手順を終えたあとの <var>s</var> としてありうる文字列のうち、辞書順最小のものを求めてください。</p>\n<details> <summary>辞書順とは？</summary> <p> 辞書順とは簡単に説明すると「単語が辞書に載っている順番」を意味します。より厳密な説明として、相異なる文字列 <var>S</var> と文字列 <var>T</var> の大小を判定するアルゴリズムを以下に説明します。 </p>\n\n<p>以下では「 <var>S</var> の <var>i</var> 文字目の文字」を <var>S_i</var> のように表します。また、 <var>S</var> が <var>T</var> より辞書順で小さい場合は <var>S \\lt T</var> 、大きい場合は <var>S \\gt T</var> と表します。</p>\n\n<ol> <li> <var>S</var> と <var>T</var> のうち長さが短い方の文字列の長さを <var>L</var> とします。<var>i=1,2,\\dots,L</var> に対して <var>S_i</var> と <var>T_i</var> が一致するか調べます。 </li> <li> <var>S_i \\neq T_i</var> である <var>i</var> が存在する場合、そのような <var>i</var> のうち最小のものを <var>j</var> とします。そして、<var>S_j</var> と <var>T_j</var> を比較して、 <var>S_j</var> がアルファベット順で <var>T_j</var> より小さい場合は <var>S \\lt T</var> 、大きい場合は <var>S \\gt T</var> と決定して、アルゴリズムを終了します。 </li> <li> <var>S_i \\neq T_i</var> である <var>i</var> が存在しない場合、 <var>S</var> と <var>T</var> の長さを比較して、<var>S</var> が <var>T</var> より短い場合は <var>S \\lt T</var> 、長い場合は <var>S \\gt T</var> と決定して、アルゴリズムを終了します。 </li> </ol>\n\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>s</var> は長さ <var>N</var> の英小文字のみからなる文字列</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>s</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>すぬけ君が手順を終えたあとの <var>s</var> としてありうる文字列のうち、辞書順最小のものを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>4\ndcab\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>acdb\n</pre>\n\n<ul>\n<li><var>x=(1,3)</var> のとき、<var>s_{1}</var> と <var>s_{3}</var> のみが入れ替わります。</li>\n<li>手順を終えたあとの <var>s</var> は <code>acdb</code> となり辞書順最小です。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>2\nab\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>ab\n</pre>\n\n<ul>\n<li><var>x=()</var> のとき、手順を終えたあとの <var>s</var> は <code>ab</code> となり辞書順最小です。</li>\n<li><var>x</var> の長さが <var>0</var> でもよいことに注意してください。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>16\ncabaaabbbabcbaba\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>aaaaaaabbbbcbbbc\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 4</h3><pre>17\nsnwfpfwipeusiwkzo\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 4</h3><pre>effwpnwipsusiwkzo\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>400</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Given is a string <var>s</var> of length <var>N</var>.\nLet <var>s_i</var> denote the <var>i</var>-th character of <var>s</var>.</p>\n<p>Snuke will transform <var>s</var> by the following procedure.</p>\n<ul>\n<li>Choose an <strong>even length</strong> (not necessarily contiguous) subsequence <var>x=(x_1, x_2, \\ldots, x_{2k})</var> of <var>(1,2, \\ldots, N)</var> (<var>k</var> may be <var>0</var>).</li>\n<li>Swap <var>s_{x_1}</var> and <var>s_{x_{2k}}</var>.</li>\n<li>Swap <var>s_{x_2}</var> and <var>s_{x_{2k-1}}</var>.</li>\n<li>Swap <var>s_{x_3}</var> and <var>s_{x_{2k-2}}</var>.</li>\n<li><var>\\vdots</var></li>\n<li>Swap <var>s_{x_{k}}</var> and <var>s_{x_{k+1}}</var>.</li>\n</ul>\n<p>Among the strings that <var>s</var> can become after the procedure, find the lexicographically smallest one.</p>\n<details>\n<summary>What is the lexicographical order?</summary>\n<p>\nSimply speaking, the lexicographical order is the order in which words are listed in a dictionary. As a more formal definition, here is the algorithm to determine the lexicographical order between different strings <var>S</var> and <var>T</var>.\n</p>\n\n<p>Below, let <var>S_i</var> denote the <var>i</var>-th character of <var>S</var>. Also, if <var>S</var> is lexicographically smaller than <var>T</var>, we will denote that fact as <var>S \\lt T</var>; if <var>S</var> is lexicographically larger than <var>T</var>, we will denote that fact as <var>S \\gt T</var>.</p>\n\n<ol>\n  <li> Let <var>L</var> be the smaller of the lengths of <var>S</var> and <var>T</var>. For each <var>i=1,2,\\dots,L</var>, we check whether <var>S_i</var> and <var>T_i</var> are the same. </li>\n  <li> If there is an <var>i</var> such that <var>S_i \\neq T_i</var>, let <var>j</var> be the smallest such <var>i</var>. Then, we compare <var>S_j</var> and <var>T_j</var>. If <var>S_j</var> comes earlier than <var>T_j</var> in alphabetical order, we determine that <var>S \\lt T</var> and quit; if <var>S_j</var> comes later than <var>T_j</var>, we determine that <var>S \\gt T</var> and quit.\n  </li>\n  <li> If there is no <var>i</var> such that <var>S_i \\neq T_i</var>, we compare the lengths of <var>S</var> and <var>T</var>. If <var>S</var> is shorter than <var>T</var>, we determine that <var>S \\lt T</var> and quit; if <var>S</var> is longer than <var>T</var>, we determine that <var>S \\gt T</var> and quit. </li>\n</ol>\n\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>s</var> is a string of length <var>N</var> consisting of lowercase English letters.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>s</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the lexicographically smallest possible string <var>s</var> after the procedure by Snuke.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>4\ndcab\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>acdb\n</pre>\n\n<ul>\n<li>When <var>x=(1,3)</var>, the procedure just swaps <var>s_{1}</var> and <var>s_{3}</var>.</li>\n<li>The <var>s</var> after the procedure is <code>acdb</code>, the lexicographically smallest possible result.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>2\nab\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>ab\n</pre>\n\n<ul>\n<li>When <var>x=()</var>, the <var>s</var> after the procedure is <code>ab</code>, the lexicographically smallest possible result.</li>\n<li>Note that <var>x</var> may have a length of <var>0</var>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>16\ncabaaabbbabcbaba\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>aaaaaaabbbbcbbbc\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 4</h3><pre>17\nsnwfpfwipeusiwkzo\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 4</h3><pre>effwpnwipsusiwkzo\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc134/tasks/arc134_b"}