{"html":{"ja":"<span class=\"lang-ja\">\n\n<div class=\"part\">\n<section>\n<h3>ストーリー</h3><p>日本では正月に「書き初め大会」という伝統的な書道のコンテストが開催される。\nAtCoder社の書き初め大会は、筆を使って文字を書く代わりに、各社員がそれぞれ特殊なキー配列のキーボードを使ってタイピングし、PCの画面上に自分の好きな文字列を出力して発表するイベントである。</p>\n<p>占いにより今年の縁起の良い単語をたくさん知った高橋社長は、全ての縁起の良い単語を（連続する）部分文字列として含む文字列（これを<strong>縁起の良い文字列</strong>と呼ぶ）を出力しようと考えた。たとえば、縁起の良い単語が <code>AC</code>, <code>WA</code>, <code>CE</code> の3つであった場合、 <code>WHITESPACE</code> は <code>WA</code> を部分文字列として含まないため<strong>縁起の良い文字列</strong>ではないが、 <code>FACEWASH</code> は全ての縁起の良い単語を部分文字列として含んでいるため<strong>縁起の良い文字列</strong>である。</p>\n<p>キーボード上での指の移動および打鍵には移動距離に応じた時間がかかるが、完成した文字列の発表は社長から順に行うことになっているため、できるだけ短い時間で<strong>縁起の良い文字列</strong>を完成させたい。指の移動方法を決めるプログラムを作成して、高橋社長の手助けをして欲しい。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N\\times N</var> マスのグリッド上に表現されたキー配列が与えられる。一番左上のマスの座標を <var>(0,0)</var> とし、そこから下方向に <var>i</var> マス、右方向に <var>j</var> マス移動した先のマスの座標を <var>(i,j)</var> とする。各マスには英大文字 <var>A_{i,j}</var> が書かれており、初期状態でマス <var>(s_i, s_j)</var> に指が置かれている。</p>\n<p>英大文字からなる <var>M</var> 個の文字列 <var>t_1,\\cdots,t_M</var> が与えられる。文字列であって、全ての <var>t_k</var> を（連続する）部分文字列として含むものを<strong>縁起の良い文字列</strong>と定義する。空文字列 <var>S</var> から開始して、以下の操作を <var>5000</var> 回以下行うことで、 <var>S</var> が<strong>縁起の良い文字列</strong>となるようにしたい。</p>\n<ul>\n<li>マス <var>(i, j)</var> を指定し、指をマス <var>(i, j)</var> に移動させたのち <var>S</var> の末尾に <var>A_{i, j}</var> を追加する。操作前に指が置かれていた座標を <var>(i', j')</var> とすると、この操作によりコスト <var>|i-i'|+|j-j'|+1</var> が発生する。マス <var>(i, j)</var> とマス <var>(i', j')</var> は同じマスであってもよく、その際に発生するコストは <var>1</var> である。</li>\n</ul>\n<p>できるだけ少ないコストで <var>S</var> を<strong>縁起の良い文字列</strong>にできるような操作列を求めよ。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>得点</h3><p><var>t_k</var> のうち <var>S</var> に（連続する）部分文字列として含まれるものの個数を <var>K</var> 、操作のコストの総和を <var>T</var> としたとき、以下の得点が得られる。</p>\n<ul>\n<li><var>K\\lt M</var> の場合、 <var>\\mathrm{round}(1000 \\times (K+1)/M)</var></li>\n<li><var>K=M</var> の場合、 <var>\\mathrm{max}(10000-T, 1001)</var></li>\n</ul>\n<p>操作回数が <var>5000</var> を超えた場合や、範囲外のマスを指定した場合は <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"不正解\">WA</span> と判定される。</p>\n<p>テストケースは全部で 150 個あり、各テストケースの得点の合計が提出の得点となる。\n一つ以上のテストケースで不正な出力や制限時間超過をした場合、提出全体の判定が<span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"不正解\">WA</span>や<span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"実行時間制限超過\">TLE</span>となる。\nコンテスト時間中に得た最高得点で最終順位が決定され、コンテスト終了後のシステムテストは行われない。 同じ得点を複数の参加者が得た場合、提出時刻に関わらず同じ順位となる。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>s_i</var> <var>s_j</var>\n<var>A_{0,0}</var><var>A_{0,1}</var><var>\\cdots</var><var>A_{0,N-1}</var>\n<var>A_{1,0}</var><var>A_{1,1}</var><var>\\cdots</var><var>A_{1,N-1}</var>\n<var>\\vdots</var>\n<var>A_{N-1,0}</var><var>A_{N-1,1}</var><var>\\cdots</var><var>A_{N-1,N-1}</var>\n<var>t_1</var>\n<var>\\vdots</var>\n<var>t_M</var>\n</pre>\n\n<ul>\n<li><var>N=15</var></li>\n<li><var>M=200</var></li>\n<li><var>0\\le s_i,s_j\\le N-1</var></li>\n<li><var>A_{i,0}A_{i,1}\\cdots A_{i,N-1}</var> は英大文字からなる長さ<var>N</var>の文字列</li>\n<li><var>t_k</var> は英大文字からなる長さ <var>5</var> の文字列</li>\n<li><var>t_k\\ne t_{k'}</var> <var>(k\\ne k')</var></li>\n<li>全ての英大文字 <var>c</var> について、 <var>A_{i,j}=c</var> となるような座標 <var>(i,j)</var> が1つ以上存在することが保証される</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>操作回数を <var>L</var> <var>(0\\le L\\le 5000)</var> 、<var>l</var> 回目の操作で指定したマスを <var>(i_l, j_l)</var> <var>(0\\le i_l, j_l\\le N-1)</var> としたとき、以下の形式で標準出力に出力せよ。</p>\n<pre><var>i_1</var> <var>j_1</var>\n<var>\\vdots</var>\n<var>i_L</var> <var>j_L</var>\n</pre>\n\n<p><a href=\"https://img.atcoder.jp/ahc028/fWRno7xB.html?lang=ja&amp;seed=0&amp;output=sample\">例を見る</a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>入力生成方法</h3><p></p><details>\n<var>L</var> 以上 <var>U</var> 以下の整数値を一様ランダムに生成する関数を <var>\\mathrm{rand}(L,U)</var> と表す。<p></p>\n<h4><var>(s_i,s_j)</var> の生成</h4>\n<p><var>s_i=\\mathrm{rand}(0, N-1)</var>, <var>s_j=\\mathrm{rand}(0, N-1)</var> とする。</p>\n<h4><var>A_{i,j}</var> の生成</h4>\n<p>全ての <var>(i, j)</var> に対して、 <var>A_{i,j}</var> を英大文字から一様ランダムに選択する。ただし、どの <var>A_{i,j}</var> にも含まれない英大文字が存在する場合は、全ての <var>A_{i,j}</var> の生成をやり直す。</p>\n<h4><var>t_k</var> の生成</h4>\n<p>全ての <var>k</var> に対して、英大文字から一様ランダムに <var>5</var> 回生成することで長さ <var>5</var> の文字列 <var>t_k</var> を生成する。ただし、 既に生成した <var>t_{k'}</var> であって、<var>t_k=t_{k'}</var> となるものが存在する場合は <var>t_k</var> の生成をやり直す。最後に、<var>t_1, t_2, \\cdots, t_M</var> を辞書順に並び替える。</p>\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>ツール(入力ジェネレータ・ビジュアライザ)</h3><ul>\n<li><a href=\"https://img.atcoder.jp/ahc028/fWRno7xB.html?lang=ja\">Web版</a>: ローカル版より高性能でアニメーション表示が可能です。</li>\n<li><a href=\"https://img.atcoder.jp/ahc028/fWRno7xB.zip\">ローカル版</a>: 使用するには<a href=\"https://www.rust-lang.org/ja\">Rust言語</a>のコンパイル環境をご用意下さい。</li>\n<li><a href=\"https://img.atcoder.jp/ahc028/fWRno7xB_windows.zip\">Windows用のコンパイル済みバイナリ</a>: Rust言語の環境構築が面倒な方は代わりにこちらをご利用下さい。</li>\n</ul>\n<p>コンテスト期間中における、ビジュアライズ結果の共有や解法・考察に関する言及は禁止されています。ご注意下さい。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre style=\"max-height:200px;overflow-y:scroll\">15 200\n0 14\nAWVECXNGDCNGBMQ\nURGNCIDJOVTHSOB\nKIGBCYVNJUYVRWC\nEIXOMNZZLEBHWOX\nDLPDTIFGWMQOMAQ\nYSUDWSIOQRTBURH\nDKTQGUCVOJIYSPP\nSVLNHOOCDLDAMNF\nJLFXHXINKYBVCGU\nESYKRPBSPYJIWZU\nLRGACNSZRPKESVK\nHDMSMPEBCXCTZTX\nKMIXHCXJFZICBJX\nTEGKFZOGIQLONVD\nLVBIWLIHLAGARHI\nABYNP\nAOTLX\nARZVJ\nASPBI\nAXFSO\nAZPGI\nBCPZL\nBENRS\nBOVIS\nBUBNT\nBYUJQ\nCBYSK\nCINAP\nCNCBN\nCOOUV\nCOPDO\nCQQZD\nDADKB\nDGXFM\nDLQFC\nDQNCL\nDRGYV\nDSDUU\nDWIZI\nDZMWP\nEBYAI\nEKKOD\nEKYQJ\nEMLYM\nEQLUL\nERGRD\nERWVW\nESLTA\nFBGKH\nFBPWX\nFCTHA\nFOIOY\nFTPWX\nFVJEJ\nFYZVJ\nGCSZE\nGEBGT\nGEPUH\nGVLGE\nGWTIL\nGYEZT\nHCGWP\nHEQWH\nHFXXC\nHGWEW\nHIPKG\nHKHVZ\nHUCSQ\nHWNQT\nHXIOS\nIEOTI\nIFMJA\nIKFLQ\nIKOTA\nILQFS\nIQTXL\nIRNAB\nIXTRT\nIZFIV\nJBWWJ\nJDYNL\nJHWXZ\nJKIRA\nJNPBO\nJODMD\nJOWSW\nJRMIO\nJXUSI\nJYCOD\nJYKWU\nKASYC\nKDZPV\nKRJKE\nKVINZ\nKZKQA\nLEZYS\nLHICS\nLMLSY\nLNUCX\nMBPRA\nMEAPP\nMFJNA\nMFRNF\nMLXDV\nMNQSF\nMUSXF\nMXRFN\nMYGLL\nNJGES\nNQZTU\nNRKRQ\nNTAPK\nNYOWZ\nOAUQD\nOKRRY\nOMIAK\nONPWH\nOUFYF\nOXASM\nOXSMM\nPBAMY\nPEJQR\nPJFGR\nPJXXR\nPMQAC\nPMXFC\nPOLAM\nPPPAD\nPRSKX\nPSGLI\nPUORC\nPUUUP\nPVNSO\nPXUII\nPZEPP\nQDMII\nQDXYM\nQHHZU\nQLNRU\nQNDEH\nQNWKI\nQPCPS\nQULFB\nQVVVG\nRGHTR\nRGQWY\nRHYGF\nRIELA\nRMAKH\nROVKG\nRSSYP\nRSULP\nRWBAX\nSICZS\nSJBBE\nSNCZK\nSUMHS\nSXEZH\nSYXFA\nTANTF\nTDVIQ\nTGMCV\nTHIWA\nTLUET\nTMAYP\nTQCSB\nTXYKE\nUAQKR\nUGHLN\nUJKSD\nULGYC\nUNUSS\nUWNUQ\nVBUYH\nVCUMT\nVIRUK\nVMXTJ\nVNVCN\nVPBGX\nWBWLB\nWCNUF\nWHAXY\nWKAKT\nWNMDP\nWPHPJ\nWULBH\nWVFWE\nWVYTO\nWWCBS\nWWUFL\nXESTB\nXHYES\nXKDGD\nXKHYZ\nXMOJJ\nXPCQR\nXQEHC\nXSOKS\nXTGPA\nXTLCE\nXXSWV\nXXVDA\nYAPDH\nYBDJA\nYCNGF\nYLDQD\nYLFGP\nYNBDS\nYQGBT\nYVJLV\nYYPIT\nZBGGI\nZORJO\nZQMBO\nZYYVG\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre style=\"max-height:200px;overflow-y:scroll\">1 13\n2 14\n4 10\n5 8\n3 7\n4 3\n6 1\n7 3\n9 4\n8 8\n5 9\n4 10\n8 11\n8 11\n10 13\n14 10\n13 10\n10 9\n9 14\n8 14\n9 14\n6 13\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n\n<div class=\"part\">\n<section>\n<h3>Story</h3><p>In Japan, a traditional calligraphy contest known as 'Kakizome Taikai' is held during the New Year.\nAtCoder's Kakizome Taikai is an event in which, instead of writing with a brush, each employee types on a keyboard with a special key layout and outputs his/her favorite string on a PC screen for presentation.</p>\n<p>After learning many lucky words for this year through fortune-telling, CEO Takahashi decided to output a string containing all the lucky words as a (contiguous) substring (called a <strong>lucky string</strong>).\nFor example, if the lucky words are <code>AC</code>, <code>WA</code>, and <code>CE</code>, then <code>WHITESPACE</code> is not a <strong>lucky string</strong> because it does not contain <code>WA</code> as a substring, but <code>FACEWASH</code> is a <strong>lucky string</strong> because it contains all lucky words as substrings.</p>\n<p>Moving and typing a finger on the keyboard takes time depending on the distance between keys.\nBecause Takahashi is first in the order of presentation, he wants to type a <strong>lucky string</strong> as quickly as possible.\nPlease help him by creating a program to determine how to move his finger.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a key layout represented on an <var>N \\times N</var> grid.\nLet <var>(0, 0)</var> be the coordinates of the top-left square, and <var>(i, j)</var> be the coordinates of the square located <var>i</var> squares down and <var>j</var> squares to the right from there.\nEach square contains an uppercase English letter <var>A_{i,j}</var>, and initially, the finger is placed on the square <var>(s_i, s_j)</var>.</p>\n<p>You are given <var>M</var> strings <var>t_1,\\cdots,t_M</var> consisting of uppercase English letters.\nA string that contains all <var>t_k</var> as (contiguous) substrings is defined as a <strong>lucky string</strong>.\nStarting with an empty string <var>S</var>, the goal is to make <var>S</var> a <strong>lucky string</strong> by performing the following operations no more than <var>5000</var> times.</p>\n<ul>\n<li>Specify square <var>(i, j)</var>, move the finger to this square, and then append <var>A_{i, j}</var> to the end of <var>S</var>. If the coordinates of the square where the finger was placed before the operation are <var>(i', j')</var>, this operation incurs a cost of <var>|i-i'|+|j-j'|+1</var>. The squares <var>(i, j)</var> and <var>(i', j')</var> can be the same, in which case the incurred cost is <var>1</var>.</li>\n</ul>\n<p>Find a sequence of operations that makes <var>S</var> a <strong>lucky string</strong> with as little cost as possible.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Scoring</h3><p>Let <var>K</var> be the number of <var>t_k</var> contained in <var>S</var> as (contiguous) substrings, and <var>T</var> be the total cost of the operations.\nThen you will obtain the following score.</p>\n<ul>\n<li>If <var>K\\lt M</var>, <var>\\mathrm{round}(1000 \\times (K+1)/M)</var>.</li>\n<li>If <var>K=M</var>, <var>\\mathrm{max}(10000-T, 1001)</var>.</li>\n</ul>\n<p>If the number of operations exceeds <var>5000</var>, or if a square outside the <var>N\\times N</var> grid is specified, it will be judged as <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Wrong Answer\">WA</span>.</p>\n<p>There are 150 test cases, and the score of a submission is the total score for each test case.\nIf your submission produces an illegal output or exceeds the time limit for some test cases, the submission itself will be judged as <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Wrong Answer\">WA</span> or <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Time Limit Exceeded\">TLE</span> , and the score of the submission will be zero.\nThe highest score obtained during the contest will determine the final ranking, and there will be no system test after the contest.\nIf more than one participant gets the same score, they will be ranked in the same place regardless of the submission time.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>s_i</var> <var>s_j</var>\n<var>A_{0,0}</var><var>A_{0,1}</var><var>\\cdots</var><var>A_{0,N-1}</var>\n<var>A_{1,0}</var><var>A_{1,1}</var><var>\\cdots</var><var>A_{1,N-1}</var>\n<var>\\vdots</var>\n<var>A_{N-1,0}</var><var>A_{N-1,1}</var><var>\\cdots</var><var>A_{N-1,N-1}</var>\n<var>t_1</var>\n<var>\\vdots</var>\n<var>t_M</var>\n</pre>\n\n<ul>\n<li><var>N=15</var></li>\n<li><var>M=200</var></li>\n<li><var>0\\le s_i,s_j\\le N-1</var></li>\n<li><var>A_{i,0}A_{i,1}\\cdots A_{i,N-1}</var> is a string of length <var>N</var> consisting of uppercase English letters.</li>\n<li><var>t_k</var> is a string of length <var>5</var> consisting of uppercase English letters.</li>\n<li><var>t_k\\ne t_{k'}</var> <var>(k\\ne k')</var></li>\n<li>For every uppercase <var>c</var>, it is guaranteed that there exists at least one coordinate <var>(i,j)</var> such that <var>A_{i,j}=c</var>.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Let <var>L</var> be the number of operations and <var>(i_l, j_l)</var> <var>(0\\le i_l, j_l\\le N-1)</var> be the square specified in the <var>l</var>-th operation.\nThen, output to Standard Output in the following format.</p>\n<pre><var>i_1</var> <var>j_1</var>\n<var>\\vdots</var>\n<var>i_L</var> <var>j_L</var>\n</pre>\n\n<p><a href=\"https://img.atcoder.jp/ahc028/fWRno7xB.html?lang=en&amp;seed=0&amp;output=sample\">Show example</a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Input Generation</h3><p></p><details>\nLet <var>\\mathrm{rand}(L,U)</var> be a function that generates a uniform random integer between <var>L</var> and <var>U</var>, inclusive.<p></p>\n<h4>Generation of <var>(s_i,s_j)</var></h4>\n<p>Generate <var>s_i=\\mathrm{rand}(0, N-1)</var> and <var>s_j=\\mathrm{rand}(0, N-1)</var>.</p>\n<h4>Generation of <var>A_{i,j}</var></h4>\n<p>For each <var>(i, j)</var>, generate <var>A_{i,j}</var> uniformly at random from uppercase English letters.\nIf there exists an uppercase letter that is not included in any <var>A_{i,j}</var>, regenerate all <var>A_{i,j}</var>.</p>\n<h4>Generation of <var>t_k</var></h4>\n<p>For each <var>k</var>, generate a string <var>t_k</var> of length <var>5</var> by randomly generating uppercase English letters <var>5</var> times.\nIf there is an already generated <var>t_{k'}</var> with <var>t_k=t_{k'}</var>, regenerate <var>t_k</var>.\nFinally, sort <var>t_1, t_2, \\cdots, t_M</var> in lexicographic order.</p>\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Tools (Input generator and visualizer)</h3><ul>\n<li><a href=\"https://img.atcoder.jp/ahc028/fWRno7xB.html?lang=en\">Web version</a>: This is more powerful than the local version and can display animations.</li>\n<li><a href=\"https://img.atcoder.jp/ahc028/fWRno7xB.zip\">Local version</a>: You need a compilation environment of <a href=\"https://www.rust-lang.org\">Rust language</a>.<ul>\n<li><a href=\"https://img.atcoder.jp/ahc028/fWRno7xB_windows.zip\">Pre-compiled binary for Windows</a>: If you are not familiar with the Rust language environment, please use this instead.</li>\n</ul>\n</li>\n</ul>\n<p>Please be aware that sharing visualization results or discussing solutions/ideas during the contest is prohibited.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre style=\"max-height:200px;overflow-y:scroll\">15 200\n0 14\nAWVECXNGDCNGBMQ\nURGNCIDJOVTHSOB\nKIGBCYVNJUYVRWC\nEIXOMNZZLEBHWOX\nDLPDTIFGWMQOMAQ\nYSUDWSIOQRTBURH\nDKTQGUCVOJIYSPP\nSVLNHOOCDLDAMNF\nJLFXHXINKYBVCGU\nESYKRPBSPYJIWZU\nLRGACNSZRPKESVK\nHDMSMPEBCXCTZTX\nKMIXHCXJFZICBJX\nTEGKFZOGIQLONVD\nLVBIWLIHLAGARHI\nABYNP\nAOTLX\nARZVJ\nASPBI\nAXFSO\nAZPGI\nBCPZL\nBENRS\nBOVIS\nBUBNT\nBYUJQ\nCBYSK\nCINAP\nCNCBN\nCOOUV\nCOPDO\nCQQZD\nDADKB\nDGXFM\nDLQFC\nDQNCL\nDRGYV\nDSDUU\nDWIZI\nDZMWP\nEBYAI\nEKKOD\nEKYQJ\nEMLYM\nEQLUL\nERGRD\nERWVW\nESLTA\nFBGKH\nFBPWX\nFCTHA\nFOIOY\nFTPWX\nFVJEJ\nFYZVJ\nGCSZE\nGEBGT\nGEPUH\nGVLGE\nGWTIL\nGYEZT\nHCGWP\nHEQWH\nHFXXC\nHGWEW\nHIPKG\nHKHVZ\nHUCSQ\nHWNQT\nHXIOS\nIEOTI\nIFMJA\nIKFLQ\nIKOTA\nILQFS\nIQTXL\nIRNAB\nIXTRT\nIZFIV\nJBWWJ\nJDYNL\nJHWXZ\nJKIRA\nJNPBO\nJODMD\nJOWSW\nJRMIO\nJXUSI\nJYCOD\nJYKWU\nKASYC\nKDZPV\nKRJKE\nKVINZ\nKZKQA\nLEZYS\nLHICS\nLMLSY\nLNUCX\nMBPRA\nMEAPP\nMFJNA\nMFRNF\nMLXDV\nMNQSF\nMUSXF\nMXRFN\nMYGLL\nNJGES\nNQZTU\nNRKRQ\nNTAPK\nNYOWZ\nOAUQD\nOKRRY\nOMIAK\nONPWH\nOUFYF\nOXASM\nOXSMM\nPBAMY\nPEJQR\nPJFGR\nPJXXR\nPMQAC\nPMXFC\nPOLAM\nPPPAD\nPRSKX\nPSGLI\nPUORC\nPUUUP\nPVNSO\nPXUII\nPZEPP\nQDMII\nQDXYM\nQHHZU\nQLNRU\nQNDEH\nQNWKI\nQPCPS\nQULFB\nQVVVG\nRGHTR\nRGQWY\nRHYGF\nRIELA\nRMAKH\nROVKG\nRSSYP\nRSULP\nRWBAX\nSICZS\nSJBBE\nSNCZK\nSUMHS\nSXEZH\nSYXFA\nTANTF\nTDVIQ\nTGMCV\nTHIWA\nTLUET\nTMAYP\nTQCSB\nTXYKE\nUAQKR\nUGHLN\nUJKSD\nULGYC\nUNUSS\nUWNUQ\nVBUYH\nVCUMT\nVIRUK\nVMXTJ\nVNVCN\nVPBGX\nWBWLB\nWCNUF\nWHAXY\nWKAKT\nWNMDP\nWPHPJ\nWULBH\nWVFWE\nWVYTO\nWWCBS\nWWUFL\nXESTB\nXHYES\nXKDGD\nXKHYZ\nXMOJJ\nXPCQR\nXQEHC\nXSOKS\nXTGPA\nXTLCE\nXXSWV\nXXVDA\nYAPDH\nYBDJA\nYCNGF\nYLDQD\nYLFGP\nYNBDS\nYQGBT\nYVJLV\nYYPIT\nZBGGI\nZORJO\nZQMBO\nZYYVG\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre style=\"max-height:200px;overflow-y:scroll\">1 13\n2 14\n4 10\n5 8\n3 7\n4 3\n6 1\n7 3\n9 4\n8 8\n5 9\n4 10\n8 11\n8 11\n10 13\n14 10\n13 10\n10 9\n9 14\n8 14\n9 14\n6 13\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/ahc028/tasks/ahc028_a"}