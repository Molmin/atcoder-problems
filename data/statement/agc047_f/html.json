{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>2200</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>無限に広がるチェス盤上の <var>N</var> 個の敵ルークの位置 <var>(X_i, Y_i)</var> が与えられます。<em>[訳注: ルークは将棋の飛車と似た動きをする駒です。]</em>\nどの二つのルークも、お互いを攻められる位置にはありません (すなわち、一行あたり、または一列あたりのルークの数は一個以下です)。</p>\n<p>あなたは、ルークのうち一個をキングに置き換え、キングを繰り返し動かしてできるだけ多くのルークを取ろうとしています。<em>[訳注: キングは将棋の王将と似た動きをする駒です。]</em></p>\n<p>ルークに攻められているマスに入ることはできません。\nまた、<strong>斜めに移動することで空きマスに移ることもできません</strong> (しかし、斜めに移動することでルークを取ることはできます)。</p>\n<p>(つまり、このキングの動きは、斜め四方向に動いて駒を取ることと縦横四方向に動くことができる強化版ポーンのようなものです。)</p>\n<p>各ルークについて、そのルークをキングで置き換えた際に取ることのできる最大数のルークを取るために必要な最小手数を求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 200\\,000</var></li>\n<li><var>1 \\leq X_i, Y_i \\leq 10^6</var></li>\n<li><var>X_i \\neq X_j</var></li>\n<li><var>Y_i \\neq Y_j</var></li>\n<li>入力中の値はすべて整数である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>X_1</var> <var>Y_1</var>\n<var>X_2</var> <var>Y_2</var>\n<var>\\vdots</var>\n<var>X_N</var> <var>Y_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>N</var> 行出力せよ。\n<var>i</var> 行目は、<var>(X_i, Y_i)</var> に置かれたルークをキングに置き換えた場合に対応する。\nこの行には、一つの整数、すなわち <var>M_i</var> 個のルークを取るために必要な最小手数を出力せよ。\nここで、<var>M_i</var> は (何手かけてもよいとして) この場合に取ることのできるルークの最大数である。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>6\n1 8\n6 10\n2 7\n4 4\n9 3\n5 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>5\n0\n7\n5\n0\n0\n</pre>\n\n<p>下図を見てください。\nルーク <var>3</var> をキングに置き換えた場合、他のルークを最大で二個取ることができます。\n図の赤い経路がこの場合の最適な手順の一つ - ルーク <var>1</var> を取り、右下方向に進み続けてルーク <var>4</var> を取る - です。\nここでの手数は <var>7</var> 手であり、これが出力例の三つ目の数です。</p>\n<p align=\"center\"><img alt=\"path\" src=\"https://img.atcoder.jp/agc047/rooks_path_small3.png\"></p>\n\n<p align=\"center\"><em><var>x</var> 軸正方向: 右、<var>y</var> 軸正方向: 上</em></p>\n\n<p>ルーク <var>2, 5, 6</var> のいずれかをキングに置き換えた場合には、他のルークを一個も取ることができません。このとき、最小手数は <var>0</var> です。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5\n5 5\n100 100\n70 20\n81 70\n800 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>985\n985\n1065\n1034\n0\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>10\n2 5\n4 4\n13 12\n12 13\n14 17\n17 19\n22 22\n16 18\n19 27\n25 26\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>2\n2\n9\n9\n3\n3\n24\n5\n0\n25\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>2200</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given positions <var>(X_i, Y_i)</var> of <var>N</var> enemy rooks on an infinite chessboard.\nNo two rooks attack each other (at most one rook per row or column).</p>\n<p>You're going to replace one rook with a king and then move the king repeatedly to beat as many rooks as possible.</p>\n<p>You can't enter a cell that is being attacked by a rook.\nAdditionally, you <strong>can't move diagonally to an empty cell</strong> (but you can beat a rook diagonally).</p>\n<p>(So this king moves like a superpawn that beats diagonally in 4 directions and moves horizontally/vertically in 4 directions.)</p>\n<p>For each rook, consider replacing it with a king, and find the minimum possible number of moves\n    needed to beat the maximum possible number of rooks.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 200\\,000</var></li>\n<li><var>1 \\leq X_i, Y_i \\leq 10^6</var></li>\n<li><var>X_i \\neq X_j</var></li>\n<li><var>Y_i \\neq Y_j</var></li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format.</p>\n<pre><var>N</var>\n<var>X_1</var> <var>Y_1</var>\n<var>X_2</var> <var>Y_2</var>\n<var>\\vdots</var>\n<var>X_N</var> <var>Y_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print <var>N</var> lines.\nThe <var>i</var>-th line is for scenario of replacing the rook at <var>(X_i, Y_i)</var> with your king.\nThis line should contain one integer: the minimum number of moves to beat <var>M_i</var> rooks\n    where <var>M_i</var> denotes the maximum possible number of beaten rooks in this scenario (in infinite time).</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>6\n1 8\n6 10\n2 7\n4 4\n9 3\n5 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>5\n0\n7\n5\n0\n0\n</pre>\n\n<p>See the drawing below.\nIf we replace rook 3 with a king, we can beat at most two other rooks.\nThe red path is one of optimal sequences of moves: beat rook 1,\n    then keep going down and right until you can beat rook 4.\nThere are 7 steps and that's the third number in the output.</p>\n<p align=\"center\"><img alt=\"path\" src=\"https://img.atcoder.jp/agc047/rooks_path_small3.png\"></p>\n\n<p align=\"center\"><em>x-coordinate increases from left to right,\n    while y increases bottom to top.</em></p>\n\n<p>Starting from rook 2, 5 or 6, we can't beat any other rook.\nThe optimal number of moves is 0.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5\n5 5\n100 100\n70 20\n81 70\n800 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>985\n985\n1065\n1034\n0\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>10\n2 5\n4 4\n13 12\n12 13\n14 17\n17 19\n22 22\n16 18\n19 27\n25 26\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>2\n2\n9\n9\n3\n3\n24\n5\n0\n25\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc047/tasks/agc047_f"}