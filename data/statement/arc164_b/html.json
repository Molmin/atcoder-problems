{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>500</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>頂点に <var>1</var> から <var>N</var> までの番号がついた <var>N</var> 頂点の単純、連結な無向グラフがあります。\nこのグラフには <var>M</var> 本の辺があり、 <var>i</var> 番目の辺は <var>2</var> 頂点 <var>a_i</var> , <var>b_i</var> を結んでいます。</p>\n<p>また、各頂点は白または黒の色を持ち、最初の状態が <var>c_i</var> で与えられます。\n<var>c_i</var> は <var>0</var> または <var>1</var> であり、<var>c_i=0</var> であれば頂点 <var>i</var> は初め白色であり、<var>c_i=1</var> であれば頂点 <var>i</var> は初め黒色です。</p>\n<p>あなたはこのグラフ上で、好きな頂点を <var>1</var> つ選んで出発点とし、</p>\n<ul>\n<li>今いる頂点と辺で結ばれた頂点のうち、今いる頂点と異なる色の頂点に移動する。その直後に、移動元の頂点の色を反転する（元の色が白なら黒に、黒なら白に変える）。</li>\n</ul>\n<p>という動作を好きな回数繰り返します。</p>\n<p><var>1</var> 回以上の動作を行ったうえで、再び出発点に戻ってくることは可能でしょうか。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>N-1 \\leq M \\leq \\mathrm{min} \\lbrace 2 \\times 10^5,N(N-1)/2 \\rbrace </var></li>\n<li><var>1 \\leq a_i, b_i \\leq N</var> <var>(1 \\leq i \\leq M)</var></li>\n<li><var>c_i=0</var> または <var>c_i=1</var> <var>(1 \\leq i \\leq N)</var></li>\n<li>与えられるグラフは単純かつ連結である</li>\n<li>入力される値はすべて整数である</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>a_1</var> <var>b_1</var>\n<var>a_2</var> <var>b_2</var>\n<var>\\vdots</var>\n<var>a_M</var> <var>b_M</var>\n<var>c_1</var> <var>c_2</var> <var>\\ldots</var> <var>c_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>1</var> 回以上の動作を行ったうえで再び出発点に戻ってくることが可能な場合は <code>Yes</code> を、そのようなことが不可能な場合は <code>No</code> を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>4 4\n1 2\n2 3\n3 4\n4 2\n0 1 0 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>Yes\n</pre>\n<p>例えば、頂点 <var>1</var> から出発することを考えます。\n最初の動作では、頂点 <var>2</var> に移動し、移動元である頂点 <var>1</var> の色を白から黒に変化させます。この際のグラフの変化は下の図の通りです（丸で囲った頂点が今いる頂点を表します）。</p>\n<p>その後、頂点 <var>3</var>, <var>4</var>, <var>2</var> へと順に移動すると、この時点で頂点 <var>1,2,3,4</var> の色は順に黒、白、黒、白となっています。\nしたがって、次の動作で頂点 <var>1</var> に移動することができ、出発点に戻ってくることができました。</p>\n<p><img src=\"https://img.atcoder.jp/arc164/69700c7a0d96daa9c93ad01b89530e53.png\"></p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5 6\n1 2\n2 3\n3 4\n4 5\n1 4\n2 5\n0 1 0 1 0\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>No\n</pre>\n<p>このグラフでは、どの頂点を出発点に選んでも、条件を満たすような移動を行って出発点に戻ってくることができません。</p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>500</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There is a simple connected undirected graph with <var>N</var> vertices numbered from <var>1</var> to <var>N</var>.\nThis graph has <var>M</var> edges, and the <var>i</var>-th edge connects two vertices <var>a_i</var> and <var>b_i</var>.</p>\n<p>Each vertex has a color, either white or black, and the initial state is given by <var>c_i</var>.\n<var>c_i</var> is either <var>0</var> or <var>1</var>, where <var>c_i=0</var> means that vertex <var>i</var> is initially white, and <var>c_i=1</var> means that vertex <var>i</var> is initially black.</p>\n<p>On this graph, you can choose any vertex as your starting point and repeat the following operation as many times as you like.</p>\n<ul>\n<li>Move to a vertex of a different color connected by an edge from the current vertex. Immediately after moving, reverse the color of the vertex you moved from (change to black if it was white, and vice versa).</li>\n</ul>\n<p>Is it possible to return to the starting point after performing the operation at least once?</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>N-1 \\leq M \\leq \\mathrm{min} \\lbrace 2 \\times 10^5,N(N-1)/2 \\rbrace </var></li>\n<li><var>1 \\leq a_i, b_i \\leq N</var> <var>(1 \\leq i \\leq M)</var></li>\n<li><var>c_i=0</var> or <var>c_i=1</var> <var>(1 \\leq i \\leq N)</var></li>\n<li>The given graph is simple and connected.</li>\n<li>All input values are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>a_1</var> <var>b_1</var>\n<var>a_2</var> <var>b_2</var>\n<var>\\vdots</var>\n<var>a_M</var> <var>b_M</var>\n<var>c_1</var> <var>c_2</var> <var>\\ldots</var> <var>c_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If it is possible to return to the starting point after performing the operation at least once, print <code>Yes</code>; otherwise, print <code>No</code>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>4 4\n1 2\n2 3\n3 4\n4 2\n0 1 0 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>Yes\n</pre>\n<p>For example, consider starting from vertex <var>1</var>.\nIn the first operation, move to vertex <var>2</var> and change the color of the vertex <var>1</var> from white to black. This change in the graph is shown in the figure below (the vertex circled is the current vertex).</p>\n<p>Then, if you move to vertices <var>3</var>, <var>4</var>, and <var>2</var> in order, the colors of vertices <var>1,2,3,4</var> will then be black, white, black, and white, respectively.\nTherefore, you can move to vertex <var>1</var> in the next operation, returning to the starting point.</p>\n<p><img src=\"https://img.atcoder.jp/arc164/69700c7a0d96daa9c93ad01b89530e53.png\"></p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5 6\n1 2\n2 3\n3 4\n4 5\n1 4\n2 5\n0 1 0 1 0\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>No\n</pre>\n<p>In this graph, no matter which vertex you choose as the starting point, you cannot return to the starting point by making moves that satisfy the conditions.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc164/tasks/arc164_b"}