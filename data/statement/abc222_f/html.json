{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>500</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>AtCoder 王国は <var>N</var> 個の街と <var>N-1</var> 個の道路からなります。<br>\n街には 街 <var>1</var>, 街 <var>2</var>, <var>\\dots</var>, 街 <var>N</var> と番号がついています。道路にも同様に 道路 <var>1</var>, 道路 <var>2</var>, <var>\\dots</var>, 道路 <var>N-1</var> と番号が付いています。\n道路 <var>i</var> は街 <var>A_i</var> と <var>B_i</var> を双方向に結んでいて、通過するときに <var>C_i</var> の通行料がかかります。すべての異なる街の組 <var>(i, j)</var> に対して、道路を経由して街 <var>i</var> から街 <var>j</var> に行くことができます。</p>\n<p>今、列 <var>D = (D_1, D_2, \\dots, D_N)</var> が与えられます。 <var>D_i</var> は街 <var>i</var> を観光するときにかかる費用です。\nこのとき、街 <var>i</var> から街 <var>j</var> への旅費 <var>E_{i,j}</var> を、(同じ道を <var>2</var> 回以上使わずに街 <var>i</var> から街 <var>j</var> へ向かうときにかかる通行料の和) に <var>D_{j}</var> を足したものとして定めます。</p>\n<ul>\n<li>厳密に言い換えると、<var>i - j</var> 間の最短パスを <var>i = p_0, p_1, \\dots, p_{k-1}, p_k = j</var> として、街 <var>p_{l}</var> と街 <var>p_{l+1}</var> を結ぶ道路の通行料を <var>c_l</var> と置いたときに <var>E_{i,j} = D_j + \\displaystyle\\sum_{l=0}^{k-1} c_l</var> と定義します。</li>\n</ul>\n<p>すべての <var>i</var> に対して、街 <var>i</var> を始点として他の街へ旅行したときにありえる旅費の最大値を求めてください。</p>\n<ul>\n<li>厳密に言い換えると、すべての <var>i</var> に対して <var> \\max_{1 \\leq j \\leq N, j \\neq i} E_{i,j}</var> を求めてください。</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq A_i \\leq N</var> <var>(1 \\leq i \\leq N-1)</var></li>\n<li><var>1 \\leq B_i \\leq N</var> <var>(1 \\leq i \\leq N-1)</var></li>\n<li><var>1 \\leq C_i \\leq 10^9</var> <var>(1 \\leq i \\leq N-1)</var></li>\n<li><var>1 \\leq D_i \\leq 10^9</var> <var>(1 \\leq i \\leq N)</var></li>\n<li>整数の組 <var>(i,j)</var> が <var>1 \\leq i \\lt j \\leq N</var> を満たすならば、街 <var>i</var> から街 <var>j</var> へいくつかの道路を通ることで移動できる。</li>\n<li>入力はすべて整数である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>A_1</var> <var>B_1</var> <var>C_1</var>\n<var>A_2</var> <var>B_2</var> <var>C_2</var>\n<var>\\vdots</var>\n<var>A_{N-1}</var> <var>B_{N-1}</var> <var>C_{N-1}</var>\n<var>D_1</var> <var>D_2</var> <var>\\dots</var> <var>D_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>N</var> 行出力せよ。<var>i</var> 行目には <var>\\displaystyle \\max_{1 \\leq j \\leq N, j \\neq i} E_{i,j}</var> を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3\n1 2 2\n2 3 3\n1 2 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>8\n6\n6\n</pre>\n<p>すべての街の順序つき組 <var>(i,j)</var> に対して <var>E_{i,j}</var> を計算すると次のようになります。</p>\n<ul>\n<li><var>E_{1,2} = 2 + 2 = 4</var></li>\n<li><var>E_{1,3} = 5 + 3 = 8</var></li>\n<li><var>E_{2,1} = 2 + 1 = 3</var></li>\n<li><var>E_{2,3} = 3 + 3 = 6</var></li>\n<li><var>E_{3,1} = 5 + 1 = 6</var></li>\n<li><var>E_{3,2} = 3 + 2 = 5</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>6\n1 2 3\n1 3 1\n1 4 4\n1 5 1\n1 6 5\n9 2 6 5 3 100\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>105\n108\n106\n109\n106\n14\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>6\n1 2 1000000000\n2 3 1000000000\n3 4 1000000000\n4 5 1000000000\n5 6 1000000000\n1 2 3 4 5 6\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>5000000006\n4000000006\n3000000006\n3000000001\n4000000001\n5000000001\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>500</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>The Kingdom of AtCoder is composed of <var>N</var> towns and <var>N-1</var> roads.<br>\nThe towns are labeled as Town <var>1</var>, Town <var>2</var>, <var>\\dots</var>, Town <var>N</var>.\nSimilarly, the roads are labeled as Road <var>1</var>, Road <var>2</var>, <var>\\dots</var>, Road <var>N-1</var>.\nRoad <var>i</var> connects Towns <var>A_i</var> and <var>B_i</var> bidirectionally, and you have to pay the toll of <var>C_i</var> to go through it. For every pair of different towns <var>(i, j)</var>, it is possible to go from Town <var>A_i</var> to Town <var>B_j</var> via the roads.</p>\n<p>You are given a sequence <var>D = (D_1, D_2, \\dots, D_N)</var>, where <var>D_i</var> is the cost to do sightseeing in Town <var>i</var>.\nLet us define the travel cost <var>E_{i,j}</var> from Town <var>i</var> to Town <var>j</var> as the total toll incurred when going from Town <var>i</var> to Town <var>j</var>, plus <var>D_{j}</var>.</p>\n<ul>\n<li>More formally, <var>E_{i,j}</var> is defined as <var>D_j + \\displaystyle\\sum_{l=0}^{k-1} c_l</var>, where the shortest path between <var>i</var> and <var>j</var> is <var>i = p_0, p_1, \\dots, p_{k-1}, p_k = j</var> and the toll for the road connecting Towns <var>p_{l}</var> and <var>p_{l+1}</var> is <var>c_l</var>.</li>\n</ul>\n<p>For every <var>i</var>, find the maximum possible travel cost when traveling from Town <var>i</var> to another town.</p>\n<ul>\n<li>More formally, for every <var>i</var>, find <var> \\max_{1 \\leq j \\leq N, j \\neq i} E_{i,j}</var>.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq A_i \\leq N</var> <var>(1 \\leq i \\leq N-1)</var></li>\n<li><var>1 \\leq B_i \\leq N</var> <var>(1 \\leq i \\leq N-1)</var></li>\n<li><var>1 \\leq C_i \\leq 10^9</var> <var>(1 \\leq i \\leq N-1)</var></li>\n<li><var>1 \\leq D_i \\leq 10^9</var> <var>(1 \\leq i \\leq N)</var></li>\n<li>It is possible to travel from Town <var>i</var> to Town <var>j</var> via some number of roads, for a pair of integers <var>(i,j)</var> such that <var>1 \\leq i \\lt j \\leq N</var>.</li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>A_1</var> <var>B_1</var> <var>C_1</var>\n<var>A_2</var> <var>B_2</var> <var>C_2</var>\n<var>\\vdots</var>\n<var>A_{N-1}</var> <var>B_{N-1}</var> <var>C_{N-1}</var>\n<var>D_1</var> <var>D_2</var> <var>\\dots</var> <var>D_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print <var>N</var> lines. The <var>i</var>-th line should contain <var>\\displaystyle \\max_{1 \\leq j \\leq N, j \\neq i} E_{i,j}</var>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3\n1 2 2\n2 3 3\n1 2 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>8\n6\n6\n</pre>\n<p>The value of <var>E_{i,j}</var> for every ordered pair of towns <var>(i,j)</var> is as follows.</p>\n<ul>\n<li><var>E_{1,2} = 2 + 2 = 4</var></li>\n<li><var>E_{1,3} = 5 + 3 = 8</var></li>\n<li><var>E_{2,1} = 2 + 1 = 3</var></li>\n<li><var>E_{2,3} = 3 + 3 = 6</var></li>\n<li><var>E_{3,1} = 5 + 1 = 6</var></li>\n<li><var>E_{3,2} = 3 + 2 = 5</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>6\n1 2 3\n1 3 1\n1 4 4\n1 5 1\n1 6 5\n9 2 6 5 3 100\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>105\n108\n106\n109\n106\n14\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>6\n1 2 1000000000\n2 3 1000000000\n3 4 1000000000\n4 5 1000000000\n5 6 1000000000\n1 2 3 4 5 6\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>5000000006\n4000000006\n3000000006\n3000000001\n4000000001\n5000000001\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc222/tasks/abc222_f"}