{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>625</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>正整数 <var>N,K</var> が与えられます。また、<var>N\\times N</var> 行列 <var>C=(C_{i,j})</var> <var>(1\\leq i,j\\leq N)</var> が与えられます。ここで、<var>C_{i,i}=0,C_{i,j}=C_{j,i}</var> が保証されます。</p>\n<p>頂点に <var>1,2,\\dots,N</var> と番号がつけられた <var>N</var> 頂点の重み付き完全グラフがあります。<var>i\\lt j</var> なる頂点の組 <var>i,j</var> について、頂点 <var>i</var> と頂点 <var>j</var> を結ぶ辺の重みは <var>C_{i,j}</var> です。</p>\n<p><var>Q</var> 個のクエリが与えられます。<var>i</var> 番目のクエリでは <var>K+1</var> 以上 <var>N</var> 以下の相異なる整数の組 <var>s_i,t_i</var> が与えられるので、以下の問題を解いてください。</p>\n<blockquote>\n<p>このグラフから <var>0</var> 個以上好きな個数辺と頂点を取り除いてできる<strong>連結な</strong>グラフのうち、頂点 <var>1,2,\\dots,K,s_i,t_i</var> をすべて含むようなものを<strong>良いグラフ</strong>とよびます。</p>\n<p>良いグラフの<strong>コスト</strong>を、グラフに含まれる辺の重みの総和とします。</p>\n<p>良いグラフのコストの最小値を求めてください。</p>\n</blockquote>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>3\\leq N\\leq 80</var></li>\n<li><var>1\\leq K\\leq \\min(N-2,\\textcolor{red}{8})</var></li>\n<li><var>0\\leq C_{i,j}\\leq 10^9</var> <var>(1\\leq i,j\\leq N,i\\ne j)</var></li>\n<li><var>C_{i,j}=C_{j,i}</var> <var>(1\\leq i,j\\leq N,i\\ne j)</var></li>\n<li><var>C_{i,i}=0</var> <var>(1\\leq i\\leq N)</var></li>\n<li><var>1\\leq Q\\leq 5000</var></li>\n<li><var>K+1\\leq s_i,t_i\\leq N</var> <var>(1\\leq i\\leq Q)</var></li>\n<li><var>s_i\\ne t_i</var> <var>(1\\leq i\\leq Q)</var></li>\n<li>入力はすべて整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>K</var>\n<var>C_{1,1}</var> <var>C_{1,2}</var> <var>\\dots</var> <var>C_{1,N}</var>\n<var>C_{2,1}</var> <var>C_{2,2}</var> <var>\\dots</var> <var>C_{2,N}</var>\n<var>\\vdots</var>\n<var>C_{N,1}</var> <var>C_{N,2}</var> <var>\\dots</var> <var>C_{N,N}</var>\n<var>Q</var>\n<var>s_1</var> <var>t_1</var>\n<var>s_2</var> <var>t_2</var>\n<var>\\vdots</var>\n<var>s_Q</var> <var>t_Q</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>Q</var> 行出力せよ。</p>\n<p><var>i</var> 行目には、<var>i</var> 番目のクエリの答えを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5 2\n0 395 395 1 1\n395 0 1 395 1\n395 1 0 395 1\n1 395 395 0 1\n1 1 1 1 0\n3\n3 4\n3 5\n4 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>4\n3\n3\n</pre>\n<p><var>i</var> 番目の頂点と <var>j</var> 番目の頂点を結ぶ辺を辺 <var>i-j</var> と表記します。</p>\n<p><var>1</var> 番目のクエリについて、以下の頂点と辺を残しそれ以外を消すのが最適で、このときのグラフのコストは <var>4</var> です。</p>\n<ul>\n<li>頂点 <var>1,2,3,4,5</var></li>\n<li>辺 <var>1-4,2-3,3-5,4-5</var></li>\n</ul>\n<p><var>2</var> 番目のクエリについて、以下の頂点と辺を残しそれ以外を消すのが最適で、このときのグラフのコストは <var>3</var> です。</p>\n<ul>\n<li>頂点 <var>1,2,3,5</var></li>\n<li>辺 <var>1-5,2-3,3-5</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>9 5\n0 344670307 744280520 967824729 322288793 152036485 628902494 596982638 853214705\n344670307 0 249168130 769431650 532405020 981520310 755031424 86416231 284114341\n744280520 249168130 0 80707350 256358888 620411718 713892371 272961036 836365490\n967824729 769431650 80707350 0 45539861 298766521 722757772 623807668 366719378\n322288793 532405020 256358888 45539861 0 361324668 69837030 222135106 935147464\n152036485 981520310 620411718 298766521 361324668 0 486834509 225447688 859904884\n628902494 755031424 713892371 722757772 69837030 486834509 0 434140395 490910900\n596982638 86416231 272961036 623807668 222135106 225447688 434140395 0 22078599\n853214705 284114341 836365490 366719378 935147464 859904884 490910900 22078599 0\n20\n9 7\n8 9\n9 8\n7 6\n9 8\n8 9\n9 7\n7 8\n7 8\n6 9\n9 8\n9 6\n8 6\n8 9\n6 8\n8 7\n7 6\n8 9\n7 6\n9 6\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>849002970\n779165940\n779165940\n882119751\n779165940\n779165940\n849002970\n826924371\n826924371\n834361320\n779165940\n834361320\n812282721\n779165940\n812282721\n826924371\n882119751\n779165940\n882119751\n834361320\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>625</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given positive integers <var>N, K</var>, and an <var>N \\times N</var> matrix <var>C=(C_{i,j})</var> <var>(1\\leq i,j\\leq N)</var>. It is guaranteed that <var>C_{i,i} = 0</var> and <var>C_{i,j} = C_{j,i}</var>.</p>\n<p>There is a weighted complete graph with <var>N</var> vertices labeled <var>1,2,\\dots,N</var>. For each pair of vertices <var>i</var> and <var>j</var> with <var>i\\lt j</var>, the weight of the edge connecting vertices <var>i</var> and <var>j</var> is <var>C_{i,j}</var>.</p>\n<p>You have <var>Q</var> queries. In the <var>i</var>-th query, you are given a pair of distinct integers <var>s_i</var> and <var>t_i</var> (both between <var>K+1</var> and <var>N</var>, inclusive), for which you must solve the following problem.</p>\n<blockquote>\n<p>A <strong>good graph</strong> is a <strong>connected</strong> graph containing all of the vertices <var>1,2,\\dots,K,s_i,t_i</var> obtained by removing any number of edges and vertices (possibly zero) from the graph above.</p>\n<p>The <strong>cost</strong> of a good graph is the sum of the weights of its edges.</p>\n<p>Find the minimum possible cost of a good graph.</p>\n</blockquote>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>3 \\leq N \\leq 80</var></li>\n<li><var>1\\leq K\\leq \\min(N-2,\\textcolor{red}{8})</var></li>\n<li><var>0 \\leq C_{i,j} \\leq 10^9 \\ (1 \\leq i,j \\leq N, i \\ne j)</var></li>\n<li><var>C_{i,j} = C_{j,i} \\ (1 \\leq i,j \\leq N, i \\ne j)</var></li>\n<li><var>C_{i,i} = 0 \\ (1 \\leq i \\leq N)</var></li>\n<li><var>1 \\leq Q \\leq 5000</var></li>\n<li><var>K+1 \\leq s_i, t_i \\leq N \\ (1 \\leq i \\leq Q)</var></li>\n<li><var>s_i \\ne t_i \\ (1 \\leq i \\leq Q)</var></li>\n<li>All input values are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>K</var>\n<var>C_{1,1}</var> <var>C_{1,2}</var> <var>\\dots</var> <var>C_{1,N}</var>\n<var>C_{2,1}</var> <var>C_{2,2}</var> <var>\\dots</var> <var>C_{2,N}</var>\n<var>\\vdots</var>\n<var>C_{N,1}</var> <var>C_{N,2}</var> <var>\\dots</var> <var>C_{N,N}</var>\n<var>Q</var>\n<var>s_1</var> <var>t_1</var>\n<var>s_2</var> <var>t_2</var>\n<var>\\vdots</var>\n<var>s_Q</var> <var>t_Q</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print <var>Q</var> lines.</p>\n<p>The <var>i</var>-th line should contain the answer for the <var>i</var>-th query.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5 2\n0 395 395 1 1\n395 0 1 395 1\n395 1 0 395 1\n1 395 395 0 1\n1 1 1 1 0\n3\n3 4\n3 5\n4 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>4\n3\n3\n</pre>\n<p>Let “edge <var>i-j</var>” denote the edge connecting vertices <var>i</var> and <var>j</var>.</p>\n<p>For the first query, it is optimal to keep the following vertices and edges, and remove all others. The cost is <var>4</var>.</p>\n<ul>\n<li>Vertices <var>1,2,3,4,5</var></li>\n<li>Edges <var>1-4,2-3,3-5,4-5</var></li>\n</ul>\n<p>For the second query, it is optimal to keep the following vertices and edges, and remove all others. The cost is <var>3</var>.</p>\n<ul>\n<li>Vertices <var>1,2,3,5</var></li>\n<li>Edges <var>1-5,2-3,3-5</var></li>\n</ul></section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>9 5\n0 344670307 744280520 967824729 322288793 152036485 628902494 596982638 853214705\n344670307 0 249168130 769431650 532405020 981520310 755031424 86416231 284114341\n744280520 249168130 0 80707350 256358888 620411718 713892371 272961036 836365490\n967824729 769431650 80707350 0 45539861 298766521 722757772 623807668 366719378\n322288793 532405020 256358888 45539861 0 361324668 69837030 222135106 935147464\n152036485 981520310 620411718 298766521 361324668 0 486834509 225447688 859904884\n628902494 755031424 713892371 722757772 69837030 486834509 0 434140395 490910900\n596982638 86416231 272961036 623807668 222135106 225447688 434140395 0 22078599\n853214705 284114341 836365490 366719378 935147464 859904884 490910900 22078599 0\n20\n9 7\n8 9\n9 8\n7 6\n9 8\n8 9\n9 7\n7 8\n7 8\n6 9\n9 8\n9 6\n8 6\n8 9\n6 8\n8 7\n7 6\n8 9\n7 6\n9 6\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>849002970\n779165940\n779165940\n882119751\n779165940\n779165940\n849002970\n826924371\n826924371\n834361320\n779165940\n834361320\n812282721\n779165940\n812282721\n826924371\n882119751\n779165940\n882119751\n834361320\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc395/tasks/abc395_g"}