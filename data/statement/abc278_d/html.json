{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>400</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>長さ <var>N</var> の数列 <var>A = (A_1, A_2, \\dots, A_N)</var> が与えられます。  </p>\n<p><var>Q</var> 個のクエリが与えられるので、順番にすべて処理してください。\n<var>q</var> 番目 <var>(1\\leq q\\leq Q)</var> のクエリは以下の <var>3</var> つのいずれかの形式で、それぞれ次のようなクエリを表します。</p>\n<ul>\n<li><var>1\\ x _ q</var> ： <var>A</var> のすべての要素に <var>x _ q</var> を代入する。</li>\n<li><var>2\\ i _ q\\ x _ q</var> ： <var>A _ {i _ q}</var> に <var>x _ q</var> を加える。</li>\n<li><var>3\\ i _ q</var> ： <var>A _ {i _ q}</var> の値を出力する。</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq N \\leq 2\\times10^5</var></li>\n<li><var>1 \\leq Q \\leq 2\\times10^5</var></li>\n<li><var>0 \\leq A _ i \\leq 10^9\\ (1\\leq i\\leq N)</var></li>\n<li><var>q</var> 番目 <var>(1\\leq q\\leq Q)</var> のクエリが <var>2</var> 番目もしくは <var>3</var> 番目の形式のとき、<var>1 \\leq i _ q \\leq N</var></li>\n<li><var>q</var> 番目 <var>(1\\leq q\\leq Q)</var> のクエリが <var>1</var> 番目もしくは <var>2</var> 番目の形式のとき、<var>0 \\leq x _ q \\leq 10^9</var></li>\n<li><var>3</var> 番目の形式のクエリが存在する</li>\n<li>入力される値はすべて整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>A_1</var> <var>A_2</var> <var>\\dots</var> <var>A_N</var>\n<var>Q</var>\n<var>\\operatorname{query}_1</var>\n<var>\\operatorname{query}_2</var>\n<var>\\vdots</var>\n<var>\\operatorname{query}_Q</var>\n</pre>\n<p>ただし、<var>\\operatorname{query}_q</var> は <var>q</var> 番目のクエリであり、<code>1 x</code>, <code>2 i x</code>, <code>3 i</code> の形式のいずれかで与えられる。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>\\operatorname{query}_q</var> が <var>3</var> 番目の形式であるような <var>q\\ (1\\leq q\\leq Q)</var> の個数を <var>X</var> として、<var>X</var> 行出力せよ。\n<var>j\\ (1\\leq j\\leq X)</var> 行目にはそのようなクエリのうち <var>j</var> 番目のクエリに対する答えを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5\n3 1 4 1 5\n6\n3 2\n2 3 4\n3 3\n1 1\n2 3 4\n3 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1\n8\n5\n</pre>\n<p>はじめ、<var>A=(3,1,4,1,5)</var> です。\nそれぞれのクエリでは、以下のような処理が行われます。</p>\n<ul>\n<li><var>A_2=1</var> なので、<var>1</var> を出力します。</li>\n<li><var>A_3</var> に <var>4</var> を加えます。<var>A=(3,1,8,1,5)</var> となります。</li>\n<li><var>A_3=8</var> なので、<var>8</var> を出力します。</li>\n<li><var>A</var> の要素すべてに <var>1</var> を代入します。<var>A=(1,1,1,1,1)</var> となります。</li>\n<li><var>A_3</var> に <var>4</var> を加えます。<var>A=(1,1,5,1,1)</var> となります。</li>\n<li><var>A_3=5</var> なので、<var>5</var> を出力します。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>1\n1000000000\n8\n2 1 1000000000\n2 1 1000000000\n2 1 1000000000\n2 1 1000000000\n2 1 1000000000\n2 1 1000000000\n2 1 1000000000\n3 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>8000000000\n</pre>\n<p><var>A</var> の要素の値が <var>32\\operatorname{bit}</var> 整数に収まらない可能性があることに注意してください。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>10\n1 8 4 15 7 5 7 5 8 0\n20\n2 7 0\n3 7\n3 8\n1 7\n3 3\n2 4 4\n2 4 9\n2 10 5\n1 10\n2 4 2\n1 10\n2 3 1\n2 8 11\n2 3 14\n2 1 9\n3 8\n3 8\n3 1\n2 6 5\n3 7\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>7\n5\n7\n21\n21\n19\n10\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>400</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a sequence <var>A = (A_1, A_2, \\dots, A_N)</var> of length <var>N</var>.</p>\n<p>Given <var>Q</var> queries, process all of them in order.\nThe <var>q</var>-th <var>(1\\leq q\\leq Q)</var> query is in one of the following three formats, which represents the following queries:</p>\n<ul>\n<li><var>1\\ x _ q</var>: assign <var>x_q</var> to every element of <var>A</var>.</li>\n<li><var>2\\ i _ q\\ x _ q</var>: add <var>x_q</var> to <var>A _ {i _ q}</var>.</li>\n<li><var>3\\ i _ q</var>: print the value of <var>A _ {i _ q}</var>.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N \\leq 2\\times10^5</var></li>\n<li><var>1 \\leq Q \\leq 2\\times10^5</var></li>\n<li><var>0 \\leq A _ i \\leq 10^9\\ (1\\leq i\\leq N)</var></li>\n<li>If the <var>q</var>-th <var>(1\\leq q\\leq Q)</var> query is in the second or third format, <var>1 \\leq i _ q \\leq N</var>.</li>\n<li>If the <var>q</var>-th <var>(1\\leq q\\leq Q)</var> query is in the first or second format, <var>0 \\leq x _ q \\leq 10^9</var>.</li>\n<li>There exists a query in the third format.</li>\n<li>All values in the input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>A_1</var> <var>A_2</var> <var>\\dots</var> <var>A_N</var>\n<var>Q</var>\n<var>\\operatorname{query}_1</var>\n<var>\\operatorname{query}_2</var>\n<var>\\vdots</var>\n<var>\\operatorname{query}_Q</var>\n</pre>\n<p>Here, <var>\\operatorname{query}_q</var> denotes the <var>q</var>-th query, which is in one of following formats: <code>1 x</code>, <code>2 i x</code>, and <code>3 i</code>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print <var>X</var> lines, where <var>X</var> is the number of <var>q</var>'s <var>(1\\leq q\\leq Q)</var> such that <var>\\operatorname{query}_q</var> is in the third format.\nThe <var>j</var>-th <var>(1\\leq j\\leq X)</var> line should contain the answer to the <var>j</var>-th such query.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5\n3 1 4 1 5\n6\n3 2\n2 3 4\n3 3\n1 1\n2 3 4\n3 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1\n8\n5\n</pre>\n<p>Initially, <var>A=(3,1,4,1,5)</var>.\nThe queries are processed as follows:</p>\n<ul>\n<li><var>A_2=1</var>, so print <var>1</var>.</li>\n<li>Add <var>4</var> to <var>A_3</var>, making <var>A=(3,1,8,1,5)</var>.</li>\n<li><var>A_3=8</var>, so print <var>8</var>.</li>\n<li>Assign <var>1</var> to every element of <var>A</var>, making <var>A=(1,1,1,1,1)</var>.</li>\n<li>Add <var>4</var> to <var>A_3</var>, making <var>A=(1,1,5,1,1)</var>.</li>\n<li><var>A_3=5</var>, so print <var>5</var>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>1\n1000000000\n8\n2 1 1000000000\n2 1 1000000000\n2 1 1000000000\n2 1 1000000000\n2 1 1000000000\n2 1 1000000000\n2 1 1000000000\n3 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>8000000000\n</pre>\n<p>Note that the elements of <var>A</var> may not fit into a <var>32</var>-bit integer type.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>10\n1 8 4 15 7 5 7 5 8 0\n20\n2 7 0\n3 7\n3 8\n1 7\n3 3\n2 4 4\n2 4 9\n2 10 5\n1 10\n2 4 2\n1 10\n2 3 1\n2 8 11\n2 3 14\n2 1 9\n3 8\n3 8\n3 1\n2 6 5\n3 7\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>7\n5\n7\n21\n21\n19\n10\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc278/tasks/abc278_d"}