{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>150</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3>\n<p>\n  縦 <var>H</var> マス横 <var>W</var> マスのグリッドのいくつかのマスにヤギがいる。\n  ふわりは、ヤギのいないいくつかのマスに柵を設置して、どのヤギも、移動をくりかえしてグリッドの外に出ることができないようにしたい。\n  ヤギは上下左右の隣接する柵のないマスに移動することができる。\n  ヤギがグリッドの端の行や列にいるときは、グリッドの外に移動することができる。\n  柵の設置が終わるまでヤギは動かないとする。\n  目的を達成するのに必要な柵の最小個数を求めよ。\n</p>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n\n<h3>制約</h3>\n<ul>\n  <li> <var>1 \\leq H \\leq 100</var> </li>\n  <li> <var>1 \\leq W \\leq 100</var> </li>\n  <li> グリッドの少なくとも 1 マスにはヤギが存在する。 </li>\n</ul>\n\n</section>\n</div>\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n\n<section>\n<h3>入力</h3>\n<p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>H</var> <var>W</var>\n<var>S_1</var>\n:\n<var>S_H</var>\n</pre>\n<p><var>S_i</var> <var>(1 \\leq i \\leq H)</var> の <var>j</var> <var>(1 \\leq j \\leq W)</var> 文字目はグリッドの上から <var>i</var> 行目、左から <var>j</var> 列目の状態を表す。\n  <code>.</code> のとき、このマスには何もないことを表す。\n  <code>X</code> のとき、このマスにヤギがいることを表す。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3>\n<p>\n  設置する必要のある柵の最小個数を一行で出力せよ。いくつ柵を設置してもグリッドの外に出ることができるヤギが存在するときは <var>-1</var> を出力せよ。\n</p>\n\n</section>\n</div>\n</div>\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例1</h3>\n<pre>4 5\n.....\n.....\n..X..\n.....\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例1</h3>\n<pre>4\n</pre>\n<p><var>3</var> 行目の <var>2</var> 列目と <var>2</var> 行目の <var>3</var> 列目と <var>3</var> 行目の <var>4</var> 列目と <var>4</var> 行目の <var>3</var> 列目に設置すればよい。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>入力例2</h3>\n<pre>2 2\n..\n.X\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例2</h3>\n<pre>-1\n</pre>\n<p>この例ではどのようにしてもヤギはグリッドの外へ出ることができる。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>入力例3</h3>\n<pre>6 6\n......\n......\n..X...\n.X..X.\n..X...\n......\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例3</h3>\n<pre>10\n</pre>\n</section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>150</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3>\n<p>\n  There are some goats on a grid with <var>H</var> rows and <var>W</var> columns. \n  Alice wants to put some fences at some cells where goats do not exist so that no goat can get outside the grid. \n  Goats can move in the four directions, that is, up, down, right and left.\n  Goats can not move onto the cells where fences are placed. \n  If a goat exists at one of the outermost cells in the grid, it can move outside.\n  Goats do not move until all fences are placed.  \n  Find the minimum number of fences to be placed. \n</p>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n\n<h3>Constraints</h3>\n<ul>\n  <li> <var>1 \\leq H \\leq 100</var> </li>\n  <li> <var>1 \\leq W \\leq 100</var> </li>\n  <li> There is at least one goat on the given grid. </li>\n</ul>\n\n</section>\n</div>\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n\n<section>\n<h3>Input</h3>\n<p>The input is given from the Standart Input in the following format:</p>\n<pre><var>H</var> <var>W</var>\n<var>S_1</var>\n:\n<var>S_H</var>\n</pre>\n<p>\n  The <var>j</var>-th <var>(1 \\leq j \\leq W)</var> character in <var>S_i</var> <var>(1 \\leq i \\leq H)</var> represents \n  whether a goat exists at the cell located at row <var>i</var> and column <var>j</var>. \n  Character <code>.</code> represents there is no goat, and <code>X</code> represents there is one goat at the cell. </p>\n<p></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3>\n<p>\n  Print the minimun number of fences to be placed. If there is no way to keep all the goats inside the grid, print <var>-1</var>.\n</p>\n\n</section>\n</div>\n</div>\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3>\n<pre>4 5\n.....\n.....\n..X..\n.....\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3>\n<pre>4\n</pre>\n<p>\n  The optimum answer is to put fences at the cells located at \n  row <var>3</var> and column <var>2</var>, \n  row <var>2</var> and column <var>3</var>, \n  row <var>3</var> and column <var>4</var>, \n  and row <var>4</var> and column <var>3</var>. \n</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3>\n<pre>2 2\n..\n.X\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3>\n<pre>-1\n</pre>\n<p>In this case, there is no way to keep the goats inside the grid. </p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3>\n<pre>6 6\n......\n......\n..X...\n.X..X.\n..X...\n......\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3>\n<pre>10\n</pre>\n</section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/kupc2016/tasks/kupc2016_e"}