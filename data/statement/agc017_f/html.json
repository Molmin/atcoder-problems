{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1600</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>下図のように，<var>1</var> 辺が <var>N</var> 個の点からなる正三角形状に，<var>N(N+1)/2</var> 個の点が並んでいます．\n上から <var>i</var> 段目の左から <var>j</var> 番目の点を <var>(i, j)</var> で表すことにします(<var>1 \\leq i \\leq N</var>, <var>1 \\leq j \\leq i</var>)．\nまた，<var>(i+1, j)</var> を <var>(i, j)</var> のすぐ左下の点，<var>(i+1, j+1)</var> を <var>(i, j)</var> のすぐ右下の点と呼ぶことにします．</p>\n<p><img alt=\"\" src=\"https://atcoder.jp/img/agc017/8d354fb1a389a0aa5b64ba93f6ca7801.png\"></p>\n<p>高橋君は，この点を結んで，<var>M</var> 個の折れ線 <var>1, 2, ..., M</var> を描くことにしました．\n各折れ線は，<var>(1, 1)</var> から始めて，「現在いる点のすぐ左下の点かすぐ右下の点を選び，現在いる点と選んだ点を直線で結んだのち，選んだ点へ移動する」\nことを <var>N-1</var> 回繰り返すことで得られます．\nすなわち，ある <var>X_{i,1}, ..., X_{i,N}</var> が存在して，次が成り立ちます：</p>\n<ul>\n<li>折れ線 <var>i</var> は，<var>N</var> 個の点 <var>(1, X_{i,1}), (2, X_{i,2}), ..., (N, X_{i,N})</var> をこの順で結んでいる．</li>\n<li><var>j=1, 2, ..., N-1</var> に対して，<var>X_{i,j+1} = X_{i,j}</var> または <var>X_{i,j+1} = X_{i,j}+1</var> が成り立つ．</li>\n</ul>\n<p>高橋君は，折れ線 <var>i+1</var> が折れ線 <var>i</var> の左に来ることはないように折れ線を描きたいです．\nつまり，<var>j=1, 2, ..., N</var> に対して，<var>X_{1,j} \\leq X_{2,j} \\leq ... \\leq X_{M,j}</var> が成り立ちます．</p>\n<p>また，高橋君は，折れ線の曲がり方について <var>K</var> 個の条件を満たすように折れ線を描かなければなりません．\n<var>i</var> 番目の条件は <var>(A_i, B_i, C_i)</var> で表され，これは次を意味します：</p>\n<ul>\n<li><var>C_i=0</var> のときは，折れ線 <var>A_i</var> を描くとき，<var>B_i</var> 回目の移動においては，その時いる点のすぐ左下の点を選ぶ．</li>\n<li><var>C_i=1</var> のときは，折れ線 <var>A_i</var> を描くとき，<var>B_i</var> 回目の移動においては，その時いる点のすぐ右下の点を選ぶ．</li>\n</ul>\n<p>すなわち，<var>X_{A_i, {B_i}+1} = X_{A_i, B_i} + C_i</var> を意味します．</p>\n<p>高橋君が <var>M</var> 個の折れ線を描く方法が何通りあるかを mod <var>1000000007</var> で求めてください．</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>注意</h3><p>提出を行う前に，「コードテスト」を利用して実行時間を計測することを強く推奨する．</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq N \\leq 20</var></li>\n<li><var>1 \\leq M \\leq 20</var></li>\n<li><var>0 \\leq K \\leq (N-1)M</var></li>\n<li><var>1 \\leq A_i \\leq M</var></li>\n<li><var>1 \\leq B_i \\leq N-1</var></li>\n<li><var>C_i = 0,1</var></li>\n<li><var>(A_i, B_i)</var> として同じ組は複数回与えられない．</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var> <var>K</var>\n<var>A_1</var> <var>B_1</var> <var>C_1</var>\n<var>A_2</var> <var>B_2</var> <var>C_2</var>\n:\n<var>A_K</var> <var>B_K</var> <var>C_K</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>高橋君が <var>M</var> 個の折れ線を描く方法は何通りあるかを mod <var>1000000007</var> で出力せよ．</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 2 1\n1 2 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>6\n</pre>\n\n<p>下図に示すように，<var>6</var> 通りの描き方があります．ただし，赤線は折れ線 <var>1</var>，緑線は折れ線 <var>2</var> を表します：</p>\n<p><img alt=\"\" src=\"https://atcoder.jp/img/agc017/75921b6e5a59ab17b4c07ada848b9f14.png\"></p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>3 2 2\n1 1 1\n2 1 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>0\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>5 4 2\n1 3 1\n4 2 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>172\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 4</h3><pre>20 20 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 4</h3><pre>881396682\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1600</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There are <var>N(N+1)/2</var> dots arranged to form an equilateral triangle whose sides consist of <var>N</var> dots, as shown below.\nThe <var>j</var>-th dot from the left in the <var>i</var>-th row from the top is denoted by <var>(i, j)</var> (<var>1 \\leq i \\leq N</var>, <var>1 \\leq j \\leq i</var>).\nAlso, we will call <var>(i+1, j)</var> immediately lower-left to <var>(i, j)</var>, and <var>(i+1, j+1)</var> immediately lower-right to <var>(i, j)</var>.</p>\n<p><img alt=\"\" src=\"https://atcoder.jp/img/agc017/8d354fb1a389a0aa5b64ba93f6ca7801.png\"></p>\n<p>Takahashi is drawing <var>M</var> polygonal lines <var>L_1, L_2, ..., L_M</var> by connecting these dots.\nEach <var>L_i</var> starts at <var>(1, 1)</var>, and visits the dot that is immediately lower-left or lower-right to the current dots <var>N-1</var> times.\nMore formally, there exist <var>X_{i,1}, ..., X_{i,N}</var> such that:</p>\n<ul>\n<li><var>L_i</var> connects the <var>N</var> points <var>(1, X_{i,1}), (2, X_{i,2}), ..., (N, X_{i,N})</var>, in this order.</li>\n<li>For each <var>j=1, 2, ..., N-1</var>, either <var>X_{i,j+1} = X_{i,j}</var> or <var>X_{i,j+1} = X_{i,j}+1</var> holds.</li>\n</ul>\n<p>Takahashi would like to draw these lines so that no part of <var>L_{i+1}</var> is to the left of <var>L_{i}</var>.\nThat is, for each <var>j=1, 2, ..., N</var>, <var>X_{1,j} \\leq X_{2,j} \\leq ... \\leq X_{M,j}</var> must hold.</p>\n<p>Additionally, there are <var>K</var> conditions on the shape of the lines that must be followed.\nThe <var>i</var>-th condition is denoted by <var>(A_i, B_i, C_i)</var>, which means:</p>\n<ul>\n<li>If <var>C_i=0</var>, <var>L_{A_i}</var> must visit the immediately lower-left dot for the <var>B_i</var>-th move.</li>\n<li>If <var>C_i=1</var>, <var>L_{A_i}</var> must visit the immediately lower-right dot for the <var>B_i</var>-th move.</li>\n</ul>\n<p>That is, <var>X_{A_i, {B_i}+1} = X_{A_i, B_i} + C_i</var> must hold.</p>\n<p>In how many ways can Takahashi draw <var>M</var> polygonal lines? Find the count modulo <var>1000000007</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Notes</h3><p>Before submission, it is strongly recommended to measure the execution time of your code using \"Custom Test\".</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N \\leq 20</var></li>\n<li><var>1 \\leq M \\leq 20</var></li>\n<li><var>0 \\leq K \\leq (N-1)M</var></li>\n<li><var>1 \\leq A_i \\leq M</var></li>\n<li><var>1 \\leq B_i \\leq N-1</var></li>\n<li><var>C_i = 0</var> or <var>1</var></li>\n<li>No pair appears more than once as <var>(A_i, B_i)</var>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var> <var>K</var>\n<var>A_1</var> <var>B_1</var> <var>C_1</var>\n<var>A_2</var> <var>B_2</var> <var>C_2</var>\n:\n<var>A_K</var> <var>B_K</var> <var>C_K</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the number of ways for Takahashi to draw <var>M</var> polygonal lines, modulo <var>1000000007</var>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 2 1\n1 2 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>6\n</pre>\n\n<p>There are six ways to draw lines, as shown below. Here, red lines represent <var>L_1</var>, and green lines represent <var>L_2</var>.</p>\n<p><img alt=\"\" src=\"https://atcoder.jp/img/agc017/75921b6e5a59ab17b4c07ada848b9f14.png\"></p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>3 2 2\n1 1 1\n2 1 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>0\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>5 4 2\n1 3 1\n4 2 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>172\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 4</h3><pre>20 20 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 4</h3><pre>881396682\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc017/tasks/agc017_f"}