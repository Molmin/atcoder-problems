{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>600</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>一直線上に <var>N</var> 個の点があり、順に <var>1</var> から <var>N</var> までの番号がついています。</p>\n<p>高橋君はこれらの点を頂点として無向グラフを作ることにしました。\nはじめはグラフに辺はないですが、<var>M</var> 回の操作によって辺を追加します。\n<var>i</var> 回目の操作では次のように辺を追加します。</p>\n<ul>\n<li><var>1</var> 以上 <var>N</var> 以下の整数 <var>L_i</var>, <var>R_i</var> 及び正整数 <var>C_i</var> を用いる。\n  <var>L_i ≦ s &lt; t ≦ R_i</var> なる整数の組 <var>(s,t)</var> すべてに対し、頂点 <var>s</var> と頂点 <var>t</var> の間に長さ <var>C_i</var> の辺を追加する。</li>\n</ul>\n<p>ただし、<var>L_1,...,L_M</var>, <var>R_1,...,R_M</var>, <var>C_1,...,C_M</var> はすべて入力で与えられます。</p>\n<p>高橋君は最終的に得られたグラフ上で最短路問題を解きたいです。得られたグラフ上での頂点 <var>1</var> から頂点 <var>N</var> までの最短路の長さを求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 ≦ N ≦ 10^5</var></li>\n<li><var>1 ≦ M ≦ 10^5</var></li>\n<li><var>1 ≦ L_i &lt; R_i ≦ N</var></li>\n<li><var>1 ≦ C_i ≦ 10^9</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>L_1</var> <var>R_1</var> <var>C_1</var>\n<var>:</var>\n<var>L_M</var> <var>R_M</var> <var>C_M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>頂点 <var>1</var> から頂点 <var>N</var> までの最短路の長さを出力せよ。\nただし、最短路が存在しない場合は <code>-1</code> を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>4 3\n1 3 2\n2 4 3\n1 4 6\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>5\n</pre>\n\n<p>頂点 <var>1</var> と頂点 <var>2</var> の間に長さ <var>2</var> の辺があり、頂点 <var>2</var> と頂点 <var>4</var> の間に長さ <var>3</var> の辺があるので、頂点 <var>1</var> と頂点 <var>4</var> の間に長さ <var>5</var> のパスが存在します。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>4 2\n1 2 1\n3 4 2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>-1\n</pre>\n\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>10 7\n1 5 18\n3 4 8\n1 3 5\n4 7 10\n5 9 8\n6 10 5\n8 10 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>28\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>600</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>We have <var>N</var> points numbered <var>1</var> to <var>N</var> arranged in a line in this order.</p>\n<p>Takahashi decides to make an undirected graph, using these points as the vertices.\nIn the beginning, the graph has no edge. Takahashi will do <var>M</var> operations to add edges in this graph.\nThe <var>i</var>-th operation is as follows:</p>\n<ul>\n<li>The operation uses integers <var>L_i</var> and <var>R_i</var> between <var>1</var> and <var>N</var> (inclusive), and a positive integer <var>C_i</var>. For every pair of integers <var>(s, t)</var> such that <var>L_i \\leq s &lt; t \\leq R_i</var>, add an edge of length <var>C_i</var> between Vertex <var>s</var> and Vertex <var>t</var>.</li>\n</ul>\n<p>The integers <var>L_1, ..., L_M</var>, <var>R_1, ..., R_M</var>, <var>C_1, ..., C_M</var> are all given as input.</p>\n<p>Takahashi wants to solve the shortest path problem in the final graph obtained. Find the length of the shortest path from Vertex <var>1</var> to Vertex <var>N</var> in the final graph.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 10^5</var></li>\n<li><var>1 \\leq M \\leq 10^5</var></li>\n<li><var>1 \\leq L_i &lt; R_i \\leq N</var></li>\n<li><var>1 \\leq C_i \\leq 10^9</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>L_1</var> <var>R_1</var> <var>C_1</var>\n<var>:</var>\n<var>L_M</var> <var>R_M</var> <var>C_M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the length of the shortest path from Vertex <var>1</var> to Vertex <var>N</var> in the final graph.\nIf there is no shortest path, print <code>-1</code> instead.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>4 3\n1 3 2\n2 4 3\n1 4 6\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>5\n</pre>\n\n<p>We have an edge of length <var>2</var> between Vertex <var>1</var> and Vertex <var>2</var>, and an edge of length <var>3</var> between Vertex <var>2</var> and Vertex <var>4</var>, so there is a path of length <var>5</var> between Vertex <var>1</var> and Vertex <var>4</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>4 2\n1 2 1\n3 4 2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>-1\n</pre>\n\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>10 7\n1 5 18\n3 4 8\n1 3 5\n4 7 10\n5 9 8\n6 10 5\n8 10 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>28\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/nikkei2019-2-qual/tasks/nikkei2019_2_qual_d"}