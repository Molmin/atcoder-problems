{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>800</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>整数 <var>N,P</var> が与えられます．</p>\n<p>頂点に <var>1</var> から <var>N</var> の番号が付いた <var>N</var> 頂点 <var>N</var> 辺のグラフがあります．<var>i</var> 番目の辺は頂点 <var>i</var> と頂点 <var>i+1</var> を双方向に結んでいます．ここで頂点 <var>N+1</var> は頂点 <var>1</var> を意味します．</p>\n<p>以下のアルゴリズムを行い，長さ <var>N</var> の数列 <var>D=(D_1,D_2,\\ldots,D_N)</var> を得ます．</p>\n<ul>\n<li>\n<p>長さ <var>N</var> の整数列 <var>D</var> を <var>D=(D_1,\\ldots,D_N)=(-1,\\ldots,-1)</var> で定める．また，数のペアの列 <var>Q</var> を <var>Q=((1,0))</var> で定める．<var>Q</var> が空でない限り，以下の処理を繰り返す．</p>\n<ul>\n<li><var>Q</var> の先頭の要素を <var>(v,d)</var> とする．先頭の要素を削除する．</li>\n<li>\n<p><var>D_v = -1</var> の場合，<var>D_v := d</var> とし，頂点 <var>v</var> に隣接して <var>D_x=-1</var> を満たすような各頂点 <var>x</var> に対して以下の処理を行う．ただし条件を満たす <var>x</var> が複数存在する場合，頂点番号の小さい順に処理を行う．</p>\n<ol>\n<li>確率 <var>\\frac{P}{100}</var> で <var>Q</var> の<strong>先頭</strong>に <var>(x,d+1)</var> を追加する．</li>\n<li><var>Q</var> の先頭への <var>(x,d+1)</var> の追加を行わなかった場合，<var>Q</var> の<strong>末尾</strong>に <var>(x,d+1)</var> を追加する．</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<p>最終的に得られる <var>D</var> の要素の総和の期待値を <var>\\text{mod } 998244353</var> で求めてください．</p>\n<p><var>T</var> 個のテストケースが与えられるので，それぞれについて答えてください．</p>\n<details>\n    <summary>\n        期待値 <var>\\text{mod } 998244353</var> の定義\n    </summary>\n    求める期待値は必ず有理数になることが証明できます．\nまた，この問題の制約下では，その値を既約分数 <var>\\frac{P}{Q}</var> で表したときに <var>Q</var> が <var>998244353</var> で割り切れないことが保証されます．  \nこのとき <var>R\\times Q \\equiv P\\pmod{998244353}</var> を満たすような <var>0</var> 以上 <var>998244352</var> 以下の整数 <var>R</var> が一意に定まります．この <var>R</var> を 答えてください．\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq T \\leq  10^4</var></li>\n<li><var>3 \\leq N \\leq 10^{18}</var></li>\n<li><var>1\\leq P \\leq 99</var></li>\n<li>入力される数値は全て整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる．</p>\n<pre><var>T</var>\n<var>\\mathrm{case}_1</var>\n<var>\\vdots</var>\n<var>\\mathrm{case}_T</var>\n</pre>\n\n<p>各ケースは以下の形式で与えられる．</p>\n<pre><var>N</var> <var>P</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>T</var> 行出力せよ．<var>i</var> 行目 <var>(1 \\leq i \\leq T)</var> には， <var>i</var> 番目のテストケースの答えを出力せよ．</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3\n3 50\n4 1\n1000000000000000000 70\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>499122179\n595552585\n760296751\n</pre>\n\n<p><var>1</var> 番目のテストケースでは，例えば以下のようにアルゴリズムは動きます．</p>\n<ul>\n<li>はじめ，<var>D=(-1,-1,-1), Q=((1,0))</var> である．<var>Q</var> の先頭の要素 <var>(1,0)</var> を削除する．</li>\n<li><var>D_1 = -1</var> なので，<var>D_1 := 0</var> とする．頂点 <var>1</var> に隣接して <var>D_x= -1</var> を満たすような頂点 <var>x</var> は <var>2,3</var> が考えられる．</li>\n<li><var>Q</var> の先頭に <var>(2,1)</var> を追加する．<var>Q</var> の末尾に <var>(3,1)</var> を追加する．<var>Q=((2,1),(3,1))</var> となる．</li>\n<li><var>Q</var> の先頭の要素 <var>(2,1)</var> を削除する．</li>\n<li><var>D_2 = -1</var> なので，<var>D_2 := 1</var> とする．頂点 <var>2</var> に隣接して <var>D_x= -1</var> を満たすような頂点 <var>x</var> は <var>3</var> が考えられる．</li>\n<li><var>Q</var> の先頭に <var>(3,2)</var> を追加する．<var>Q=((3,2),(3,1))</var> となる．</li>\n<li><var>Q</var> の先頭の要素 <var>(3,2)</var> を削除する．</li>\n<li><var>D_3 = -1</var> なので，<var>D_3 := 2</var> とする．頂点 <var>3</var> に隣接して <var>D_x= -1</var> を満たすような頂点 <var>x</var> は存在しないので何もしない．</li>\n<li><var>Q</var> の先頭の要素 <var>(3,1)</var> を削除する．</li>\n<li><var>D_3 =2</var> なので何もしない．</li>\n<li><var>Q</var> が空になったので処理を終了する．</li>\n</ul>\n<p>この場合，最終的に <var>D=(0,1,2)</var> が得られます．アルゴリズムが上記の動作をする確率は <var>\\frac{1}{8}</var> であり，<var>D</var> の要素の総和の期待値は <var>\\frac{5}{2}</var> です．</p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score: <var>800</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given integers <var>N</var> and <var>P</var>.</p>\n<p>There is a graph with <var>N</var> vertices and <var>N</var> edges, where each vertex is labeled <var>1</var> to <var>N</var>. The <var>i</var>-th edge connects vertices <var>i</var> and <var>i+1</var> bidirectionally. Here, vertex <var>N+1</var> refers to vertex <var>1</var>.</p>\n<p>Perform the following algorithm to obtain a sequence <var>D=(D_1,D_2,\\ldots,D_N)</var> of length <var>N</var>:</p>\n<ul>\n<li>\n<p>Set an integer sequence <var>D</var> of length <var>N</var> to <var>D=(D_1,\\ldots,D_N)=(-1,\\ldots,-1)</var>. Also, set a sequence <var>Q</var> of number pairs to <var>Q=((1,0))</var>. Repeat the following process while <var>Q</var> is not empty:</p>\n<ul>\n<li>Let <var>(v,d)</var> be the first element of <var>Q</var>. Remove this element.</li>\n<li>\n<p>If <var>D_v = -1</var>, then set <var>D_v := d</var>, and for each vertex <var>x</var> adjacent to vertex <var>v</var> such that <var>D_x=-1</var>, perform the following process. If there are multiple such <var>x</var> that satisfy the condition, process them in ascending order of vertex number:</p>\n<ol>\n<li>With probability <var>\\frac{P}{100}</var>, add <var>(x,d+1)</var> to the <strong>front</strong> of <var>Q</var>.</li>\n<li>If <var>(x,d+1)</var> was not added to the front of <var>Q</var>, add it to the <strong>end</strong> of <var>Q</var>.</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<p>Find the expected value of the sum of the elements of the final sequence <var>D</var> obtained, modulo <var>998244353</var>.</p>\n<p>Solve each of the <var>T</var> test cases given.</p>\n<details>\n    <summary>\n        Definition of expected value <var>\\text{mod } 998244353</var>\n    </summary>\n    It can be proved that the expected value to be found is always a rational number.\nFurthermore, the constraints of this problem guarantee that if that value is expressed as an irreducible fraction <var>\\frac{P}{Q}</var>, then <var>Q</var> is not divisible by <var>998244353</var>.  \nHere, there is a unique integer <var>R</var> between <var>0</var> and <var>998244352</var>, inclusive, such that <var>R\\times Q \\equiv P\\pmod{998244353}</var>. Provide this <var>R</var> as the answer.\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq T \\leq  10^4</var></li>\n<li><var>3 \\leq N \\leq 10^{18}</var></li>\n<li><var>1\\leq P \\leq 99</var></li>\n<li>All input numbers are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>T</var>\n<var>\\mathrm{case}_1</var>\n<var>\\vdots</var>\n<var>\\mathrm{case}_T</var>\n</pre>\n\n<p>Each case is given in the following format:</p>\n<pre><var>N</var> <var>P</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print <var>T</var> lines. The <var>i</var>-th line <var>(1 \\leq i \\leq T)</var> should contain the answer for the <var>i</var>-th test case.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3\n3 50\n4 1\n1000000000000000000 70\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>499122179\n595552585\n760296751\n</pre>\n\n<p>In the first test case, the algorithm may operate as follows:</p>\n<ul>\n<li>Initially, <var>D=(-1,-1,-1)</var> and <var>Q=((1,0))</var>. Remove the first element <var>(1,0)</var> from <var>Q</var>.</li>\n<li><var>D_1 = -1</var>, so set <var>D_1 := 0</var>. The vertices <var>x</var> adjacent to vertex <var>1</var> such that <var>D_x= -1</var> are <var>2</var> and <var>3</var>.</li>\n<li>Add <var>(2,1)</var> to the front of <var>Q</var>. Add <var>(3,1)</var> to the end of <var>Q</var>. Now <var>Q=((2,1),(3,1))</var>.</li>\n<li>Remove the first element <var>(2,1)</var> from <var>Q</var>.</li>\n<li><var>D_2 = -1</var>, so set <var>D_2 := 1</var>. The vertex <var>x</var> adjacent to vertex <var>2</var> such that <var>D_x= -1</var> is <var>3</var>.</li>\n<li>Add <var>(3,2)</var> to the front of <var>Q</var>. Now <var>Q=((3,2),(3,1))</var>.</li>\n<li>Remove the first element <var>(3,2)</var> from <var>Q</var>.</li>\n<li><var>D_3 = -1</var>, so set <var>D_3 := 2</var>. There are no vertices <var>x</var> adjacent to vertex <var>3</var> such that <var>D_x= -1</var>, so do nothing.</li>\n<li>Remove the first element <var>(3,1)</var> from <var>Q</var>.</li>\n<li><var>D_3 =2</var>, so do nothing.</li>\n<li><var>Q</var> is now empty, so the process ends.</li>\n</ul>\n<p>In this case, the final sequence obtained is <var>D=(0,1,2)</var>. The probability that the algorithm operates as described above is <var>\\frac{1}{8}</var>, and the expected sum of the elements of <var>D</var> is <var>\\frac{5}{2}</var>.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc170/tasks/arc170_e"}