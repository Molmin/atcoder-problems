{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>700</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 項からなる数列があり、これから <var>Q</var> 個のクエリが与えられます。\n<var>i</var> 番目のクエリでは区間 <var>[L_i, R_i]</var> に対するクエリが与えられます（区間 <var>[a,b]</var> は <var>a</var> 以上 <var>b</var> 以下の整数からなる集合です）。</p>\n<p>あなたは、この問題に、下記の条件を満たす二分木を用いて答えます。ただし、以下の記述で <var>i,j,k</var> は整数を表します。</p>\n<ul>\n<li>各頂点は区間を持つ</li>\n<li>根となる頂点は区間 <var>[1, N]</var> を持つ</li>\n<li>区間 <var>[i, i]</var> を持つ頂点は葉である。また、葉が持つ区間は <var>[i,i]</var> と表される</li>\n<li>葉でない頂点にはちょうど <var>2</var> 個の子が存在する。また、葉でない頂点が持つ区間を <var>[i,j]</var> とすると、この頂点の子が持つ区間は <var>[i,k]</var> と <var>[k+1,j]</var> である（<var>i\\leq k&lt;j</var>）</li>\n</ul>\n<p>この二分木では区間 <var>[L,R]</var> に対するクエリが与えられると、以下の規則で再帰的に探索が行われます。</p>\n<ol>\n<li>はじめに、根が調査される</li>\n<li>ある頂点が調査されたとき、この頂点の持つ区間が <var>[L, R]</var> に含まれるならば、子孫は調査しない</li>\n<li>ある頂点が調査されたとき、この頂点の持つ区間と <var>[L, R]</var> が共通部分を持たないならば、子孫は調査しない</li>\n<li>ある頂点が調査されたとき、2,3 のどちらにも当てはまらなければ、子である頂点 <var>2</var> つを調査する（なお、葉である頂点は必ず 2,3 のどちらかに当てはまることが示せる）</li>\n</ol>\n<p><var>Q</var> 個のクエリに答える時、調査された頂点の深さ（根からの距離）の最大値を <var>d</var> 、深さ <var>d</var> の頂点が調査された回数の総和を <var>c</var> とします。ただし、一つのクエリで複数個の深さ <var>d</var> の頂点が調査された場合、および同じ頂点が複数のクエリで調査された場合にはそれぞれ複数回数えます。</p>\n<p>あなたは二分木を適切に設計し、<var>d</var> を最小にしたのち、その範囲内で <var>c</var> を最小にしたいと考えています。このときの <var>d</var> および <var>c</var> の値はいくつでしょうか。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2\\leq N \\leq 4000</var></li>\n<li><var>1\\leq Q \\leq 10^5</var></li>\n<li><var>1\\leq L_i \\leq R_i \\leq N</var> <var>(1\\leq i \\leq Q)</var></li>\n<li>入力される値はすべて整数である</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>Q</var>\n<var>L_1</var> <var>R_1</var>\n<var>L_2</var> <var>R_2</var>\n<var>\\vdots</var>\n<var>L_Q</var> <var>R_Q</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>題意の <var>d</var>, <var>c</var> をこの順に空白区切りで整数で出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>6 4\n2 3\n3 4\n2 4\n3 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>3 4\n</pre>\n<p>区間 <var>[1,6]</var> に対して、区間 <var>[2,3],[3,4],[2,4],[3,3]</var> に対するクエリが与えられています。このとき、下の図のような二分木を用いると、</p>\n<ul>\n<li><var>1</var> つめのクエリについては、頂点 <var>1,2,3,4,5</var> が調査され、この中で最大の深さは頂点 <var>4,5</var> の <var>2</var></li>\n<li><var>2</var> つめのクエリについては、頂点 <var>1,2,3,4,5,6,7,8,9</var> が調査され、この中で最大の深さは頂点 <var>8,9</var> の <var>3</var></li>\n<li><var>3</var> つめのクエリについては、頂点 <var>1,2,3,4,5,6,7</var> が調査され、この中で最大の深さは頂点 <var>4,5,6,7</var> の <var>2</var></li>\n<li><var>4</var> つめのクエリについては、頂点 <var>1,2,3,4,5,8,9</var> が調査され、この中で最大の深さは頂点 <var>8,9</var> の <var>3</var></li>\n</ul>\n<p>となります。したがって、この場合は <var>d=3</var> であり、深さ <var>3</var> の頂点が調査された回数は <var>2</var> つめのクエリの際の頂点 <var>8,9</var> 、 <var>4</var> つめのクエリの際の頂点 <var>8,9</var> で計 <var>4</var> 回であるため、<var>c=4</var> となります。実はこれは最適な方法の一例です。</p>\n<p>（図の上段が頂点の番号、下段が各頂点が持つ区間です。）</p>\n<p><img src=\"https://img.atcoder.jp/arc164/c5776dc7ace92d9830788319820bed2d.png\"></p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>12 6\n1 10\n2 7\n3 6\n4 9\n5 8\n11 12\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>4 4\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>700</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There is a sequence of <var>N</var> terms, and <var>Q</var> queries will be given on this sequence. The <var>i</var>-th query is for the interval <var>[L_i, R_i]</var> (the interval <var>[a,b]</var> is a set of integers between <var>a</var> and <var>b</var>, inclusive).</p>\n<p>You will answer this problem using a binary tree that satisfies the following conditions. Here, <var>i,j,k</var> represent integers.</p>\n<ul>\n<li>Each node has an interval.</li>\n<li>The root node has the interval <var>[1, N]</var>.</li>\n<li>The node with the interval <var>[i, i]</var> is a leaf. Also, the interval of a leaf can be represented as <var>[i,i]</var>.</li>\n<li>Each non-leaf node has exactly two children. Also, if the interval of a non-leaf node is <var>[i,j]</var>, the intervals of the children of this node are <var>[i,k]</var> and <var>[k+1,j]</var> (<var>i\\leq k&lt;j</var>).</li>\n</ul>\n<p>In this binary tree, when a query for the interval <var>[L,R]</var> is given, a search is performed recursively according to the following rules.</p>\n<ol>\n<li>Initially, the root is investigated.</li>\n<li>When a node is investigated, if the interval of this node is included in <var>[L, R]</var>, its descendants are not investigated.</li>\n<li>When a node is investigated, if the interval of this node have no intersection with <var>[L,R]</var>, its descendants are not investigated.</li>\n<li>When a node is investigated, if neither 2. nor 3. applies, the two child nodes are investigated. (It can be shown that either 2. or 3. always applies to a leaf node.)</li>\n</ol>\n<p>When answering <var>Q</var> queries, let <var>d</var> be the maximum depth (distance from the root) of the investigated nodes, and <var>c</var> be the total number of times nodes of depth <var>d</var> are investigated. Here, if multiple nodes of depth <var>d</var> are investigated in a single query, or if the same node is investigated in multiple queries, all those investigations count separately.</p>\n<p>You want to design the binary tree to minimize <var>d</var>, and then to minimize <var>c</var> while minimizing <var>d</var>. What are the values of <var>d</var> and <var>c</var> then?</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2\\leq N \\leq 4000</var></li>\n<li><var>1\\leq Q \\leq 10^5</var></li>\n<li><var>1\\leq L_i \\leq R_i \\leq N</var> <var>(1\\leq i \\leq Q)</var></li>\n<li>All input values are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>Q</var>\n<var>L_1</var> <var>R_1</var>\n<var>L_2</var> <var>R_2</var>\n<var>\\vdots</var>\n<var>L_Q</var> <var>R_Q</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the integers <var>d</var> and <var>c</var> in question, in this order, separated by a space.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>6 4\n2 3\n3 4\n2 4\n3 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>3 4\n</pre>\n<p>We have an interval <var>[1,6]</var>, and queries for the intervals <var>[2,3],[3,4],[2,4],[3,3]</var>. Here, if you use the binary tree shown in the figure below,</p>\n<ul>\n<li>for the first query, nodes <var>1,2,3,4,5</var> are investigated, and the maximum depth among these is <var>2</var> for nodes <var>4,5</var>;</li>\n<li>for the second query, nodes <var>1,2,3,4,5,6,7,8,9</var> are investigated, and the maximum depth among these is <var>3</var> for nodes <var>8,9</var>;</li>\n<li>for the third query, nodes <var>1,2,3,4,5,6,7</var> are investigated, and the maximum depth among these is <var>2</var> for nodes <var>4,5,6,7</var>;</li>\n<li>for the fourth query, nodes <var>1,2,3,4,5,8,9</var> are investigated, and the maximum depth among these is <var>3</var> for nodes <var>8,9</var>.</li>\n</ul>\n<p>Therefore, in this case, <var>d=3</var>, and nodes of depth <var>3</var> were investigated four times ー nodes <var>8,9</var> in the second query and nodes <var>8,9</var> in the fourth query ー so <var>c=4</var>. In fact, this is an optimal method.</p>\n<p>(In the figure, the upper row shows the node number, and the lower row shows the interval of each node.)</p>\n<p><img src=\"https://img.atcoder.jp/arc164/c5776dc7ace92d9830788319820bed2d.png\"></p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>12 6\n1 10\n2 7\n3 6\n4 9\n5 8\n11 12\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>4 4\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc164/tasks/arc164_e"}