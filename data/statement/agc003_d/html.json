{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1100</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>高橋君は誕生日にお母さんから正の整数 <var>s_1,...,s_N</var> をもらいました。ただし、要素の重複は許されます。\n高橋君は、これらの<var>N</var>個の整数のうちのいくつかを丸で囲みます。</p>\n<p>高橋君は立方数が嫌いなので、<var>s_i,s_j(i ≠ j)</var>の両方が丸で囲まれているなら、その積<var>s_is_j</var>は立方数とならないようにしたいです。\n例えば、<var>s_1=1,s_2=1,s_3=2,s_4=4</var>のとき、<var>s_1</var>と<var>s_2</var>を同時に丸で囲むことはできません。また、<var>s_3</var>と<var>s_4</var>を同時に丸で囲むこともできません。</p>\n<p>高橋君が丸で囲むことができる整数の個数の最大値を求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 ≦ N ≦ 10^5</var></li>\n<li><var>1 ≦ s_i ≦ 10^{10}</var></li>\n<li>入力はすべて整数である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>s_1</var>\n:\n<var>s_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>高橋君が丸で囲むことができる整数の個数の最大値を表す整数を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>8\n1\n2\n3\n4\n5\n6\n7\n8\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>6\n</pre>\n\n<p><var>1,2,3,5,6,7</var> を丸で囲むことができます。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>6\n2\n4\n8\n16\n32\n64\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>3\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>10\n1\n10\n100\n1000000007\n10000000000\n1000000009\n999999999\n999\n999\n999\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>9\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1100</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Snuke got positive integers <var>s_1,...,s_N</var> from his mother, as a birthday present. There may be duplicate elements.</p>\n<p>He will circle some of these <var>N</var> integers. Since he dislikes cubic numbers, he wants to ensure that if both <var>s_i</var> and <var>s_j (i ≠ j)</var> are circled, the product <var>s_is_j</var> is <em>not</em> cubic. For example, when <var>s_1=1,s_2=1,s_3=2,s_4=4</var>, it is not possible to circle both <var>s_1</var> and <var>s_2</var> at the same time. It is not possible to circle both <var>s_3</var> and <var>s_4</var> at the same time, either.</p>\n<p>Find the maximum number of integers that Snuke can circle.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 ≦ N ≦ 10^5</var></li>\n<li><var>1 ≦ s_i ≦ 10^{10}</var></li>\n<li>All input values are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>s_1</var>\n:\n<var>s_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the maximum number of integers that Snuke can circle.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>8\n1\n2\n3\n4\n5\n6\n7\n8\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>6\n</pre>\n\n<p>Snuke can circle <var>1,2,3,5,6,7</var>.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>6\n2\n4\n8\n16\n32\n64\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>3\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>10\n1\n10\n100\n1000000007\n10000000000\n1000000009\n999999999\n999\n999\n999\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>9\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc003/tasks/agc003_d"}