{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>550</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>長さ <var>N</var> の数列 <var>A=(A_1,A_2,\\ldots,A_N)</var>, <var>B=(B_1,B_2,\\ldots,B_N)</var> が与えられます。<br>\n<var>Q</var> 個のクエリが与えられるので、順に処理してください。</p>\n<p>クエリは次の <var>3</var> 種類です。</p>\n<ul>\n<li><code>1 l r x</code> : <var>A_l, A_{l+1}, \\ldots, A_r</var> に <var>x</var> を加える。</li>\n<li><code>2 l r x</code> : <var>B_l, B_{l+1}, \\ldots, B_r</var> に <var>x</var> を加える。</li>\n<li><code>3 l r</code> : <var>\\displaystyle\\sum_{i=l}^r (A_i\\times B_i)</var> を <var>998244353</var> で割った余りを出力する。</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1\\leq N,Q\\leq 2\\times 10^5</var></li>\n<li><var>0\\leq A_i,B_i\\leq 10^9</var></li>\n<li><var>1\\leq l\\leq r\\leq N</var></li>\n<li><var>1\\leq x\\leq 10^9</var></li>\n<li>入力はすべて整数</li>\n<li><var>3</var> 種類目のクエリが <var>1</var> つ以上存在する。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。ここで、<var>\\mathrm{query}_i</var> <var>(1\\leq i\\leq Q)</var> は <var>i</var> 番目に処理するクエリである。</p>\n<pre><var>N</var> <var>Q</var>\n<var>A_1</var> <var>A_2</var> <var>\\ldots</var> <var>A_N</var>\n<var>B_1</var> <var>B_2</var> <var>\\ldots</var> <var>B_N</var>\n<var>\\mathrm{query}_1</var>\n<var>\\mathrm{query}_2</var>\n<var>\\vdots</var>\n<var>\\mathrm{query}_Q</var>\n</pre>\n<p>各クエリは以下のいずれかの形式で与えられる。</p>\n<pre><var>1</var> <var>l</var> <var>r</var> <var>x</var>\n</pre>\n<pre><var>2</var> <var>l</var> <var>r</var> <var>x</var>\n</pre>\n<pre><var>3</var> <var>l</var> <var>r</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>3</var> 種類目のクエリが <var>K</var> 個あるとき、<var>K</var> 行出力せよ。<br>\n<var>i</var> 行目 (<var>1\\leq i\\leq K</var>) には、<var>i</var> 個目の <var>3</var> 種類目のクエリに対する出力を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5 6\n1 3 5 6 8\n3 1 2 1 2\n3 1 3\n1 2 5 3\n3 1 3\n1 1 3 1\n2 5 5 2\n3 1 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>16\n25\n84\n</pre>\n<p>最初、<var>A=(1,3,5,6,8)</var>, <var>B=(3,1,2,1,2)</var> です。クエリは次の順で処理されます。</p>\n<ul>\n<li><var>1</var> 個目のクエリでは <var>(1\\times 3)+(3\\times 1)+(5\\times 2)=16</var> を <var>998244353</var> で割った余りである <var>16</var> を出力します。</li>\n<li><var>2</var> 個目のクエリでは <var>A_2,A_3,A_4,A_5</var> に <var>3</var> を加えます。<var>A=(1,6,8,9,11)</var> となります。</li>\n<li><var>3</var> 個目のクエリでは <var>(1\\times 3)+(6\\times 1)+(8\\times 2)=25</var> を <var>998244353</var> で割った余りである <var>25</var> を出力します。</li>\n<li><var>4</var> 個目のクエリでは <var>A_1,A_2,A_3</var> に <var>1</var> を加えます。<var>A=(2,7,9,9,11)</var> となります。</li>\n<li><var>5</var> 個目のクエリでは <var>B_5</var> に <var>2</var> を加えます。<var>B=(3,1,2,1,4)</var> となります。</li>\n<li><var>6</var> 個目のクエリでは <var>(2\\times 3)+(7\\times 1)+(9\\times 2)+(9\\times 1)+(11\\times 4)=84</var> を <var>998244353</var> で割った余りである <var>84</var> を出力します。</li>\n</ul>\n<p>よって、<var>1</var>, <var>2</var>, <var>3</var> 行目にはそれぞれ <var>16</var>, <var>25</var>, <var>84</var> を出力します。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>2 3\n1000000000 1000000000\n1000000000 1000000000\n3 1 1\n1 2 2 1000000000\n3 1 2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>716070898\n151723988\n</pre>\n<p><var>3</var> 種類目のクエリでは <var>998244353</var> で割った余りを出力することに注意してください。</p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>550</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given sequences of length <var>N</var>, <var>A=(A_1,A_2,\\ldots,A_N)</var> and <var>B=(B_1,B_2,\\ldots,B_N)</var>.<br>\nYou are also given <var>Q</var> queries to process in order.</p>\n<p>There are three types of queries:</p>\n<ul>\n<li><code>1 l r x</code> : Add <var>x</var> to each of <var>A_l, A_{l+1}, \\ldots, A_r</var>.</li>\n<li><code>2 l r x</code> : Add <var>x</var> to each of <var>B_l, B_{l+1}, \\ldots, B_r</var>.</li>\n<li><code>3 l r</code> : Print the remainder of <var>\\displaystyle\\sum_{i=l}^r (A_i\\times B_i)</var> when divided by <var>998244353</var>.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1\\leq N,Q\\leq 2\\times 10^5</var></li>\n<li><var>0\\leq A_i,B_i\\leq 10^9</var></li>\n<li><var>1\\leq l\\leq r\\leq N</var></li>\n<li><var>1\\leq x\\leq 10^9</var></li>\n<li>All input values are integers.</li>\n<li>There is at least one query of the third type.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format. Here, <var>\\mathrm{query}_i</var> <var>(1\\leq i\\leq Q)</var> is the <var>i</var>-th query to be processed.</p>\n<pre><var>N</var> <var>Q</var>\n<var>A_1</var> <var>A_2</var> <var>\\ldots</var> <var>A_N</var>\n<var>B_1</var> <var>B_2</var> <var>\\ldots</var> <var>B_N</var>\n<var>\\mathrm{query}_1</var>\n<var>\\mathrm{query}_2</var>\n<var>\\vdots</var>\n<var>\\mathrm{query}_Q</var>\n</pre>\n<p>Each query is given in one of the following formats:</p>\n<pre><var>1</var> <var>l</var> <var>r</var> <var>x</var>\n</pre>\n<pre><var>2</var> <var>l</var> <var>r</var> <var>x</var>\n</pre>\n<pre><var>3</var> <var>l</var> <var>r</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If there are <var>K</var> queries of the third type, print <var>K</var> lines.<br>\nThe <var>i</var>-th line (<var>1\\leq i\\leq K</var>) should contain the output for the <var>i</var>-th query of the third type.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5 6\n1 3 5 6 8\n3 1 2 1 2\n3 1 3\n1 2 5 3\n3 1 3\n1 1 3 1\n2 5 5 2\n3 1 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>16\n25\n84\n</pre>\n<p>Initially, <var>A=(1,3,5,6,8)</var> and <var>B=(3,1,2,1,2)</var>. The queries are processed in the following order:</p>\n<ul>\n<li>For the first query, print <var>(1\\times 3)+(3\\times 1)+(5\\times 2)=16</var> modulo <var>998244353</var>, which is <var>16</var>.</li>\n<li>For the second query, add <var>3</var> to <var>A_2,A_3,A_4,A_5</var>. Now <var>A=(1,6,8,9,11)</var>.</li>\n<li>For the third query, print <var>(1\\times 3)+(6\\times 1)+(8\\times 2)=25</var> modulo <var>998244353</var>, which is <var>25</var>.</li>\n<li>For the fourth query, add <var>1</var> to <var>A_1,A_2,A_3</var>. Now <var>A=(2,7,9,9,11)</var>.</li>\n<li>For the fifth query, add <var>2</var> to <var>B_5</var>. Now <var>B=(3,1,2,1,4)</var>.</li>\n<li>For the sixth query, print <var>(2\\times 3)+(7\\times 1)+(9\\times 2)+(9\\times 1)+(11\\times 4)=84</var> modulo <var>998244353</var>, which is <var>84</var>.</li>\n</ul>\n<p>Thus, the first, second, and third lines should contain <var>16</var>, <var>25</var>, and <var>84</var>, respectively.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>2 3\n1000000000 1000000000\n1000000000 1000000000\n3 1 1\n1 2 2 1000000000\n3 1 2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>716070898\n151723988\n</pre>\n<p>Make sure to print the sum modulo <var>998244353</var> for the third type of query.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc357/tasks/abc357_f"}