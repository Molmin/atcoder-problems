{"html":{"ja":"<span class=\"lang-ja\">\n\n<div class=\"part\">\n<section>\n<h3>ストーリー</h3><p>高橋くんはコンテナを輸送する中継倉庫の管理をしている。\nこの倉庫には本日いくつかのコンテナが運び込まれる予定で、運び込まれた全てのコンテナは翌日決められた順序でトラックに積まれて運び出される。\n各コンテナが到着する順番は不明であり、運び出す順序を考慮して臨機応変に倉庫内の適切な場所に格納して欲しい。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>D\\times D</var> マスの倉庫がある。\n一番北西のマスの座標を <var>(0,0)</var> とし、そこから南方向に <var>i</var> マス、東方向に <var>j</var> マス進んだ先のマスの座標を <var>(i,j)</var> とする。\n<var>D</var> は奇数であり、<var>(0,(D-1)/2)</var> のマスに倉庫の出入り口がある。\n出入り口とその隣接する <var>3</var> マスを除いた <var>D^2-4</var> マスのうち、<var>N</var> マスに通行不能な障害物が置かれている。</p>\n<p><var>D^2-1-N</var> 個のコンテナが一つずつに運び込まれて来る。\n各コンテナには <var>0</var> から <var>D^2-2-N</var> の固有の番号が振られており、各番号はそのコンテナを運び出したい順序を示している。\n<strong>コンテナが運び込まれて来る順番の情報は事前には与えられず、運び込まれて来たタイミングでそのコンテナに振られている番号が明らかになる。</strong>\n出入り口と障害物マス以外の <var>D\\times D-1-N</var> マスにはそれぞれ高々 <var>1</var> つのコンテナを格納することが出来る。\nコンテナが1つ運び込まれて来る度に、そのコンテナを格納する場所を選択せよ。\n格納先は以下の条件を満たす必要がある。</p>\n<ol>\n<li>出入り口と障害物マス以外であり、かつ既にその場所に他のコンテナが格納されていない。</li>\n<li>出入り口のマスから、4方向に隣接する空きマスのみを経由して格納先のマスに到達可能である。</li>\n</ol>\n<p>コンテナの格納が全て完了した後、全てのコンテナを任意の順番で1つずつ運び出す。\n運び出すコンテナは以下の条件を満たす必要がある。</p>\n<ol>\n<li>出入り口のマスから、4方向に隣接する空きマスのみを経由して運び出すコンテナが格納されているマスに到達可能である。</li>\n</ol>\n<p>出来るだけ指定された順序で運び出すことが出来るように、コンテナの格納先と運び出す順序を最適化せよ。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>得点</h3><p><var>i (0\\leq i\\leq D^2-2-N)</var> 番目に運び出したコンテナの番号を <var>b_i (0\\leq b_i\\leq D^2-2-N)</var> とする。\n<var>B</var> を <var>b_0,\\cdots,b_{D^2-2-N}</var> の転倒数、すなわち、<var>i &lt; j</var> であって、<var>b_i&gt;b_j</var> であるようなペア <var>(i,j)</var> の総数とする。\nこのとき、以下の得点が得られる。</p>\n<p>\\[\n\\mathrm{round}\\left(10^9\\times \\frac{(D^2-N)(D^2-1-N)/2-B}{(D^2-N)(D^2-1-N)/2}\\right)\n\\]</p>\n<p>各 <var>N=0,1,\\cdots,9</var> に対して <var>30</var> 個ずつ、合計で 300 個のテストケースがあり、各テストケースの得点の合計が提出の得点となる。\n一つ以上のテストケースで不正な出力や制限時間超過をした場合、提出全体の判定が<span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"不正解\">WA</span>や<span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"実行時間制限超過\">TLE</span>となる。\nコンテスト時間中に得た最高得点で最終順位が決定され、コンテスト終了後のシステムテストは行われない。 同じ得点を複数の参加者が得た場合、提出時刻に関わらず同じ順位となる。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>入出力</h3><p>まずはじめに、標準入力から倉庫の大きさ <var>D</var>、障害物の個数 <var>N</var>、障害物の座標 <var>(ri_0,rj_0),\\cdots,(ri_{N-1},rj_{N-1})</var> が以下の形式で与えられる。</p>\n<pre><var>D</var> <var>N</var>\n<var>ri_0</var> <var>rj_0</var>\n<var>\\vdots</var>\n<var>ri_{N-1}</var> <var>rj_{N-1}</var>\n</pre>\n\n<p>全てのテストケースで <var>D = 9</var> で固定である。\n<var>N</var> は <var>0\\leq N\\leq D</var> を満たす。\n各障害物 <var>(ri_k,rj_k)</var> の座標は出入り口とその隣接する3マスのいずれとも異なり、更に障害物以外の全てのマスは出入り口のマスから到達可能であることが保証されている。</p>\n<p>上記の情報を読み込んだら、以下の処理を <var>D^2-1-N</var> 回繰り返す。</p>\n<p><var>d(0\\leq d\\leq D^2-2-N)</var> 回目の処理ではまず、標準入力から <var>d</var> 番目に運び込まれて来たコンテナの番号 <var>t_d</var> が一行で与えられる。\n各 <var>t_d</var> は <var>0</var> 以上 <var>D^2-2-N</var> 以下の整数値であり、各コンテナの番号は一意である。</p>\n<p><var>t_d</var> の情報を読み込んだら、そのコンテナを格納する先のマスの座標 <var>(pi_d,pj_d)</var> を以下の形式で一行で標準出力に出力せよ。</p>\n<pre><var>pi_d</var> <var>pj_d</var>\n</pre>\n\n<p><font color=\"red\"><strong>出力の後には改行をし、更に標準出力を flush しなければならない。</strong></font>\nそうしない場合、<span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"実行時間制限超過\">TLE</span>となる可能性がある。\n<font color=\"red\"><strong><var>d</var> 回目の出力するまで、<var>d+1</var> 個目のコンテナに関する入力は与えられないので注意せよ。</strong></font></p>\n<p>全てのコンテナの格納が完了後、コンテナを運び出す順序を決定せよ。\n<var>k</var> 番目に運び出すコンテナの座標を <var>(qi_k, qj_k)</var> としたとき、以下の形式で標準出力に出力せよ。</p>\n<pre><var>qi_0</var> <var>qj_0</var>\n<var>qi_1</var> <var>qj_1</var>\n<var>\\vdots</var>\n<var>qi_{D^2-2-N}</var> <var>qj_{D^2-2-N}</var>\n</pre>\n\n<p>解答プログラムは、# から始まるコメント行を出力に含めても良い。 Web版ビジュアライザを使用すると、コメント行を対応するタイミングで表示出来るため、デバッグや考察等に役立てることが出来る。 ジャッジプログラムはコメント行を全て無視するため、コメント行を出力するプログラムをそのまま提出可能である。 </p>\n<h4>例</h4>\n<table class=\"table table-bordered\">\n<thead>\n<tr>\n<th><var>d</var></th>\n<th>Input</th>\n<th>Output</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>事前情報</td>\n<td><pre>9 0\n</pre></td>\n<td></td>\n</tr>\n<tr>\n<td>0</td>\n<td><pre>16</pre></td>\n<td><pre>8 0</pre></td>\n</tr>\n<tr>\n<td>1</td>\n<td><pre>13</pre></td>\n<td><pre>8 8</pre></td>\n</tr>\n<tr>\n<td><var>\\vdots</var></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>79</td>\n<td><pre>34</pre></td>\n<td><pre>0 5</pre></td>\n</tr>\n<tr>\n<td>運び出す順序</td>\n<td></td>\n<td><pre>0 3\n0 5\n0 2\n<var>\\vdots</var>\n8 8</pre></td>\n</tr>\n</tbody>\n</table>\n\n<p><a href=\"https://img.atcoder.jp/toyota2023summer-final/TqK1K6OG.html?lang=ja&amp;seed=0&amp;output=sample\">例を見る</a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>入力生成方法</h3><p>障害物の個数 <var>N</var> は <var>0</var> 以上 <var>D</var> 以下の整数から一様ランダムに生成される。\n各障害物の座標は、出入り口とその隣接マス以外の中から異なる <var>N</var> 個がランダムに生成され、残りのマスのうちで到達不能なものがある場合は障害物の座標の生成をやり直す。\nコンテナの番号 <var>t_0,\\cdots,t_{D^2-2-N}</var> は <var>0,1,\\cdots,D^2-2-N</var> をランダムな順に並び替えることで生成される。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>ツール(入力ジェネレータ・ビジュアライザ)</h3><ul>\n<li><a href=\"https://img.atcoder.jp/toyota2023summer-final/TqK1K6OG.html?lang=ja\">Web版</a>: ローカル版より高性能でアニメーション表示と手動プレイが可能です。</li>\n<li><a href=\"https://img.atcoder.jp/toyota2023summer-final/TqK1K6OG.zip\">ローカル版</a>: 使用するには<a href=\"https://www.rust-lang.org/ja\">Rust言語</a>のコンパイル環境をご用意下さい。<ul>\n<li><a href=\"https://img.atcoder.jp/toyota2023summer-final/TqK1K6OG_windows.zip\">Windows用のコンパイル済みバイナリ</a>: Rust言語の環境構築が面倒な方は代わりにこちらをご利用下さい。</li>\n</ul>\n</li>\n</ul>\n<p>コンテスト期間中に、ビジュアライズ結果の共有や、解法・考察に関する言及は禁止されています。ご注意下さい。</p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n\n<div class=\"part\">\n<section>\n<h3>Story</h3><p>Takahashi manages a transit warehouse for transporting containers.\nToday, many containers are scheduled to be brought into this warehouse, and tomorrow, all of these containers will be loaded onto trucks in a predetermined order for transportation.\nThe order in which the containers will arrive is unknown, so please flexibly store them in appropriate locations in the warehouse, taking into account the order in which they will be transported out.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There is a warehouse with a grid of <var>D\\times D</var> squares.\nLet <var>(0,0)</var> be the coordinates of the northwesternmost square and <var>(i,j)</var> be the coordinates of the squares located <var>i</var> squares to the south and <var>j</var> squares to the east from there.\nThe warehouse entrance is in the square <var>(0,(D-1)/2)</var>, where <var>D</var> is an odd number.\nThere are impassable obstacles placed in <var>N</var> squares out the <var>D^2-4</var> squares except for the entrance and its <var>3</var> adjacent squares.</p>\n<p><var>D^2-1-N</var> containers are brought into the warehouse one by one.\nEach container is assigned a unique number from <var>0</var> to <var>D^2-2-N</var> which indicates the order in which the containers are to be transported out.\n<strong>Information on the order of containers is not given in advance, and the number assigned to a container is revealed at the time it is brought in.</strong>\nEach <var>D\\times D-1-N</var> square other than the entrance and obstacles can hold at most <var>1</var> container.\nEach time a container is brought in, choose a square to store it.\nThe chosen square must satisfy the following conditions.</p>\n<ol>\n<li>It is neither the entrance nor an obstacle square, and there are no other containers stored at the chosen square.</li>\n<li>It must be reachable from the entrance by only passing through adjacent empty squares in the four directions.</li>\n</ol>\n<p>After all the containers are stored, please transport out all of them one by one.\nThe container to be transported out must satisfy the following conditions.</p>\n<ol>\n<li>The square containing the container to be transported out must be reachable from the entrance by only passing through adjacent empty squares in the four directions.</li>\n</ol>\n<p>Optimize the storage location of the containers and the order in which they are transported out so that the order is as close as possible to the specified order.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Scoring</h3><p>Let <var>b_i (0\\leq b_i\\leq D^2-2-N)</var> be the number assigned to the container transported out for the <var>i</var>-th time (<var>0\\leq i\\leq D^2-2-N</var>).\nLet <var>B</var> be the number of inversions of <var>b_0,\\cdots,b_{D^2-2-N}</var>, that is, the total number of pairs <var>(i,j)</var> such that <var>i &lt; j</var> and <var>b_i&gt;b_j</var>.\nThen, you will obtain the following score.</p>\n<p>\\[\n\\mathrm{round}\\left(10^9\\times \\frac{(D^2-N)(D^2-1-N)/2-B}{(D^2-N)(D^2-1-N)/2}\\right)\n\\]</p>\n<p>There are <var>30</var> test cases for each <var>N=0,1,\\cdots,9</var>, for a total of 300 test cases, and the score of a submission is the total score for each test case.\nIf your submission produces an illegal output or exceeds the time limit for some test cases, the submission itself will be judged as <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Wrong Answer\">WA</span> or <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Time Limit Exceeded\">TLE</span> , and the score of the submission will be zero.\nThe highest score obtained during the contest will determine the final ranking, and there will be no system test after the contest.\nIf more than one participant gets the same score, they will be ranked in the same place regardless of the submission time.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Input and Output</h3><p>First, the size of the warehouse, <var>D</var>, the number of obstacles <var>N</var>, and the coordinates <var>(ri_0,rj_0),\\cdots,(ri_{N-1},rj_{N-1})</var> of obstacles are given from Standard Input in the following format.</p>\n<pre><var>D</var> <var>N</var>\n<var>ri_0</var> <var>rj_0</var>\n<var>\\vdots</var>\n<var>ri_{N-1}</var> <var>rj_{N-1}</var>\n</pre>\n\n<p>For all test cases, we fix <var>D = 9</var>.\nThe number of obstacles <var>N</var> satisfies <var>0\\leq N\\leq D</var>.\nThe coordinates of each obstacle <var>(ri_k,rj_k)</var> are different from the entrance and any of its three adjacent squares, furthermore, all squares except the obstacles are guaranteed to be reachable from the entrance.</p>\n<p>After reading the above information, repeat the following process <var>D^2-1-N</var> times.</p>\n<p>In the <var>d</var>-th process (<var>0\\leq d\\leq D^2-2-N</var>), the number <var>t_d</var> assigned to the <var>d</var>-th container brought in is given on a single line from Standard Input.\nEach <var>t_d</var> is an integer value between <var>0</var> and <var>D^2-2-N</var>, and each container has a unique number.</p>\n<p>After reading the information of <var>t_d</var>, output the coordinates <var>(pi_d,pj_d)</var> of the square to store the container to Standard Output on a single line in the following format.</p>\n<pre><var>pi_d</var> <var>pj_d</var>\n</pre>\n\n<p><font color=\"red\"><strong>The output must be followed by a new line, and you have to flush Standard Output.</strong></font>\nOtherwise, the submission might be judged as <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Time Limit Exceeded\">TLE</span>.\n<font color=\"red\"><strong>Note that the input for the <var>d+1</var>-th container will not be given until the <var>d</var>-th output is given. </strong></font></p>\n<p>After all containers have been stored, determine the order in which the containers are to be transported out.\nLet <var>(qi_k, qj_k)</var> be the coordinates of the <var>k</var>-th container to be transported out. Then, output to Standard Output in the following format.</p>\n<pre><var>qi_0</var> <var>qj_0</var>\n<var>qi_1</var> <var>qj_1</var>\n<var>\\vdots</var>\n<var>qi_{D^2-2-N}</var> <var>qj_{D^2-2-N}</var>\n</pre>\n\n<p>Your program may output comment lines starting with #. The web version of the visualizer displays the comment lines at the corresponding timing, which may be useful for debugging and analysis. Since the judge program ignores all comment lines, you can submit a program that outputs comment lines as is.</p>\n<h4>例</h4>\n<table class=\"table table-bordered\">\n<thead>\n<tr>\n<th><var>d</var></th>\n<th>Input</th>\n<th>Output</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Prior information</td>\n<td><pre>9 0\n</pre></td>\n<td></td>\n</tr>\n<tr>\n<td>0</td>\n<td><pre>16</pre></td>\n<td><pre>8 0</pre></td>\n</tr>\n<tr>\n<td>1</td>\n<td><pre>13</pre></td>\n<td><pre>8 8</pre></td>\n</tr>\n<tr>\n<td><var>\\vdots</var></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>79</td>\n<td><pre>34</pre></td>\n<td><pre>0 5</pre></td>\n</tr>\n<tr>\n<td>Transporting order</td>\n<td></td>\n<td><pre>0 3\n0 5\n0 2\n<var>\\vdots</var>\n8 8</pre></td>\n</tr>\n</tbody>\n</table>\n\n<p><a href=\"https://img.atcoder.jp/toyota2023summer-final/TqK1K6OG.html?lang=en&amp;seed=0&amp;output=sample\">Show example</a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Input Generation</h3><p>The number of obstacles <var>N</var> is generated uniformly at random from integers between <var>0</var> and <var>D</var>, inclusive.\nA distinct set of <var>N</var> coordinates for the obstacles are randomly chosen from squares other than the entrance and its three adjacent squares.\nThe numbers <var>t_0,\\cdots,t_{D^2-2-N}</var> assigned to the containers are generated by randomly shuffling <var>0,1,\\cdots,D^2-2-N</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Tools (Input generator and visualizer)</h3><ul>\n<li><a href=\"https://img.atcoder.jp/toyota2023summer-final/TqK1K6OG.html?lang=en\">Web version</a>: This is more powerful than the local version providing animations and manual play.</li>\n<li><a href=\"https://img.atcoder.jp/toyota2023summer-final/TqK1K6OG.zip\">Local version</a>: You need a compilation environment of <a href=\"https://www.rust-lang.org/\">Rust language</a>.<ul>\n<li><a href=\"https://img.atcoder.jp/toyota2023summer-final/TqK1K6OG_windows.zip\">Pre-compiled binary for Windows</a>: If you are not familiar with the Rust language environment, please use this instead.</li>\n</ul>\n</li>\n</ul>\n<p>Please be aware that sharing visualization results or discussing solutions/ideas during the contest is prohibited.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/toyota2023summer-final/tasks/toyota2023summer_final_a"}