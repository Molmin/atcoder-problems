{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>500</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>1, \\dots, N</var> と番号づけられた <var>N</var> 個の都市と、<var>1, \\dots, M</var> と番号づけられた <var>M</var> 本の道があります。<br>\n全ての道は一方通行であり、道 <var>i \\, (1 \\leq i \\leq M)</var> を通ると、都市 <var>A_i</var> から都市 <var>B_i</var> へ移動することができます。また、道 <var>i</var> の長さは <var>C_i</var> です。</p>\n<p><var>1</var> 以上 <var>M</var> 以下の整数からなる長さ <var>K</var> の数列 <var>E = (E_1, \\dots, E_K)</var> が与えられます。都市 <var>1</var> から都市 <var>N</var> までいくつかの道を使って移動する方法であって、以下の条件を満たすものを<strong>良い経路</strong>と呼びます。</p>\n<ul>\n<li>通る道の番号を通った順番に並べた列は、<var>E</var> の部分列である。</li>\n</ul>\n<p>なお、部分列とは、数列から <var>0</var> 個以上の要素を削除し、残った要素を元の順序で並べて得られる数列のことを指します。</p>\n<p>全ての良い経路における、通る道の長さの合計の最小値を求めてください。<br>\nただし、良い経路が存在しない場合は、そのことを報告してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq M, K \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq A_i, B_i \\leq N, A_i \\neq B_i \\, (1 \\leq i \\leq M)</var></li>\n<li><var>1 \\leq C_i \\leq 10^9 \\, (1 \\leq i \\leq M)</var></li>\n<li><var>1 \\leq E_i \\leq M \\, (1 \\leq i \\leq K)</var></li>\n<li>入力は全て整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var> <var>K</var>\n<var>A_1</var> <var>B_1</var> <var>C_1</var>\n<var>\\vdots</var>\n<var>A_M</var> <var>B_M</var> <var>C_M</var>\n<var>E_1</var> <var>\\ldots</var> <var>E_K</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>全ての良い経路における、通る道の長さの合計の最小値を出力せよ。ただし、良い経路が存在しないならば、<var>-1</var> を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 4 4\n1 2 2\n2 3 2\n1 3 3\n1 3 5\n4 2 1 2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>4\n</pre>\n<p>良い経路として考えられるのは次の二つです。</p>\n<ul>\n<li>道 <var>4</var> を使う。通る道の長さの合計は <var>5</var> である。</li>\n<li>道 <var>1, 2</var> をこの順で使う。通る道の長さの合計は <var>2 + 2 = 4</var> である。</li>\n</ul>\n<p>よって、求める最小値は <var>4</var> です。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>3 2 3\n1 2 1\n2 3 1\n2 1 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>-1\n</pre>\n<p>良い経路は存在しません。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>4 4 5\n3 2 2\n1 3 5\n2 4 7\n3 4 10\n2 4 1 4 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>14\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>500</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There are <var>N</var> towns numbered <var>1, \\dots, N</var>, and <var>M</var> roads numbered <var>1, \\dots, M</var>.<br>\nEvery road is directed; road <var>i</var> <var>(1 \\leq i \\leq M)</var> leads you from Town <var>A_i</var> to Town <var>B_i</var>.  The length of road <var>i</var> is <var>C_i</var>.</p>\n<p>You are given a sequence <var>E = (E_1, \\dots, E_K)</var> of length <var>K</var> consisting of integers between <var>1</var> and <var>M</var>.  A way of traveling from town <var>1</var> to town <var>N</var> using roads is called a <strong>good path</strong> if:</p>\n<ul>\n<li>the sequence of the roads' numbers arranged in the order used in the path is a subsequence of <var>E</var>.</li>\n</ul>\n<p>Note that a subsequence of a sequence is a sequence obtained by removing <var>0</var> or more elements from the original sequence and concatenating the remaining elements without changing the order.</p>\n<p>Find the minimum sum of the lengths of the roads used in a good path.<br>\nIf there is no good path, report that fact.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq M, K \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq A_i, B_i \\leq N, A_i \\neq B_i \\, (1 \\leq i \\leq M)</var></li>\n<li><var>1 \\leq C_i \\leq 10^9 \\, (1 \\leq i \\leq M)</var></li>\n<li><var>1 \\leq E_i \\leq M \\, (1 \\leq i \\leq K)</var></li>\n<li>All values in the input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var> <var>K</var>\n<var>A_1</var> <var>B_1</var> <var>C_1</var>\n<var>\\vdots</var>\n<var>A_M</var> <var>B_M</var> <var>C_M</var>\n<var>E_1</var> <var>\\ldots</var> <var>E_K</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Find the minimum sum of the lengths of the roads used in a good path.<br>\nIf there is no good path, print <code>-1</code>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 4 4\n1 2 2\n2 3 2\n1 3 3\n1 3 5\n4 2 1 2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>4\n</pre>\n<p>There are two possible good paths as follows:</p>\n<ul>\n<li>Using road <var>4</var>.  In this case, the sum of the length of the used road is <var>5</var>.</li>\n<li>Using road <var>1</var> and <var>2</var> in this order.  In this case, the sum of the lengths of the used roads is <var>2 + 2 = 4</var>.</li>\n</ul>\n<p>Therefore, the desired minimum value is <var>4</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>3 2 3\n1 2 1\n2 3 1\n2 1 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>-1\n</pre>\n<p>There is no good path.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>4 4 5\n3 2 2\n1 3 5\n2 4 7\n3 4 10\n2 4 1 4 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>14\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc271/tasks/abc271_e"}