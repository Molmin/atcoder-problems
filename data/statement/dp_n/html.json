{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>100</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 匹のスライムが横一列に並んでいます。\n最初、左から <var>i</var> 番目のスライムの大きさは <var>a_i</var> です。</p>\n<p>太郎君は、すべてのスライムを合体させて <var>1</var> 匹のスライムにしようとしています。\nスライムが <var>1</var> 匹になるまで、太郎君は次の操作を繰り返し行います。</p>\n<ul>\n<li>左右に隣り合う <var>2</var> 匹のスライムを選び、それらを合体させて新しい <var>1</var> 匹のスライムにする。 合体前の <var>2</var> 匹のスライムの大きさを <var>x</var> および <var>y</var> とすると、合体後のスライムの大きさは <var>x + y</var> となる。 このとき、太郎君は <var>x + y</var> のコストを支払う。 なお、合体の前後でスライムたちの位置関係は変わらない。</li>\n</ul>\n<p>太郎君が支払うコストの総和の最小値を求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li>入力はすべて整数である。</li>\n<li><var>2 \\leq N \\leq 400</var></li>\n<li><var>1 \\leq a_i \\leq 10^9</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>a_1</var> <var>a_2</var> <var>\\ldots</var> <var>a_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>太郎君が支払うコストの総和の最小値を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>4\n10 20 30 40\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>190\n</pre>\n\n<p>次のように操作を行えばよいです。\n操作対象のスライムを太字で表しています。</p>\n<ul>\n<li>(<strong>10</strong>, <strong>20</strong>, 30, 40) → (<strong>30</strong>, 30, 40)</li>\n<li>(<strong>30</strong>, <strong>30</strong>, 40) → (<strong>60</strong>, 40)</li>\n<li>(<strong>60</strong>, <strong>40</strong>) → (<strong>100</strong>)</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5\n10 10 10 10 10\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>120\n</pre>\n\n<p>例えば、次のように操作を行えばよいです。</p>\n<ul>\n<li>(<strong>10</strong>, <strong>10</strong>, 10, 10, 10) → (<strong>20</strong>, 10, 10, 10)</li>\n<li>(20, <strong>10</strong>, <strong>10</strong>, 10) → (20, <strong>20</strong>, 10)</li>\n<li>(20, <strong>20</strong>, <strong>10</strong>) → (20, <strong>30</strong>)</li>\n<li>(<strong>20</strong>, <strong>30</strong>) → (<strong>50</strong>)</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>3\n1000000000 1000000000 1000000000\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>5000000000\n</pre>\n\n<p>答えは 32-bit 整数型に収まらない場合があります。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 4</h3><pre>6\n7 6 8 6 1 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 4</h3><pre>68\n</pre>\n\n<p>例えば、次のように操作を行えばよいです。</p>\n<ul>\n<li>(7, 6, 8, 6, <strong>1</strong>, <strong>1</strong>) → (7, 6, 8, 6, <strong>2</strong>)</li>\n<li>(7, 6, 8, <strong>6</strong>, <strong>2</strong>) → (7, 6, 8, <strong>8</strong>)</li>\n<li>(<strong>7</strong>, <strong>6</strong>, 8, 8) → (<strong>13</strong>, 8, 8)</li>\n<li>(13, <strong>8</strong>, <strong>8</strong>) → (13, <strong>16</strong>)</li>\n<li>(<strong>13</strong>, <strong>16</strong>) → (<strong>29</strong>)</li>\n</ul></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>100</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There are <var>N</var> slimes lining up in a row.\nInitially, the <var>i</var>-th slime from the left has a size of <var>a_i</var>.</p>\n<p>Taro is trying to combine all the slimes into a larger slime.\nHe will perform the following operation repeatedly until there is only one slime:</p>\n<ul>\n<li>Choose two adjacent slimes, and combine them into a new slime. The new slime has a size of <var>x + y</var>, where <var>x</var> and <var>y</var> are the sizes of the slimes before combining them. Here, a cost of <var>x + y</var> is incurred. The positional relationship of the slimes does not change while combining slimes.</li>\n</ul>\n<p>Find the minimum possible total cost incurred.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li>All values in input are integers.</li>\n<li><var>2 \\leq N \\leq 400</var></li>\n<li><var>1 \\leq a_i \\leq 10^9</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>a_1</var> <var>a_2</var> <var>\\ldots</var> <var>a_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the minimum possible total cost incurred.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>4\n10 20 30 40\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>190\n</pre>\n\n<p>Taro should do as follows (slimes being combined are shown in bold):</p>\n<ul>\n<li>(<strong>10</strong>, <strong>20</strong>, 30, 40) → (<strong>30</strong>, 30, 40)</li>\n<li>(<strong>30</strong>, <strong>30</strong>, 40) → (<strong>60</strong>, 40)</li>\n<li>(<strong>60</strong>, <strong>40</strong>) → (<strong>100</strong>)</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5\n10 10 10 10 10\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>120\n</pre>\n\n<p>Taro should do, for example, as follows:</p>\n<ul>\n<li>(<strong>10</strong>, <strong>10</strong>, 10, 10, 10) → (<strong>20</strong>, 10, 10, 10)</li>\n<li>(20, <strong>10</strong>, <strong>10</strong>, 10) → (20, <strong>20</strong>, 10)</li>\n<li>(20, <strong>20</strong>, <strong>10</strong>) → (20, <strong>30</strong>)</li>\n<li>(<strong>20</strong>, <strong>30</strong>) → (<strong>50</strong>)</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>3\n1000000000 1000000000 1000000000\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>5000000000\n</pre>\n\n<p>The answer may not fit into a 32-bit integer type.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 4</h3><pre>6\n7 6 8 6 1 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 4</h3><pre>68\n</pre>\n\n<p>Taro should do, for example, as follows:</p>\n<ul>\n<li>(7, 6, 8, 6, <strong>1</strong>, <strong>1</strong>) → (7, 6, 8, 6, <strong>2</strong>)</li>\n<li>(7, 6, 8, <strong>6</strong>, <strong>2</strong>) → (7, 6, 8, <strong>8</strong>)</li>\n<li>(<strong>7</strong>, <strong>6</strong>, 8, 8) → (<strong>13</strong>, 8, 8)</li>\n<li>(13, <strong>8</strong>, <strong>8</strong>) → (13, <strong>16</strong>)</li>\n<li>(<strong>13</strong>, <strong>16</strong>) → (<strong>29</strong>)</li>\n</ul></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/dp/tasks/dp_n"}