{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>675</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>長さ <var>N</var> の数列 <var>D=(D_1, D_2, \\dots, D_N), P=(P_1, P_2, \\dots, P_N)</var> が与えられます。</p>\n<p><var>Q</var> 個のクエリを与えられる順に処理してください。クエリは以下の形式で与えられます。</p>\n<ul>\n<li><code>c x y</code> : <var>D_c</var> を <var>x</var> に、<var>P_c</var> を <var>y</var> に変更する。そして、次の問題を解いて答えを出力する。</li>\n</ul>\n<blockquote>\n<p><var>1</var> から <var>N</var> までの番号がついた <var>N</var> 個の仕事があります。<br>\nあなたは今日 (これを <var>1</var> 日目とする) から <var>1</var> 日あたり <var>1</var> 個の仕事を選んで終わらせることを <var>N</var> 日間行います。<br>\n仕事 <var>i</var> は <var>D_i</var> 日目までに終わらせると <var>P_i</var> の報酬を貰えます。(<var>D_i</var> 日目までに終わらせなかった場合は何も無い)<br>\n仕事をやる順番を上手く選んだ時の報酬の総和の最大値を求めてください。  </p>\n</blockquote>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq N \\leq 10^5</var></li>\n<li><var>1 \\leq Q \\leq 10^5</var></li>\n<li><var>1 \\leq D_i \\leq N</var></li>\n<li><var>1 \\leq P_i \\leq 10^9</var></li>\n<li><var>1 \\leq c \\leq N</var></li>\n<li><var>1 \\leq x \\leq N</var></li>\n<li><var>1 \\leq y \\leq 10^9</var></li>\n<li>入力される値は全て整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。ここで <var>\\mathrm{query}_i</var> は <var>i</var> 番目のクエリを意味する。</p>\n<pre><var>N</var> <var>Q</var>\n<var>D_1</var> <var>D_2</var> <var>\\dots</var> <var>D_N</var>\n<var>P_1</var> <var>P_2</var> <var>\\dots</var> <var>P_N</var>\n<var>\\mathrm{query}_1</var>\n<var>\\mathrm{query}_2</var>\n<var>\\vdots</var>\n<var>\\mathrm{query}_Q</var>\n</pre>\n<p>各クエリは以下の形式で与えられる。</p>\n<pre><var>c</var> <var>x</var> <var>y</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>Q</var> 行出力せよ。<var>i</var> 行目には <var>i</var> 番目のクエリの答えを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 2\n1 2 3\n3 6 3\n3 1 4\n2 3 9\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>10\n13\n</pre>\n<p><var>1</var> 番目のクエリは次のようになります。</p>\n<ul>\n<li><var>D_3</var> を <var>1</var> に、<var>P_3</var> を <var>4</var> に更新する。<var>D = (1, 2, 1), P = (3, 6, 4)</var> になる。</li>\n<li>小問題では、<var>1</var> 日目に仕事 <var>3</var> を、<var>2</var> 日目に仕事 <var>2</var> を、<var>3</var> 日目に仕事 <var>1</var> を行うという手順が最適な手順の <var>1</var> つで、この時の報酬の総和は <var>10</var> であるから、これを出力する。</li>\n</ul>\n<p><var>2</var> 番目のクエリは次のようになります。</p>\n<ul>\n<li><var>D_2</var> を <var>3</var> に、<var>P_2</var> を <var>9</var> に更新する。<var>D = (1, 3, 1), P = (3, 9, 4)</var> になる。</li>\n<li>小問題では、<var>1</var> 日目に仕事 <var>3</var> を、<var>2</var> 日目に仕事 <var>1</var> を、<var>3</var> 日目に仕事 <var>2</var> を行うという手順が最適な手順の <var>1</var> つで、この時の報酬の総和は <var>13</var> であるから、これを出力する。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5 1\n1 2 3 4 5\n1000000000 1000000000 1000000000 1000000000 1000000000\n1 1 1000000000\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>5000000000\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>10 10\n6 2 4 1 5 1 6 6 5 3\n45 65 71 52 86 52 48 60 40 98\n5 6 5\n8 4 34\n6 7 83\n1 3 21\n7 5 85\n7 4 51\n8 2 81\n2 7 54\n6 1 5\n8 6 30\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>394\n379\n462\n457\n459\n414\n443\n479\n401\n396\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>675</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given two sequences of length <var>N</var>: <var>D=(D_1, D_2, \\dots, D_N)</var> and <var>P=(P_1, P_2, \\dots, P_N)</var>.</p>\n<p>Process <var>Q</var> queries in the order they are given. Each query is given in the following format:</p>\n<ul>\n<li><code>c x y</code>: Change <var>D_c</var> to <var>x</var> and <var>P_c</var> to <var>y</var>. Then, solve the following problem and print the answer.</li>\n</ul>\n<blockquote>\n<p>There are <var>N</var> jobs numbered <var>1</var> to <var>N</var>.<br>\nStarting from today (consider this as day <var>1</var>), you will choose and complete one job per day for <var>N</var> days.<br>\nIf you complete job <var>i</var> on or before day <var>D_i</var>, you will receive a reward of <var>P_i</var>. (If you do not complete it by day <var>D_i</var>, you get nothing.)<br>\nFind the maximum total reward you can achieve by choosing the optimal order of completing the jobs.</p>\n</blockquote>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N \\leq 10^5</var></li>\n<li><var>1 \\leq Q \\leq 10^5</var></li>\n<li><var>1 \\leq D_i \\leq N</var></li>\n<li><var>1 \\leq P_i \\leq 10^9</var></li>\n<li><var>1 \\leq c \\leq N</var></li>\n<li><var>1 \\leq x \\leq N</var></li>\n<li><var>1 \\leq y \\leq 10^9</var></li>\n<li>All input values are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format. Here, <var>\\mathrm{query}_i</var> denotes the <var>i</var>-th query.</p>\n<pre><var>N</var> <var>Q</var>\n<var>D_1</var> <var>D_2</var> <var>\\dots</var> <var>D_N</var>\n<var>P_1</var> <var>P_2</var> <var>\\dots</var> <var>P_N</var>\n<var>\\mathrm{query}_1</var>\n<var>\\mathrm{query}_2</var>\n<var>\\vdots</var>\n<var>\\mathrm{query}_Q</var>\n</pre>\n<p>Each query is given in the following format.</p>\n<pre><var>c</var> <var>x</var> <var>y</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print <var>Q</var> lines. The <var>i</var>-th line should contain the answer to the <var>i</var>-th query.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 2\n1 2 3\n3 6 3\n3 1 4\n2 3 9\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>10\n13\n</pre>\n<p>The first query is as follows:</p>\n<ul>\n<li>Update <var>D_3</var> to <var>1</var> and <var>P_3</var> to <var>4</var>. Now, <var>D = (1, 2, 1)</var> and <var>P = (3, 6, 4)</var>.</li>\n<li>In the subproblem, one optimal procedure is to complete job <var>3</var> on day <var>1</var>, job <var>2</var> on day <var>2</var>, and job <var>1</var> on day <var>3</var>. The total reward is <var>10</var>, so print <var>10</var>.</li>\n</ul>\n<p>The second query is as follows:</p>\n<ul>\n<li>Update <var>D_2</var> to <var>3</var> and <var>P_2</var> to <var>9</var>. Now, <var>D = (1, 3, 1)</var> and <var>P = (3, 9, 4)</var>.</li>\n<li>In the subproblem, one optimal procedure is to complete job <var>3</var> on day <var>1</var>, job <var>1</var> on day <var>2</var>, and job <var>2</var> on day <var>3</var>. The total reward is <var>13</var>, so print <var>13</var>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5 1\n1 2 3 4 5\n1000000000 1000000000 1000000000 1000000000 1000000000\n1 1 1000000000\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>5000000000\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>10 10\n6 2 4 1 5 1 6 6 5 3\n45 65 71 52 86 52 48 60 40 98\n5 6 5\n8 4 34\n6 7 83\n1 3 21\n7 5 85\n7 4 51\n8 2 81\n2 7 54\n6 1 5\n8 6 30\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>394\n379\n462\n457\n459\n414\n443\n479\n401\n396\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc363/tasks/abc363_g"}