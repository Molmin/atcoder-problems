{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>700</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点 <var>M</var> 辺の単純連結無向グラフが与えられます。頂点には <var>1</var> から <var>N</var> までの番号がついており、<var>i</var> 本目の辺は頂点 <var>A_i</var> と頂点 <var>B_i</var> を結んでいます。\n高橋君は、与えられたグラフのすべての辺にどちらかの向きをつけて有向グラフを作ります。\nどの頂点から出る辺の本数も偶数になるような有向グラフを作ることが可能かどうか判定し、可能ならそのような例をひとつ構成してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>ノート</h3><p>無向グラフが単純であるとは、自己ループと多重辺を含まないことを指します。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 10^5</var></li>\n<li><var>N-1 \\leq M \\leq 10^5</var></li>\n<li><var>1 \\leq A_i,B_i \\leq N (1\\leq i\\leq M)</var></li>\n<li>与えられるグラフは単純かつ連結</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>A_1</var> <var>B_1</var>\n<var>:</var>\n<var>A_M</var> <var>B_M</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>条件を満たす向き付けが不可能な場合、<var>-1</var> を出力せよ。\nそうでない場合、以下の形式でグラフのすべての辺の向きを重複なく出力せよ。</p>\n<pre><var>C_1</var> <var>D_1</var>\n<var>:</var>\n<var>C_M</var> <var>D_M</var>\n</pre>\n\n<p>ただし、組 <var>(C_i,D_i)</var> は <var>C_i</var> から頂点 <var>D_i</var> に向かって向き付けられた辺が存在することを表す。\n辺は任意の順で出力して構わない。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>4 4\n1 2\n2 3\n3 4\n4 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1 2\n1 4\n3 2\n3 4\n</pre>\n\n<p>このように向き付けることで、頂点 <var>1,3</var> からは <var>2</var> 本、頂点 <var>2,4</var> からは <var>0</var> 本の辺が出るようになります。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5 5\n1 2\n2 3\n3 4\n2 5\n4 5\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>-1\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>700</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a simple connected undirected graph with <var>N</var> vertices and <var>M</var> edges. The vertices are numbered <var>1</var> to <var>N</var>, and the <var>i</var>-th edge connects Vertex <var>A_i</var> and Vertex <var>B_i</var>.\nTakahashi will assign one of the two possible directions to each of the edges in the graph to make a directed graph.\nDetermine if it is possible to make a directed graph with an even number of edges going out from every vertex. If the answer is yes, construct one such graph.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Notes</h3><p>An undirected graph is said to be simple when it contains no self-loops or multiple edges.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 10^5</var></li>\n<li><var>N-1 \\leq M \\leq 10^5</var></li>\n<li><var>1 \\leq A_i,B_i \\leq N (1\\leq i\\leq M)</var></li>\n<li>The given graph is simple and connected.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>A_1</var> <var>B_1</var>\n<var>:</var>\n<var>A_M</var> <var>B_M</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If it is impossible to assign directions\b to satisfy the requirement, print <var>-1</var>.\nOtherwise, print an assignment of directions that satisfies the requirement, in the following format:</p>\n<pre><var>C_1</var> <var>D_1</var>\n<var>:</var>\n<var>C_M</var> <var>D_M</var>\n</pre>\n\n<p>Here each pair (<var>C_i</var>, <var>D_i</var>) means that there is an edge directed from Vertex <var>C_i</var> to Vertex <var>D_i</var>. The edges may be printed in any order.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>4 4\n1 2\n2 3\n3 4\n4 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1 2\n1 4\n3 2\n3 4\n</pre>\n\n<p>After this assignment of directions, Vertex <var>1</var> and <var>3</var> will each have two outgoing edges, and Vertex <var>2</var> and <var>4</var> will each have zero outgoing edges.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5 5\n1 2\n2 3\n3 4\n2 5\n4 5\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>-1\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc035/tasks/agc035_b"}