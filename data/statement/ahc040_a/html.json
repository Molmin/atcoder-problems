{"html":{"ja":"<span class=\"lang-ja\">\n\n<div class=\"part\">\n<section>\n<h3>ストーリー</h3><p>AtCoder社は、ロゴ入りの限定グッズをいくつか販売している。\nこのたび、それらの限定グッズをまとめて値引きした「スペシャルセット」の販売を開始することになった。\n高橋くんは、ベルトコンベアで順番に運ばれてくるグッズをダンボール箱に梱包し、配送業者に渡す作業を担当する予定である。\nそのため、販売開始に備えて梱包の練習を行うことにした。</p>\n<p>配送料はダンボール箱の横幅と縦幅の合計に比例するため、できるだけ小さな箱に詰める必要がある。\n各グッズは長方形であり、手元に計測器具がないため、高橋くんは横幅と縦幅を目分量で測り、最適化が得意なあなたに電話で相談することにした。</p>\n<p>あなたが電話越しにグッズの配置方法を指示すると、その指示に従って高橋くんは商品を配置する。\nそして、その配置において必要となるダンボール箱の横幅と縦幅を再び目分量で計測し、結果をあなたに伝える。\nあなたはその情報を元に新しい配置方法を指示する。</p>\n<p>このやりとりを繰り返し、すべてのグッズをできるだけ小さなダンボール箱に収める配置方法を求めて欲しい。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 個の長方形が与えられる。\n<var>i</var> 番目の長方形の大きさは、横幅 <var>w_i</var> と縦幅 <var>h_i</var> である。\n入力として、それぞれの値に計測誤差が乗った観測値 <var>w'_i=\\mathrm{normal}(w_i, \\sigma)</var> と <var>h'_i=\\mathrm{normal}(h_i, \\sigma)</var> が与えられる。\nここで、<var>\\mathrm{normal}(\\mu, \\sigma)</var> は次の手順で値を生成する関数である。</p>\n<ol>\n<li>平均 <var>\\mu</var>、標準偏差 <var>\\sigma</var> の正規分布からランダムに値を生成する。</li>\n<li>生成した値を四捨五入し、整数に変換する。</li>\n<li>値が <var>1</var> 未満の場合は <var>1</var> とし、<var>10^9</var> を超える場合は <var>10^9</var> とする。</li>\n</ol>\n<p>これらの長方形を、平面上で互いに重ならないように番号順に配置する。\n長方形は必要に応じて <var>90^\\circ</var> 回転させ、横幅と縦幅を入れ替えることができる。</p>\n<p>右方向に <var>x</var> 軸を、下方向に <var>y</var> 軸を取る。\n長方形は <var>x \\geq 0</var> かつ <var>y \\geq 0</var> の領域に配置することができる。\n配置方法は以下のような列 <var>(p_0, r_0, d_0, b_0), (p_1, r_1, d_1, b_1), \\dots</var> として指定する。</p>\n<ul>\n<li><var>p_i</var> は <var>i</var> 番目に配置する長方形の番号 (<var>0 \\leq p_i \\leq N-1</var>) を表す。<strong>一部の長方形だけを配置することもできるが、番号は昇順に並んでいなければならず、すべての <var>i &lt; j</var> に対して <var>p_i &lt; p_j</var> を満たす必要がある。</strong></li>\n<li><var>r_i</var> は長方形を <var>90^\\circ</var> 回転させて配置するかどうかを表す。<var>r_i = 0</var> の場合、長方形は回転させず、<var>r_i = 1</var> の場合、回転させる。</li>\n<li><var>d_i</var> は長方形を配置する方向を表す。<var>d_i</var> が <code>U</code> の場合、長方形を下から上へ動かし、既に配置した他の長方形の下端または <var>y = 0</var> の線に接触したところで停止して配置する。<var>d_i</var> が <code>L</code> の場合、長方形を右から左へ動かし、既に配置した他の長方形の右端または <var>x = 0</var> の線に接触したところで停止して配置する。</li>\n<li><var>b_i</var> は長方形を配置する際の基準となる長方形の番号を表す。<var>b_i</var> は <var>-1</var> または既に配置した長方形の番号である必要がある。<ul>\n<li>下から上に配置する場合 (<code>U</code>)、<var>b_i</var> は新しい長方形の左端をどの長方形の右端と揃えるかを表す。<var>b_i = -1</var> の場合、左端が <var>x = 0</var> になるように配置する。</li>\n<li>右から左に配置する場合 (<code>L</code>)、<var>b_i</var> は新しい長方形の上端をどの長方形の下端と揃えるかを表す。<var>b_i = -1</var> の場合、上端が <var>y = 0</var> になるように配置する。</li>\n</ul>\n</li>\n</ul>\n<h4>操作の例</h4>\n<p>以下の例では、3番の長方形を回転させず、各<var>(d,b)</var>の組に対して配置した結果を図示している。</p>\n<table class=\"table table-bordered\">\n    <tbody><tr>\n        <td>操作<var>(d,b)</var></td>\n        <td>操作前</td>\n        <td>(U,-1)</td>\n        <td>(U,0)</td>\n        <td>(U,1)</td>\n        <td>(U,2)</td>\n    </tr>\n    <tr>\n        <td>結果</td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_0.png\" style=\"width: 100%; height: auto;\"></td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_1.png\" style=\"width: 100%; height: auto;\"></td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_2.png\" style=\"width: 100%; height: auto;\"></td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_3.png\" style=\"width: 100%; height: auto;\"></td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_4.png\" style=\"width: 100%; height: auto;\"></td>\n    </tr>\n    <tr>\n        <td>操作<var>(d,b)</var></td>\n        <td>操作前</td>\n        <td>(L,-1)</td>\n        <td>(L,0)</td>\n        <td>(L,1)</td>\n        <td>(L,2)</td>\n    </tr>\n    <tr>\n        <td>結果</td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_0.png\" style=\"width: 100%; height: auto;\"></td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_5.png\" style=\"width: 100%; height: auto;\"></td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_6.png\" style=\"width: 100%; height: auto;\"></td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_7.png\" style=\"width: 100%; height: auto;\"></td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_8.png\" style=\"width: 100%; height: auto;\"></td>\n    </tr>\n</tbody></table>\n\n<p>以下の操作を <var>T</var> 回繰り返す。</p>\n<ol>\n<li>長方形の配置方法を指定する。前回の配置の続きからではなく、何も置かれていない状態から再度配置をすることに注意。</li>\n<li>配置後の横幅（長方形が存在する <var>x</var> 座標の最大値）を <var>W</var>、縦幅（長方形が存在する <var>y</var> 座標の最大値）を <var>H</var> とする。このとき、<var>W' = \\mathrm{normal}(W, \\sigma)</var> と <var>H' = \\mathrm{normal}(H, \\sigma)</var> の値が計測結果として得られる。</li>\n</ol>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>得点</h3><p><var>t</var> 回目の配置における横幅を <var>W_t</var>、縦幅を <var>H_t</var>、使用しなかった長方形の集合を <var>U_t</var> とする。このとき、<var>t</var> 回目のスコア <var>s_t</var> を次のように定義する。</p>\n<p>\\[\ns_t = W_t + H_t + \\sum_{i\\in U_t}(w_i+h_i)\n\\]</p>\n<p>このとき、<var>\\min_t s_t</var> の値が絶対スコアとして得られる。\n<font color=\"red\"><strong>絶対スコアは小さければ小さいほど良い。</strong></font></p>\n<p>各テストケース毎に、<var>\\mathrm{round}(10^9\\times \\frac{全参加者中の最小絶対スコア}{自身の絶対スコア})</var> の<font color=\"red\"><strong>相対評価スコア</strong></font>が得られ、その和が提出の得点となる。</p>\n<p>最終順位はコンテスト終了後に実施されるより多くの入力に対するシステムテストにおける得点で決定される。\n暫定テスト、システムテストともに、一部のテストケースで不正な出力や制限時間超過をした場合、そのテストケースの相対評価スコアは0点となり、そのテストケースにおいては「全参加者中の最小絶対スコア」の計算から除外される。\nシステムテストは<font color=\"red\"><strong> <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"コンパイルエラー\">CE</span> 以外の結果を得た一番最後の提出</strong></font>に対してのみ行われるため、最終的に提出する解答を間違えないよう注意せよ。</p>\n<h4>テストケース数</h4>\n<ul>\n<li>暫定テスト: 50個</li>\n<li>システムテスト: 3000個、コンテスト終了後に <a href=\"https://img.atcoder.jp/ahc040/seeds.txt\">seeds.txt</a> (sha256=1e93374aa02130a1167c2893f1904b4234a3b517d1e7b9d25022a9125ff3777d) を公開</li>\n</ul>\n<h4>相対評価システムについて</h4>\n<p>暫定テスト、システムテストともに、<span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"コンパイルエラー\">CE</span> 以外の結果を得た一番最後の提出のみが順位表に反映される。\n相対評価スコアの計算に用いられる各テストケース毎の全参加者中の最小絶対スコアの算出においても、順位表に反映されている最終提出のみが用いられる。</p>\n<p>順位表に表示されているスコアは相対評価スコアであり、新規提出があるたびに、相対評価スコアが再計算される。\n一方、提出一覧から確認出来る各提出のスコアは各テストケース毎の絶対スコアをそのまま足し合わせたものであり、相対評価スコアは表示されない。\n最新以外の提出の、現在の順位表における相対評価スコアを知るためには、再提出が必要である。\n不正な出力や制限時間超過をした場合、提出一覧から確認出来るスコアは0となるが、順位表には正解したテストケースに対する相対スコアの和が表示されている。</p>\n<h4>実行時間について</h4>\n<p>実行時間には多少のブレが生じます。\nまた、システムテストでは同時に大量の実行を行うため、暫定テストに比べて数%程度実行時間が伸びる現象が確認されています。\nそのため、実行時間制限ギリギリの提出がシステムテストで<span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"実行時間制限超過\">TLE</span>となる可能性があります。\nプログラム内で時間を計測して処理を打ち切るか、実行時間に余裕を持たせるようお願いします。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>入出力</h3><p>まず初めに、長方形の個数 <var>N</var>、操作ターン数 <var>T</var>、計測に発生する誤差の標準偏差 <var>\\sigma</var>、各長方形の大きさの計測値 <var>w'_i, h'_i</var> が、以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>T</var> <var>\\sigma</var>\n<var>w'_0</var> <var>h'_0</var>\n<var>\\vdots</var>\n<var>w'_{N-1}</var> <var>h'_{N-1}</var>\n</pre>\n<ul>\n<li>長方形の個数 <var>N</var> は <var>30\\leq N\\leq 100</var> を満たす。</li>\n<li>操作回数 <var>T</var> は <var>N/2\\leq T\\leq 4N</var> を満たす。</li>\n<li>計測時に発生する誤差の標準偏差 <var>\\sigma</var> は <var>1000\\leq\\sigma\\leq 10000</var> を満たす整数値である。</li>\n<li>横幅と縦幅の計測値 <var>w'_i, h'_i</var> は <var>1</var> 以上 <var>10^9</var> 以下の整数値である。</li>\n</ul>\n<p>上記の情報を読み込んだ後、以下の処理を <var>T</var> 回繰り返す。</p>\n<p>長方形の配置方法を表す列を <var>(p_0, r_0, d_0, b_0), (p_1, r_1, d_1, b_1), \\dots, (p_{n-1}, r_{n-1}, d_{n-1}, b_{n-1})</var> とする。\nここで、<var>n</var> は配置する長方形の個数を表し、<var>n &lt; N</var> であっても良い。\nこの列を以下の形式で標準出力に出力せよ。</p>\n<pre><var>n</var>\n<var>p_0</var> <var>r_0</var> <var>d_0</var> <var>b_0</var>\n<var>\\vdots</var> \n<var>p_{n-1}</var> <var>r_{n-1}</var> <var>d_{n-1}</var> <var>b_{n-1}</var>\n</pre>\n<p>出力後に、配置の横幅と縦幅の計測値を表す整数 <var>W'</var> と <var>H'</var> が、以下の形式で標準入力から与えられる。</p>\n<pre><var>W'</var> <var>H'</var>\n</pre>\n<p><font color=\"red\"><strong>出力の後には改行をし、更に標準出力を flush しなければならない。</strong></font>\nそうしない場合、<span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"実行時間制限超過\">TLE</span>となる可能性がある。</p>\n<p>解答プログラムは、# から始まるコメント行を出力に含めても良い。 Web版ビジュアライザを使用すると、コメント行を対応するタイミングで表示出来るため、デバッグや考察等に役立てることが出来る。 ジャッジプログラムはコメント行を全て無視するため、コメント行を出力するプログラムをそのまま提出可能である。 </p>\n<h4>例</h4>\n<table class=\"table table-bordered\">\n<thead>\n<tr>\n<th><var>t</var></th>\n<th>Output</th>\n<th>Input</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>事前情報</td>\n<td></td>\n<td><pre>4 3 1000\n77685 46130\n32459 75368\n54192 88183\n60740 42948</pre></td>\n</tr>\n<tr>\n<td>1</td>\n<td><pre>2\n0 0 U -1\n1 1 U 0</pre></td>\n<td><pre>153220 47195</pre></td>\n</tr>\n<tr>\n<td>2</td>\n<td><pre>4\n0 0 U -1\n1 1 L -1\n2 1 L 1\n3 0 U -1</pre></td>\n<td><pre>167543 86611</pre></td>\n</tr>\n<tr>\n<td>3</td>\n<td><pre>4\n0 0 U -1\n1 0 L -1\n2 0 U -1\n3 0 U 2</pre></td>\n<td><pre>113031 134437</pre></td>\n</tr>\n</tbody>\n</table>\n\n<p><a href=\"https://img.atcoder.jp/ahc040/RGoXy7re.html?lang=ja&amp;seed=0&amp;output=sample\">例を見る</a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>サンプルプログラム</h3><details>\n\nPythonでの解答例を示す。 このプログラムでは、各長方形を順番にランダムな回転・位置で配置することを <var>T</var> 回試している。\n\n<pre class=\"prettyprint linenums\">import random\n\ndef query(prdb):\n    print(len(prdb))\n    for p, r, d, b in prdb:\n        print(p, r, d, b)\n    W, H = map(int, input().split())\n    return W, H\n\nN, T, sigma = map(int, input().split())\nwh = [tuple(map(int, input().split())) for _ in range(N)]\n\nrng = random.Random(1234)\n\nfor _ in range(T):\n    prdb = []\n    for i in range(N):\n        prdb.append((\n            i,\n            rng.randint(0, 1),\n            ['U', 'L'][rng.randint(0, 1)],\n            rng.randint(-1, i - 1),\n        ))\n    query(prdb)\n</pre>\n\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>入力生成方法</h3><ul>\n<li><var>\\mathrm{rand}(L,U)</var>: <var>L</var> 以上 <var>U</var> 以下の整数値を一様ランダムに生成する。</li>\n<li><var>\\mathrm{rand\\_double}(L,U)</var>: <var>L</var> 以上 <var>U</var> 以下の実数値を一様ランダムに生成する。</li>\n</ul>\n<h4><var>N</var>, <var>T</var>, <var>\\sigma</var> の生成</h4>\n<ul>\n<li><var>N=\\mathrm{rand}(30,100)</var></li>\n<li><var>T=\\mathrm{round}(N\\times 2^{\\mathrm{rand\\_double}(-1,2)})</var></li>\n<li><var>\\sigma=\\mathrm{rand}(1000,10000)</var></li>\n</ul>\n<h4><var>w, h</var> の生成</h4>\n<p><var>U=10^5</var> とし、<var>L=\\mathrm{rand}(U/10,U/2)</var> を生成する。\n各 <var>i</var> に対し、<var>w_i=\\mathrm{rand}(L,U), h_i=\\mathrm{rand}(L,U)</var> により生成される。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>ツール(入力ジェネレータ・ローカルテスタ・ビジュアライザ)</h3><ul>\n<li><a href=\"https://img.atcoder.jp/ahc040/RGoXy7re.html?lang=ja\">Web版</a>: ローカル版より高性能でアニメーション表示が可能です。</li>\n<li><a href=\"https://img.atcoder.jp/ahc040/RGoXy7re.zip\">ローカル版</a>: 使用するには<a href=\"https://www.rust-lang.org/ja\">Rust言語</a>のコンパイル環境をご用意下さい。<ul>\n<li><a href=\"https://img.atcoder.jp/ahc040/RGoXy7re_windows.zip\">Windows用のコンパイル済みバイナリ</a>: Rust言語の環境構築が面倒な方は代わりにこちらをご利用下さい。</li>\n</ul>\n</li>\n</ul>\n<p>コンテスト期間中に、ビジュアライズ結果の共有や、解法・考察に関する言及は禁止されています。ご注意下さい。</p>\n<h4>ツールで用いられる入力ファイルの仕様</h4>\n<p>ローカルテスタに与える入力ファイルは解答プログラムに与えられる事前情報の末尾に以下の形式の情報が追加されている。</p>\n<pre><var>w_0</var> <var>h_0</var>\n<var>\\vdots</var>\n<var>w_{N-1}</var> <var>h_{N-1}</var>\n<var>dW_0</var> <var>dH_0</var>\n<var>\\vdots</var>\n<var>dW_{T-1}</var> <var>dH_{T-1}</var>\n</pre>\n<ul>\n<li><var>w_i, h_i</var> は <var>i</var> 番目の長方形の真の横幅と縦幅である。</li>\n<li><var>dW_t, dH_t</var> は <var>t</var> ターン目の計測結果に加算される計測誤差である。</li>\n</ul></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n\n<div class=\"part\">\n<section>\n<h3>Story</h3><p>AtCoder sells several limited-edition goods featuring its logo.\nThey have now decided to launch a \"Special Set,\" which bundles these limited-edition goods at a discounted price.\nTakahashi is assigned to pack the goods, which are delivered one by one on a conveyor belt, into a single cardboard box and hand it over to a delivery service.\nTo prepare for the launch, he has decided to practice packing.</p>\n<p>Since the shipping cost is proportional to the sum of the width and height of the cardboard box, it is necessary to make an effort to pack the goods into as small a box as possible.\nEach good is rectangular, but Takahashi does not have measuring tools, so he estimates the width and height by eye and consults you, an expert in optimization, over the phone.</p>\n<p>When you instruct Takahashi on how to arrange the goods over the phone, he follows your instructions and arranges the items accordingly.\nHe then estimates by eye the width and height of the cardboard box required for that arrangement and reports the results back to you.\nBased on that information, you provide new instructions for the arrangement.</p>\n<p>Repeat this process to find an arrangement that packs all the goods into as small a cardboard box as possible.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given <var>N</var> rectangles.\nThe <var>i</var>-th rectangle has width <var>w_i</var> and height <var>h_i</var>.\nFor each rectangle, observed values <var>w'_i=\\mathrm{normal}(w_i, \\sigma)</var> and <var>h'_i=\\mathrm{normal}(h_i, \\sigma)</var> are provided as input, which include measurement errors.\nHere, <var>\\mathrm{normal}(\\mu, \\sigma)</var> is a function that generates a value through the following steps:</p>\n<ol>\n<li>Generate a random value from a normal distribution with mean <var>\\mu</var> and standard deviation <var>\\sigma</var>.</li>\n<li>Round the generated value to the nearest integer.</li>\n<li>If the resulting value is less than <var>1</var>, it is set to <var>1</var>, and if it exceeds <var>10^9</var>, it is set to <var>10^9</var>.</li>\n</ol>\n<p>Place these rectangles on a plane in the order of their indices such that they do not overlap.\nEach rectangle can be rotated <var>90^\\circ</var>, swapping its width and height if necessary.</p>\n<p>The positive <var>x</var>-axis extends to the right, and the positive <var>y</var>-axis extends downward.\nRectangles can be placed in the region where <var>x \\geq 0</var> and <var>y \\geq 0</var>.\nYou are required to specify the placement method as a sequence <var>(p_0, r_0, d_0, b_0), (p_1, r_1, d_1, b_1), \\dots</var>, such that:</p>\n<ul>\n<li><var>p_i</var> represents the index of the rectangle to be placed at the <var>i</var>-th step (<var>0 \\leq p_i \\leq N-1</var>). <strong>You can try placing only some of the rectangles, but the indices must be in ascending order; in other words, for all <var>i &lt; j</var>, <var>p_i &lt; p_j</var> must hold.</strong></li>\n<li><var>r_i</var> indicates whether the rectangle should be rotated by <var>90^\\circ</var>. If <var>r_i = 0</var>, the rectangle is not rotated; if <var>r_i = 1</var>, the rectangle is rotated.</li>\n<li><var>d_i</var> specifies the direction in which the rectangle is placed.<ul>\n<li>If <var>d_i</var> is <code>U</code>, the rectangle is moved upward until it stops at the bottom edge of another rectangle that has already been placed or at the line <var>y = 0</var>.</li>\n<li>If <var>d_i</var> is <code>L</code>, the rectangle is moved leftward until it stops at the right edge of another rectangle that has already been placed or at the line <var>x = 0</var>.</li>\n</ul>\n</li>\n<li><var>b_i</var> represents the reference rectangle for placement. <var>b_i</var> must be either <var>-1</var> or the index of a previously placed rectangle.<ul>\n<li>When placing the rectangle upward (<code>U</code>), <var>b_i</var> specifies which rectangle’s right edge should align with the left edge of the new rectangle. If <var>b_i = -1</var>, the left edge of the rectangle aligns with <var>x = 0</var>.</li>\n<li>When placing the rectangle leftward (<code>L</code>), <var>b_i</var> specifies which rectangle’s bottom edge should align with the top edge of the new rectangle. If <var>b_i = -1</var>, the top edge of the rectangle aligns with <var>y = 0</var>.</li>\n</ul>\n</li>\n</ul>\n<h4>Example of Operations</h4>\n<p>In the following example, the third rectangle is placed without rotation, and the results of placement are illustrated for each pair of <var>(d, b)</var>.</p>\n<table class=\"table table-bordered\">\n    <tbody><tr>\n        <td>Operation <var>(d,b)</var></td>\n        <td>Before</td>\n        <td>(U,-1)</td>\n        <td>(U,0)</td>\n        <td>(U,1)</td>\n        <td>(U,2)</td>\n    </tr>\n    <tr>\n        <td>Result</td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_0.png\" style=\"width: 100%; height: auto;\"></td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_1.png\" style=\"width: 100%; height: auto;\"></td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_2.png\" style=\"width: 100%; height: auto;\"></td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_3.png\" style=\"width: 100%; height: auto;\"></td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_4.png\" style=\"width: 100%; height: auto;\"></td>\n    </tr>\n    <tr>\n        <td>Operation <var>(d,b)</var></td>\n        <td>Before</td>\n        <td>(L,-1)</td>\n        <td>(L,0)</td>\n        <td>(L,1)</td>\n        <td>(L,2)</td>\n    </tr>\n    <tr>\n        <td>Result</td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_0.png\" style=\"width: 100%; height: auto;\"></td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_5.png\" style=\"width: 100%; height: auto;\"></td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_6.png\" style=\"width: 100%; height: auto;\"></td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_7.png\" style=\"width: 100%; height: auto;\"></td>\n        <td><img src=\"https://img.atcoder.jp/ahc040/RGoXy7re_8.png\" style=\"width: 100%; height: auto;\"></td>\n    </tr>\n</tbody></table>\n\n<p>Repeat the following operations <var>T</var> times:</p>\n<ol>\n<li>Specify how to place the rectangles. Note that placement starts from an empty state, not continuing from the previous placement.</li>\n<li>After placement, let the width (the maximum <var>x</var>-coordinate where rectangles exist) be <var>W</var>, and the height (the maximum <var>y</var>-coordinate where rectangles exist) be <var>H</var>. Then, the measured values <var>W' = \\mathrm{normal}(W, \\sigma)</var> and <var>H' = \\mathrm{normal}(H, \\sigma)</var> are obtained as the results of the measurement.</li>\n</ol>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Scoring</h3><p>Let <var>W_t</var> and <var>H_t</var> be the width and height of the placement at the <var>t</var>-th turn, respectively, and let <var>U_t</var> be the set of rectangles that are not used in this turn. Then, the score <var>s_t</var> for the <var>t</var>-th turn is defined as follows:</p>\n<p>\\[\ns_t = W_t + H_t + \\sum_{i\\in U_t}(w_i+h_i)\n\\]</p>\n<p>Then you obtain an absolute score of <var>\\min_t s_t</var>.\n<font color=\"red\"><strong>The lower the absolute score, the better.</strong></font></p>\n<p>For each test case, we compute the <font color=\"red\"><strong>relative score</strong></font> <var>\\mathrm{round}(10^9\\times \\frac{\\mathrm{MIN}}{\\mathrm{YOUR}})</var>, where YOUR is your absolute score and MIN is the lowest absolute score among all competitors obtained on that test case. The score of the submission is the sum of the relative scores.</p>\n<p>The final ranking will be determined by the system test with more inputs which will be run after the contest is over.\nIn both the provisional/system test, if your submission produces illegal output or exceeds the time limit for some test cases, only the score for those test cases will be zero, and your submission will be excluded from the MIN calculation for those test cases.</p>\n<p>The system test will be performed only for <font color=\"red\"><strong>the last submission which received a result other than <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Compilation Error\">CE</span> </strong></font>.\nBe careful not to make a mistake in the final submission.</p>\n<h4>Number of test cases</h4>\n<ul>\n<li>Provisional test: 50</li>\n<li>System test: 3000. We will publish <a href=\"https://img.atcoder.jp/ahc040/seeds.txt\">seeds.txt</a> (sha256=1e93374aa02130a1167c2893f1904b4234a3b517d1e7b9d25022a9125ff3777d) after the contest is over.</li>\n</ul>\n<h4>About relative evaluation system</h4>\n<p>In both the provisional/system test, the standings will be calculated using only the last submission which received a result other than <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Compilation Error\">CE</span>.\nOnly the last submissions are used to calculate the MIN for each test case when calculating the relative scores.</p>\n<p>The scores shown in the standings are relative, and whenever a new submission arrives, all relative scores are recalculated.\nOn the other hand, the score for each submission shown on the submissions page is the sum of the absolute score for each test case, and the relative scores are not shown.\nIn order to know the relative score of submission other than the latest one in the current standings, you need to resubmit it.\nIf your submission produces illegal output or exceeds the time limit for some test cases, the score shown on the submissions page will be 0, but the standings show the sum of the relative scores for the test cases that were answered correctly.</p>\n<h4>About execution time</h4>\n<p>Execution time may vary slightly from run to run.\nIn addition, since system tests simultaneously perform a large number of executions, it has been observed that execution time increases by several percent compared to provisional tests.\nFor these reasons, submissions that are very close to the time limit may result in <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Time Limit Exceeded\">TLE</span> in the system test.\nPlease measure the execution time in your program to terminate the process, or have enough margin in the execution time.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Input and Output</h3><p>First, the number of rectangles <var>N</var>, the number of operation turns <var>T</var>, the standard deviation <var>\\sigma</var> of the measurement error, and the measured sizes <var>w'_i</var> and <var>h'_i</var> of each rectangle are given from Standard Input in the following format.</p>\n<pre><var>N</var> <var>T</var> <var>\\sigma</var>\n<var>w'_0</var> <var>h'_0</var>\n<var>\\vdots</var>\n<var>w'_{N-1}</var> <var>h'_{N-1}</var>\n</pre>\n<ul>\n<li>The number of rectangles <var>N</var> satisfies <var>30 \\leq N \\leq 100</var>.  </li>\n<li>The number of operations <var>T</var> satisfies <var>N/2 \\leq T \\leq 4N</var>.  </li>\n<li>The standard deviation of the measurement error <var>\\sigma</var> is an integer satisfying <var>1000 \\leq \\sigma \\leq 10000</var>.  </li>\n<li>The measured values of the width and height, <var>w'_i</var> and <var>h'_i</var>, are integers between <var>1</var> and <var>10^9</var> inclusive.</li>\n</ul>\n<p>After reading the above information, repeat the following process <var>T</var> times.</p>\n<p>Let the sequence representing the rectangle placement method be <var>(p_0, r_0, d_0, b_0), (p_1, r_1, d_1, b_1), \\dots, (p_{n-1}, r_{n-1}, d_{n-1}, b_{n-1})</var>.\nHere, <var>n</var> represents the number of rectangles to place, and <var>n</var> may be less than <var>N</var>.\nOutput this sequence to Standard Output in the following format.</p>\n<pre><var>n</var>\n<var>p_0</var> <var>r_0</var> <var>d_0</var> <var>b_0</var>\n<var>\\vdots</var> \n<var>p_{n-1}</var> <var>r_{n-1}</var> <var>d_{n-1}</var> <var>b_{n-1}</var>\n</pre>\n<p>After the output, the measured values of the width and height, <var>W'</var> and <var>H'</var>, are given from Standard Input in the following format.</p>\n<pre><var>W'</var> <var>H'</var>\n</pre>\n<p><font color=\"red\"><strong>The output must be followed by a new line, and you have to flush Standard Output.</strong></font>\nOtherwise, the submission might be judged as <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Time Limit Exceeded\">TLE</span>.</p>\n<p>Your program may output comment lines starting with <code>#</code>. The web version of the visualizer displays the comment lines at the corresponding timing, which may be useful for debugging and analysis. Since the judge program ignores all comment lines, you can submit a program that outputs comment lines as is.</p>\n<h4>Example</h4>\n<table class=\"table table-bordered\">\n<thead>\n<tr>\n<th><var>t</var></th>\n<th>Output</th>\n<th>Input</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Prior Information</td>\n<td></td>\n<td><pre>4 3 1000\n77685 46130\n32459 75368\n54192 88183\n60740 42948</pre></td>\n</tr>\n<tr>\n<td>1</td>\n<td><pre>2\n0 0 U -1\n1 1 U 0</pre></td>\n<td><pre>153220 47195</pre></td>\n</tr>\n<tr>\n<td>2</td>\n<td><pre>4\n0 0 U -1\n1 1 L -1\n2 1 L 1\n3 0 U -1</pre></td>\n<td><pre>167543 86611</pre></td>\n</tr>\n<tr>\n<td>3</td>\n<td><pre>4\n0 0 U -1\n1 0 L -1\n2 0 U -1\n3 0 U 2</pre></td>\n<td><pre>113031 134437</pre></td>\n</tr>\n</tbody>\n</table>\n\n<p><a href=\"https://img.atcoder.jp/ahc040/RGoXy7re.html?lang=en&amp;seed=0&amp;output=sample\">Show example</a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Solution</h3><details>\n\nThis is a sample solution in Python. This program tries to place each rectangle in a random rotation and position <var>T</var> times.\n\n<pre class=\"prettyprint linenums\">import random\n\ndef query(prdb):\n    print(len(prdb))\n    for p, r, d, b in prdb:\n        print(p, r, d, b)\n    W, H = map(int, input().split())\n    return W, H\n\nN, T, sigma = map(int, input().split())\nwh = [tuple(map(int, input().split())) for _ in range(N)]\n\nrng = random.Random(1234)\n\nfor _ in range(T):\n    prdb = []\n    for i in range(N):\n        prdb.append((\n            i,\n            rng.randint(0, 1),\n            ['U', 'L'][rng.randint(0, 1)],\n            rng.randint(-1, i - 1),\n        ))\n    query(prdb)\n</pre>\n\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Input Generation</h3><ul>\n<li><var>\\mathrm{rand}(L,U)</var>: Generates an integer uniformly at random between <var>L</var> and <var>U</var>, inclusive.  </li>\n<li><var>\\mathrm{rand\\_double}(L,U)</var>: Generates a real number uniformly at random between <var>L</var> and <var>U</var>, inclusive.</li>\n</ul>\n<h4>Generation of <var>N</var>, <var>T</var>, and <var>\\sigma</var></h4>\n<ul>\n<li><var>N = \\mathrm{rand}(30, 100)</var>  </li>\n<li><var>T = \\mathrm{round}(N \\times 2^{\\mathrm{rand\\_double}(-1, 2)})</var>  </li>\n<li><var>\\sigma = \\mathrm{rand}(1000, 10000)</var>  </li>\n</ul>\n<h4>Generation of <var>w</var> and <var>h</var></h4>\n<p>Let <var>U = 10^5</var>, and generate <var>L = \\mathrm{rand}(U/10, U/2)</var>.<br>\nFor each <var>i</var>, <var>w_i = \\mathrm{rand}(L, U)</var> and <var>h_i = \\mathrm{rand}(L, U)</var> are generated.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Tools (Input generator, local tester, and visualizer)</h3><ul>\n<li><a href=\"https://img.atcoder.jp/ahc040/RGoXy7re.html?lang=en\">Web version</a>: This is more powerful than the local version providing animations.</li>\n<li><a href=\"https://img.atcoder.jp/ahc040/RGoXy7re.zip\">Local version</a>: You need a compilation environment of <a href=\"https://www.rust-lang.org/\">Rust language</a>.<ul>\n<li><a href=\"https://img.atcoder.jp/ahc040/RGoXy7re_windows.zip\">Pre-compiled binary for Windows</a>: If you are not familiar with the Rust language environment, please use this instead.</li>\n</ul>\n</li>\n</ul>\n<p>Please be aware that sharing visualization results or discussing solutions/ideas during the contest is prohibited.</p>\n<h4>Specification of input files used by the tools</h4>\n<p>The input file provided to the local tester includes additional information in the following format appended to the end of the prior-information given to the solution program.</p>\n<pre><var>w_0</var> <var>h_0</var>\n<var>\\vdots</var>\n<var>w_{N-1}</var> <var>h_{N-1}</var>\n<var>dW_0</var> <var>dH_0</var>\n<var>\\vdots</var>\n<var>dW_{T-1}</var> <var>dH_{T-1}</var>\n</pre>\n<ul>\n<li><var>w_i</var> and <var>h_i</var> represent the true width and height of the <var>i</var>-th rectangle.</li>\n<li><var>dW_t</var> and <var>dH_t</var> are the measurement errors added to the results of the <var>t</var>-th turn.</li>\n</ul></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/ahc040/tasks/ahc040_a"}