{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>700</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>文字列 <var>s</var>, <var>t</var> について、<var>s</var> が <var>t</var> の prefix でなく、<var>t</var> が <var>s</var> の prefix でないとき、<var>s</var>, <var>t</var> は prefix-free であると言います。</p>\n<p><var>L</var> を正の整数とします。\n文字列集合 <var>S</var> が <strong>良い文字列集合</strong> であるとは、次の条件が成り立つことです。</p>\n<ul>\n<li><var>S</var> の各文字列は、長さ <var>1</var> 以上 <var>L</var> 以下であり、文字 <code>0</code>, <code>1</code> のみからなる。</li>\n<li><var>S</var> の相異なる <var>2</var> つの文字列のペアはいずれも prefix-free である。 </li>\n</ul>\n<p>良い文字列集合 <var>S = \\{ s_1, s_2, ..., s_N \\}</var> があります。\nAlice と Bob が次のゲームで勝負します。\n二人は交互に次の操作を行います。\nAlice が先手です。</p>\n<ul>\n<li><var>S</var> に新しい文字列をひとつ追加する。 ただし、追加後の <var>S</var> は良い文字列集合のままでなければならない。</li>\n</ul>\n<p>先に操作を行えなくなった方が負けです。\n二人が最適に行動するとき、どちらが勝つか判定してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq N \\leq 10^5</var></li>\n<li><var>1 \\leq L \\leq 10^{18}</var></li>\n<li><var>s_1</var>, <var>s_2</var>, ..., <var>s_N</var> はすべて相異なる。</li>\n<li><var>\\{ s_1, s_2, ..., s_N \\}</var> は良い文字列集合である。</li>\n<li><var>|s_1| + |s_2| + ... + |s_N| \\leq 10^5</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>L</var>\n<var>s_1</var>\n<var>s_2</var>\n<var>:</var>\n<var>s_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>Alice が勝つならば <code>Alice</code> を、Bob が勝つならば <code>Bob</code> を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>2 2\n00\n01\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>Alice\n</pre>\n\n<p>Alice が <code>1</code> を追加すると、Bob は新たに文字列を追加できなくなります。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>2 2\n00\n11\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>Bob\n</pre>\n\n<p>初手で Alice が追加できる文字列は <code>01</code>, <code>10</code> の <var>2</var> 通りです。\n初手で Alice が <code>01</code> を追加した場合は、Bob が <code>10</code> を追加すると、Alice は新たに文字列を追加できなくなります。\n初手で Alice が <code>10</code> を追加した場合も、Bob が <code>01</code> を追加すると、Alice は新たに文字列を追加できなくなります。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>3 3\n0\n10\n110\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>Alice\n</pre>\n\n<p>Alice が <code>111</code> を追加すると、Bob は新たに文字列を追加できなくなります。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 4</h3><pre>2 1\n0\n1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 4</h3><pre>Bob\n</pre>\n\n<p>初手で Alice は新たに文字列を追加できません。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 5</h3><pre>1 2\n11\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 5</h3><pre>Alice\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 6</h3><pre>2 3\n101\n11\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 6</h3><pre>Bob\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>700</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>For strings <var>s</var> and <var>t</var>, we will say that <var>s</var> and <var>t</var> are <em>prefix-free</em> when neither is a prefix of the other.</p>\n<p>Let <var>L</var> be a positive integer. A set of strings <var>S</var> is a <em>good string set</em> when the following conditions hold true:</p>\n<ul>\n<li>Each string in <var>S</var> has a length between <var>1</var> and <var>L</var> (inclusive) and consists of the characters <code>0</code> and <code>1</code>.</li>\n<li>Any two distinct strings in <var>S</var> are prefix-free.</li>\n</ul>\n<p>We have a good string set <var>S = \\{ s_1, s_2, ..., s_N \\}</var>. Alice and Bob will play a game against each other. They will alternately perform the following operation, starting from Alice:</p>\n<ul>\n<li>Add a new string to <var>S</var>. After addition, <var>S</var> must still be a good string set.</li>\n</ul>\n<p>The first player who becomes unable to perform the operation loses the game. Determine the winner of the game when both players play optimally.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N \\leq 10^5</var></li>\n<li><var>1 \\leq L \\leq 10^{18}</var></li>\n<li><var>s_1</var>, <var>s_2</var>, ..., <var>s_N</var> are all distinct.</li>\n<li>{ <var>s_1</var>, <var>s_2</var>, ..., <var>s_N</var> } is a good string set.</li>\n<li><var>|s_1| + |s_2| + ... + |s_N| \\leq 10^5</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>L</var>\n<var>s_1</var>\n<var>s_2</var>\n<var>:</var>\n<var>s_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If Alice will win, print <code>Alice</code>; if Bob will win, print <code>Bob</code>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>2 2\n00\n01\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>Alice\n</pre>\n\n<p>If Alice adds <code>1</code>, Bob will be unable to add a new string.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>2 2\n00\n11\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>Bob\n</pre>\n\n<p>There are two strings that Alice can add on the first turn: <code>01</code> and <code>10</code>.\nIn case she adds <code>01</code>, if Bob add <code>10</code>, she will be unable to add a new string.\nAlso, in case she adds <code>10</code>, if Bob add <code>01</code>, she will be unable to add a new string.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>3 3\n0\n10\n110\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>Alice\n</pre>\n\n<p>If Alice adds <code>111</code>, Bob will be unable to add a new string.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 4</h3><pre>2 1\n0\n1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 4</h3><pre>Bob\n</pre>\n\n<p>Alice is unable to add a new string on the first turn.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 5</h3><pre>1 2\n11\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 5</h3><pre>Alice\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 6</h3><pre>2 3\n101\n11\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 6</h3><pre>Bob\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc087/tasks/arc087_c"}