{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>500</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>ケンくんはけんけんぱが大好きです。今日は有向グラフ <var>G</var> の上でけんけんぱをすることにしました。\n<var>G</var> は <var>1</var> から <var>N</var> で番号付けされた <var>N</var> 頂点および <var>M</var> 辺からなり、\n<var>i</var> 番目の辺は頂点 <var>u_i</var> から頂点 <var>v_i</var> に接続しています。</p>\n<p>ケンくんははじめ頂点 <var>S</var> にいて、頂点 <var>T</var> までけんけんぱで移動したいです。\n<var>1</var> 回のけんけんぱでは、「自分の今いる頂点から出ている辺を <var>1</var> つ選んで、その辺が接続する頂点に移動する」という操作をちょうど <var>3</var> 回連続で行います。</p>\n<p>ケンくんが頂点 <var>T</var> に移動することができるか、また移動できるなら最小何回のけんけんぱで頂点 <var>T</var> まで移動することができるかを答えてください。\nけんけんぱの操作の途中で頂点 <var>T</var> に訪れても、「頂点 <var>T</var> に移動できた」とは見なさないことに注意してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 10^5</var></li>\n<li><var>0 \\leq M \\leq \\min(10^5, N (N-1))</var></li>\n<li><var>1 \\leq u_i, v_i \\leq N(1 \\leq i \\leq M)</var></li>\n<li><var>u_i \\neq v_i (1 \\leq i \\leq M)</var></li>\n<li><var>i \\neq j</var> ならば <var>(u_i, v_i) \\neq (u_j, v_j)</var></li>\n<li><var>1 \\leq S, T \\leq N</var></li>\n<li><var>S \\neq T</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>u_1</var> <var>v_1</var>\n<var>:</var>\n<var>u_M</var> <var>v_M</var>\n<var>S</var> <var>T</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>何回けんけんぱを繰り返しても頂点 <var>S</var> から頂点 <var>T</var> へ移動できない場合には、<var>-1</var> を出力せよ。\n移動できる場合には、移動するのに必要なけんけんぱの最小回数を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>4 4\n1 2\n2 3\n3 4\n4 1\n1 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>2\n</pre>\n\n<p><var>1</var> 回目のけんけんぱでは <var>1 \\rightarrow 2 \\rightarrow 3 \\rightarrow 4</var>、<var>2</var> 回目のけんけんぱでは <var>4 \\rightarrow 1 \\rightarrow 2 \\rightarrow 3</var> と移動することで頂点 <var>3</var> に辿り着くことができ、これが最小回数です。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>3 3\n1 2\n2 3\n3 1\n1 2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>-1\n</pre>\n\n<p>何回けんけんぱを繰り返しても頂点 <var>1</var> に辿り着くため、頂点 <var>2</var> に移動することは不可能です。\nけんけんぱの途中で頂点 <var>2</var> を通過することはできますが、これは移動できたとは見なしません。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>2 0\n1 2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>-1\n</pre>\n\n<p>頂点 <var>S</var> と頂点 <var>T</var> は非連結である場合があります。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 4</h3><pre>6 8\n1 2\n2 3\n3 4\n4 5\n5 1\n1 4\n1 5\n4 6\n1 6\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 4</h3><pre>2\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>500</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Ken loves <em>ken-ken-pa</em> (Japanese version of hopscotch). Today, he will play it on a directed graph <var>G</var>.\n<var>G</var> consists of <var>N</var> vertices numbered <var>1</var> to <var>N</var>, and <var>M</var> edges. The <var>i</var>-th edge points from Vertex <var>u_i</var> to Vertex <var>v_i</var>.</p>\n<p>First, Ken stands on Vertex <var>S</var>. He wants to reach Vertex <var>T</var> by repeating ken-ken-pa. In one ken-ken-pa, he does the following exactly three times: follow an edge pointing from the vertex on which he is standing.</p>\n<p>Determine if he can reach Vertex <var>T</var> by repeating ken-ken-pa. If the answer is yes, find the minimum number of ken-ken-pa needed to reach Vertex <var>T</var>. Note that visiting Vertex <var>T</var> in the middle of a ken-ken-pa does not count as reaching Vertex <var>T</var> by repeating ken-ken-pa.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 10^5</var></li>\n<li><var>0 \\leq M \\leq \\min(10^5, N (N-1))</var></li>\n<li><var>1 \\leq u_i, v_i \\leq N(1 \\leq i \\leq M)</var></li>\n<li><var>u_i \\neq v_i (1 \\leq i \\leq M)</var></li>\n<li>If <var>i \\neq j</var>, <var>(u_i, v_i) \\neq (u_j, v_j)</var>.</li>\n<li><var>1 \\leq S, T \\leq N</var></li>\n<li><var>S \\neq T</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>u_1</var> <var>v_1</var>\n<var>:</var>\n<var>u_M</var> <var>v_M</var>\n<var>S</var> <var>T</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If Ken cannot reach Vertex <var>T</var> from Vertex <var>S</var> by repeating ken-ken-pa, print <var>-1</var>.\nIf he can, print the minimum number of ken-ken-pa needed to reach vertex <var>T</var>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>4 4\n1 2\n2 3\n3 4\n4 1\n1 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>2\n</pre>\n\n<p>Ken can reach Vertex <var>3</var> from Vertex <var>1</var> in two ken-ken-pa, as follows: <var>1 \\rightarrow 2 \\rightarrow 3 \\rightarrow 4</var> in the first ken-ken-pa, then <var>4 \\rightarrow 1 \\rightarrow 2 \\rightarrow 3</var> in the second ken-ken-pa. This is the minimum number of ken-ken-pa needed.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>3 3\n1 2\n2 3\n3 1\n1 2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>-1\n</pre>\n\n<p>Any number of ken-ken-pa will bring Ken back to Vertex <var>1</var>, so he cannot reach Vertex <var>2</var>, though he can pass through it in the middle of a ken-ken-pa.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>2 0\n1 2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>-1\n</pre>\n\n<p>Vertex <var>S</var> and Vertex <var>T</var> may be disconnected.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 4</h3><pre>6 8\n1 2\n2 3\n3 4\n4 5\n5 1\n1 4\n1 5\n4 6\n1 6\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 4</h3><pre>2\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc132/tasks/abc132_e"}