{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>300</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 人の競技プログラマーがいます。順に 人 <var>1</var>, 人 <var>2</var>, <var>\\dots</var>, 人 <var>N</var> と呼びます。<br>\n競技プログラマーの間には <strong>強さ</strong> と呼ばれる関係性があり、相異なる 2 人組 <var>(</var>人 <var>X</var>, 人 <var>Y</var><var>)</var> 全てに対して 「人 <var>X</var> は人 <var>Y</var> より強い」または「人 <var>Y</var> は人 <var>X</var> より強い」のどちらか一方が成り立ちます。<br>\n強さ は <strong>推移律</strong> が成り立ちます。言い換えると、相異なる 3 人組 <var>(</var>人 <var>X</var>, 人 <var>Y</var>, 人 <var>Z</var><var>)</var> 全てに対して次の条件が成り立ちます。</p>\n<ul>\n<li>人 <var>X</var> が人 <var>Y</var> よりも強く、かつ人 <var>Y</var> が人 <var>Z</var> よりも強いとき、人 <var>X</var> は人 <var>Z</var> よりも強い。</li>\n</ul>\n<p>人 <var>X</var> が自分以外のどの人 <var>Y</var> に対しても「人 <var>X</var> は人 <var>Y</var> より強い」という関係が成り立つ時、人 <var>X</var> を <strong>最強のプログラマー</strong> と呼びます。(上記の制約下においてそのような人がちょうど 1 人存在することが証明できます)  </p>\n<p>あなたは <var>M</var> 個の強さに関する情報を知っています。<var>i</var> 個目の情報は「人 <var>A_i</var> は人 <var>B_i</var> より強い」という情報です。<br>\nあなたは情報を元に <var>N</var> 人の中から最強のプログラマーを特定することができますか？<br>\n最強のプログラマーを特定できる場合はその人の番号を出力してください。特定できない場合、つまり最強のプログラマーとしてあり得る人が複数人いる場合は <code>-1</code> を出力してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 50</var></li>\n<li><var>0 \\leq M \\leq \\frac{N(N-1)}{2}</var></li>\n<li><var>1 \\leq A_i, B_i \\leq N</var></li>\n<li><var>A_i \\neq B_i</var></li>\n<li><var>i \\neq j</var> ならば <var>(A_i, B_i) \\neq (A_j, B_j)</var></li>\n<li>全ての情報が正しくなるように、全ての相異なる <var>2</var> 人組にどちらが強いかを割り当てる方法が少なくとも <var>1</var> 通り存在する</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>A_1</var> <var>B_1</var>\n<var>A_2</var> <var>B_2</var>\n<var>\\vdots</var>\n<var>A_M</var> <var>B_M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>最強のプログラマーを特定できる場合はその人の番号を出力せよ。特定できない場合は <code>-1</code> を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 2\n1 2\n2 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1\n</pre>\n<p>あなたは「人 <var>1</var> は人 <var>2</var> より強い」「人 <var>2</var> は人 <var>3</var> より強い」という情報が分かっています。<br>\n推移律から「人 <var>1</var> は人 <var>3</var> より強い」という情報もわかるので、人 <var>1</var> は最強のプログラマーです。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>3 2\n1 3\n2 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>-1\n</pre>\n<p>最強のプログラマーである可能性がある人は人 <var>1</var> と人 <var>2</var> です。最強のプログラマーを一意に特定できないので <code>-1</code> を出力してください。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>6 6\n1 6\n6 5\n6 2\n2 3\n4 3\n4 2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>-1\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>300</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There are <var>N</var> competitive programmers numbered person <var>1</var>, person <var>2</var>, <var>\\ldots</var>, and person <var>N</var>.<br>\nThere is a relation called <strong>superiority</strong> between the programmers.  For all pairs of distinct programmers <var>(</var>person <var>X</var>, person <var>Y</var><var>)</var>, exactly one of the following two relations holds: \"person <var>X</var> is stronger than person <var>Y</var>\" or \"person <var>Y</var> is stronger than person <var>X</var>.\"<br>\nThe superiority is <strong>transitive</strong>.  In other words, for all triplets of distinct programmers <var>(</var>person <var>X</var>, person <var>Y</var>, person <var>Z</var><var>)</var>, it holds that:</p>\n<ul>\n<li>if person <var>X</var> is stronger than person <var>Y</var> and person <var>Y</var> is stronger than person <var>Z</var>, then person <var>X</var> is stronger than person <var>Z</var>.</li>\n</ul>\n<p>A person <var>X</var> is said to be the <strong>strongest programmer</strong> if person <var>X</var> is stronger than person <var>Y</var> for all people <var>Y</var> other than person <var>X</var>.  (Under the constraints above, we can prove that there is always exactly one such person.)  </p>\n<p>You have <var>M</var> pieces of information on their superiority.  The <var>i</var>-th of them is that \"person <var>A_i</var> is stronger than person <var>B_i</var>.\"<br>\nCan you determine the strongest programmer among the <var>N</var> based on the information?<br>\nIf you can, print the person's number.  Otherwise, that is, if there are multiple possible strongest programmers, print <code>-1</code>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 50</var></li>\n<li><var>0 \\leq M \\leq \\frac{N(N-1)}{2}</var></li>\n<li><var>1 \\leq A_i, B_i \\leq N</var></li>\n<li><var>A_i \\neq B_i</var></li>\n<li>If <var>i \\neq j</var>, then <var>(A_i, B_i) \\neq (A_j, B_j)</var>.</li>\n<li>There is at least one way to determine superiorities for all pairs of distinct programmers, that is consistent with the given information.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>A_1</var> <var>B_1</var>\n<var>A_2</var> <var>B_2</var>\n<var>\\vdots</var>\n<var>A_M</var> <var>B_M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If you can uniquely determine the strongest programmer, print the person's number; otherwise, print <code>-1</code>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 2\n1 2\n2 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1\n</pre>\n<p>You have two pieces of information: \"person <var>1</var> is stronger than person <var>2</var>\" and \"person <var>2</var> is stronger than person <var>3</var>.\"<br>\nBy the transitivity, you can also infer that \"person <var>1</var> is stronger than person <var>3</var>,\" so person <var>1</var> is the strongest programmer.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>3 2\n1 3\n2 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>-1\n</pre>\n<p>Both person <var>1</var> and person <var>2</var> may be the strongest programmer.  Since you cannot uniquely determine which is the strongest, you should print <code>-1</code>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>6 6\n1 6\n6 5\n6 2\n2 3\n4 3\n4 2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>-1\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc313/tasks/abc313_b"}