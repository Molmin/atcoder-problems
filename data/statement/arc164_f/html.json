{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>900</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>頂点に <var>1</var> から <var>N</var> までの番号がついており、頂点 <var>1</var> を根とする <var>N</var> 頂点の根付き木が与えられます。\nこの木の頂点 <var>i</var> の親は頂点 <var>p_i</var> です（<var>2\\leq i\\leq N</var>）。</p>\n<p>Alice と Bob は、この木を使って、次のようなゲームを行います。</p>\n<ul>\n<li>Alice が先手、Bob が後手で、表裏を白と黒に塗り分けた石を使い、交互に <var>1</var> つずつ木の頂点に石を置いていく。この際、Alice は白い面を上に、Bob は黒い面を上にして置く。</li>\n<li>各手番で石を置いてよいのは、その頂点自身には石が置かれておらず、子孫である頂点には全て石が置かれている頂点のみである。</li>\n<li>石を置くとき、置いた頂点の子孫にある石を全て裏返す（置いた石自体は裏返さない）。</li>\n</ul>\n<p>全ての頂点に石が置かれるとゲーム終了となり、この時点で白い面が上になっている石の数を Alice の得点とします。</p>\n<p>Alice はできるだけ大きな得点を得ようとし、Bob は Alice の得点をできるだけ小さくしようとします。両者が最善の手順を取ったとき、Alice の得点はいくらでしょうか。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq p_i &lt; i</var> <var>(2\\leq i \\leq N)</var></li>\n<li>入力される値はすべて整数である</li>\n<li>与えられるグラフは木である</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>p_2</var> <var>p_3</var> <var>\\ldots</var> <var>p_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>答えを整数で出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>4\n1 1 2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>2\n</pre>\n<p>与えられた木では、初めに石を置くことのできる頂点は <var>3,4</var> のみです。ここから、例えば次のような進行が考えられます。</p>\n<ul>\n<li>Alice が頂点 <var>4</var> に白い面を上にして石を置く。この操作の後、頂点 <var>2</var> は子孫に全て石が置かれたので、石が置けるようになる。</li>\n<li>Bob が頂点 <var>2</var> に黒い面を上にして石を置き、頂点 <var>4</var> にある石を裏返して黒い面を上にする。</li>\n<li>Alice が頂点 <var>3</var> に白い面を上にして石を置く。</li>\n<li>Bob が頂点 <var>1</var> に黒い面を上にして石を置き、頂点 <var>2,3,4</var> にある石を全て裏返す。</li>\n</ul>\n<p>この場合、ゲーム終了時に頂点 <var>1,2,3,4</var> にある石はそれぞれ黒、白、黒、白が上になっています。実は、この進行は双方の最善手の一例であり、答えは <var>2</var> となります。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>7\n1 1 2 4 4 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>5\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>900</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a rooted tree with <var>N</var> vertices numbered from <var>1</var> to <var>N</var>, rooted at vertex <var>1</var>. The parent of vertex <var>i</var> is vertex <var>p_i</var> (<var>2\\leq i\\leq N</var>).</p>\n<p>Alice and Bob play a game using this tree as follows.</p>\n<ul>\n<li>Alice goes first, and Bob goes second. They take turns placing a stone, with a white side and a black side, on a vertex of the tree. Alice places the stone with the white side up, and Bob places the stone with the black side up.</li>\n<li>In each turn, a stone can only be placed on a vertex that does not have a stone on itself while all its descendants already have stones on them.</li>\n<li>When placing a stone on a vertex, all the stones on the descendants of that vertex are flipped over (the placed stone itself is not flipped).</li>\n</ul>\n<p>The game ends when all vertices have stones. Alice's score is the number of stones with the white side up at this point.</p>\n<p>Alice tries to maximize her score, and Bob tries to minimize Alice's score. If both play optimally, what will be Alice's score?</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq p_i &lt; i</var> <var>(2\\leq i \\leq N)</var></li>\n<li>All input values are integers.</li>\n<li>The given graph is a tree.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>p_2</var> <var>p_3</var> <var>\\ldots</var> <var>p_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the answer as an integer.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>4\n1 1 2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>2\n</pre>\n<p>In the given tree, the only vertices where a stone can be placed initially are <var>3</var> and <var>4</var>. One possible progression from here is as follows.</p>\n<ul>\n<li>Alice places a stone with the white side up on vertex <var>4</var>. After this operation, all descendants of vertex <var>2</var> have stones, so it is now possible to place a stone on vertex <var>2</var>.</li>\n<li>Bob places a stone with the black side up on vertex <var>2</var> and flips the stone on vertex <var>4</var> to have the black side up.</li>\n<li>Alice places a stone with the white side up on vertex <var>3</var>.</li>\n<li>Bob places a stone with the black side up on vertex <var>1</var> and flips all the stones on vertices <var>2</var>, <var>3</var>, and <var>4</var>.</li>\n</ul>\n<p>In this case, at the end of the game, the stones on vertices <var>1</var>, <var>2</var>, <var>3</var>, and <var>4</var> have black, white, black, and white sides up, respectively. In fact, this progression is an example of optimal sequences of moves for both players; the answer is <var>2</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>7\n1 1 2 4 4 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>5\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc164/tasks/arc164_f"}