{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>600</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点 <var>M</var> 辺の単純無向グラフが与えられます。<var>N</var> 個の頂点はそれぞれ頂点 <var>1</var> 、頂点 <var>2</var> 、<var>\\ldots</var> 、頂点 <var>N</var> と呼ばれます。<br>\n<var>i = 1, 2, \\ldots, M</var> について、<var>i</var> 番目の辺は頂点 <var>u_i</var> と頂点 <var>v_i</var> を結んでいます。<br>\nまた、<var>i = 1, 2, \\ldots, N</var> について、頂点 <var>i</var> には整数 <var>i</var> が書かれています。</p>\n<p><var>Q</var> 個のクエリが与えられます。<br>\n<var>i = 1, 2, \\ldots, Q</var> について、<var>i</var> 番目のクエリは整数 <var>x_i</var> で表されます。\n<var>i</var> 番目のクエリでは以下の操作をおこないます。</p>\n<ol>\n<li>頂点 <var>x_i</var> に書かれている整数を <var>X</var> とおく。</li>\n<li>頂点 <var>x_i</var> と隣接するすべての頂点について、それに書かれた整数を <var>X</var> に書き換える。</li>\n</ol>\n<p>ただし、頂点 <var>u</var> と頂点 <var>v</var> が隣接するとは、頂点 <var>u</var> と頂点 <var>v</var> を結ぶ辺が存在することを言います。</p>\n<p>入力で与えられる順にすべてのクエリを処理した後の時点における、各頂点に書かれた整数をそれぞれ出力して下さい。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>0 \\leq M \\leq \\min(2 \\times 10^5, N(N-1)/2)</var></li>\n<li><var>1 \\leq Q \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq u_i, v_i \\leq N</var></li>\n<li><var>1 \\leq x_i \\leq N</var></li>\n<li>与えられるグラフは単純である。すなわち、自己ループや多重辺は存在しない。</li>\n<li>入力はすべて整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var> <var>Q</var>\n<var>u_1</var> <var>v_1</var>\n<var>u_2</var> <var>v_2</var>\n<var>\\vdots</var>\n<var>u_M</var> <var>v_M</var>\n<var>x_1</var> <var>x_2</var> <var>\\ldots</var> <var>x_Q</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>すべてのクエリを処理した後の時点における、各頂点に書かれた整数を以下の形式で空白区切りで出力せよ。<br>\nただし、<var>i = 1, 2, \\ldots, N</var> について <var>A_i</var> は頂点 <var>i</var> に書かれた整数を表す。</p>\n<pre><var>A_1</var> <var>A_2</var> <var>\\ldots</var> <var>A_N</var>\n</pre>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5 6 3\n4 2\n4 3\n1 2\n2 3\n4 5\n1 5\n1 3 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1 3 3 3 3\n</pre>\n<p>それぞれのクエリでは以下のような操作が行われます。</p>\n<ul>\n<li><var>1</var> 番目のクエリ <var>(x_1 = 1)</var> :  頂点 <var>1</var> に書かれた整数は <var>1</var> であり、頂点 <var>1</var> に隣接する頂点は頂点 <var>2</var> と頂点 <var>5</var> です。\nよって、頂点 <var>2</var> と頂点 <var>5</var> に書かれた整数がそれぞれ <var>1</var> に書き換えられます。</li>\n<li><var>2</var> 番目のクエリ <var>(x_2 = 3)</var> :  頂点 <var>3</var> に書かれた整数は <var>3</var> であり、頂点 <var>3</var> に隣接する頂点は頂点 <var>2</var> と頂点 <var>4</var> です。よって、頂点 <var>2</var> と頂点 <var>4</var> に書かれた整数がそれぞれ <var>3</var> に書き換えられます。</li>\n<li><var>3</var> 番目のクエリ <var>(x_3 = 4)</var> :  頂点 <var>4</var> に書かれた整数は <var>3</var> であり、頂点 <var>4</var> に隣接する頂点は頂点 <var>2</var> 、頂点 <var>3</var> 、頂点 <var>5</var> です。よって、頂点 <var>2</var> 、頂点 <var>3</var> 、頂点 <var>5</var> に書かれた整数がそれぞれ <var>3</var> に書き換えられます。\n（頂点 <var>2</var> と頂点 <var>3</var> にはすでに <var>3</var> が書かれているので、書かれた整数が実際に変更されるのは頂点 <var>5</var> のみです。）</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>14 14 8\n7 4\n13 9\n9 8\n4 3\n7 2\n13 8\n12 8\n11 3\n6 3\n7 14\n6 5\n1 4\n10 13\n5 2\n2 6 12 9 1 10 5 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>1 6 1 1 6 6 1 9 9 10 11 12 10 14\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>600</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a simple undirected graph with <var>N</var> vertices and <var>M</var> edges. The <var>N</var> vertices are called Vertex <var>1</var>, Vertex <var>2</var>, <var>\\ldots</var>, Vertex <var>N</var>.<br>\nFor each <var>i = 1, 2, \\ldots, M</var>, the <var>i</var>-th edge connects Vertex <var>u_i</var> and Vertex <var>v_i</var>.<br>\nAdditionally, for each <var>i = 1, 2, \\ldots, N</var>, Vertex <var>i</var> has an integer <var>i</var> written on it.</p>\n<p>You are also given <var>Q</var> queries.<br>\nFor each <var>i = 1, 2, \\ldots, Q</var>, the <var>i</var>-th query is represented as an integer <var>x_i</var>.\nThis query involves the following operation.</p>\n<ol>\n<li>Let <var>X</var> be the integer written on Vertex <var>x_i</var>.</li>\n<li>For every vertex adjacent to Vertex <var>x_i</var>, replace the integer written on it with <var>X</var>.</li>\n</ol>\n<p>Here, Vertex <var>u</var> and Vertex <var>v</var> are said to be adjacent when there is an edge connecting them.</p>\n<p>Print the integer written on each vertex after all queries are processed in the order they are given from input.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>0 \\leq M \\leq \\min(2 \\times 10^5, N(N-1)/2)</var></li>\n<li><var>1 \\leq Q \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq u_i, v_i \\leq N</var></li>\n<li><var>1 \\leq x_i \\leq N</var></li>\n<li>The given graph is simple. In other words, it has no self-loops and no multi-edges.</li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var> <var>Q</var>\n<var>u_1</var> <var>v_1</var>\n<var>u_2</var> <var>v_2</var>\n<var>\\vdots</var>\n<var>u_M</var> <var>v_M</var>\n<var>x_1</var> <var>x_2</var> <var>\\ldots</var> <var>x_Q</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the integers written on the vertices after all queries are processed, in the format below, with spaces in between.<br>\nHere, for each <var>i = 1, 2, \\ldots, N</var>, <var>A_i</var> denotes the integer written on Vertex <var>i</var>.</p>\n<pre><var>A_1</var> <var>A_2</var> <var>\\ldots</var> <var>A_N</var>\n</pre>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5 6 3\n4 2\n4 3\n1 2\n2 3\n4 5\n1 5\n1 3 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1 3 3 3 3\n</pre>\n<p>Each query involves the following operation.</p>\n<ul>\n<li>The first query <var>(x_1 = 1)</var>: Vertex <var>1</var> has the integer <var>1</var> written on it, and the vertices adjacent to Vertex <var>1</var> are Vertices <var>2</var> and <var>5</var>.\nThus, the integers on Vertices <var>2</var> and <var>5</var> get replaced with <var>1</var>.</li>\n<li>The second query <var>(x_2 = 3)</var>: Vertex <var>3</var> has the integer <var>3</var> written on it, and the vertices adjacent to Vertex <var>3</var> are Vertices <var>2</var> and <var>4</var>.\nThus, the integers on Vertices <var>2</var> and <var>4</var> get replaced with <var>3</var>.</li>\n<li>The third query <var>(x_3 = 4)</var>: Vertex <var>4</var> has the integer <var>3</var> written on it, and the vertices adjacent to Vertex <var>4</var> are Vertices <var>2</var>, <var>3</var>, and <var>5</var>.\nThus, the integers on Vertices <var>2</var>, <var>3</var>, and <var>5</var> get replaced with <var>3</var>.\n(Vertices <var>2</var> and <var>3</var> already have <var>3</var> written on them, so the actual change takes place only on Vertex <var>5</var>.)</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>14 14 8\n7 4\n13 9\n9 8\n4 3\n7 2\n13 8\n12 8\n11 3\n6 3\n7 14\n6 5\n1 4\n10 13\n5 2\n2 6 12 9 1 10 5 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>1 6 1 1 6 6 1 9 9 10 11 12 10 14\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc219/tasks/abc219_g"}