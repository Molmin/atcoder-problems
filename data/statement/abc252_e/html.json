{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>500</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>AtCoder 王国には都市 <var>1,2,\\ldots,N</var> の <var>N</var> 個の都市と、道路 <var>1,2,\\ldots,M</var> の <var>M</var> 本の道路があります。<br>\n道路 <var>i</var> は都市 <var>A_i</var> と <var>B_i</var> を双方向に結び、距離は <var>C_i</var> です。<br>\nどの都市間もいくつかの道路を通って行き来することができます。</p>\n<p>財政難である王国は、どの都市間もいくつかの道路を通って行き来できるという条件を満たすように <var>N-1</var> 本の道路を保守し、それ以外の道路を廃道にすることにしました。</p>\n<p>保守する道路のみを通って都市 <var>1</var> から都市 <var>i</var> へ移動するときの距離を <var>d_i</var> とするとき、保守する道路の選び方であって、<var>d_2+d_3+\\ldots+d_N</var> を最小化するようなものを <var>1</var> つ出力してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 2\\times 10^5</var></li>\n<li><var>N-1 \\leq M \\leq 2\\times 10^5</var></li>\n<li><var>1 \\leq A_i &lt; B_i \\leq N</var></li>\n<li><var>i\\neq j</var> のとき、<var>(A_i,B_i)\\neq(A_j,B_j)</var></li>\n<li><var>1\\leq C_i \\leq 10^9</var></li>\n<li>どの都市間もいくつかの道路を通って行き来することができる</li>\n<li>入力に含まれる値は全て整数である</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>A_1</var> <var>B_1</var> <var>C_1</var>\n<var>A_2</var> <var>B_2</var> <var>C_2</var>\n<var>\\vdots</var>\n<var>A_M</var> <var>B_M</var> <var>C_M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>保守するような道路の番号を空白区切りで出力せよ。出力の順序は問わない。<br>\n答えが複数存在する場合、どれを出力しても正解とみなされる。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 3\n1 2 1\n2 3 2\n1 3 10\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1 2\n</pre>\n<p>保守する道路の選び方と <var>d_i</var> の値は次のようになります。</p>\n<ul>\n<li>道路 <var>1,2</var> を保守するとき、<var>d_2=1</var>, <var>d_3=3</var></li>\n<li>道路 <var>1,3</var> を保守するとき、<var>d_2=1</var>, <var>d_3=10</var></li>\n<li>道路 <var>2,3</var> を保守するとき、<var>d_2=12</var>, <var>d_3=10</var></li>\n</ul>\n<p>よって、道路 <var>1,2</var> を保守するときに <var>d_2+d_3</var> が最小になります。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>4 6\n1 2 1\n1 3 1\n1 4 1\n2 3 1\n2 4 1\n3 4 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>3 1 2\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>500</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>The Kingdom of AtCoder has <var>N</var> cities called City <var>1,2,\\ldots,N</var> and <var>M</var> roads called Road <var>1,2,\\ldots,M</var>.<br>\nRoad <var>i</var> connects Cities <var>A_i</var> and <var>B_i</var> bidirectionally and has a length of <var>C_i</var>.<br>\nOne can travel between any two cities using some roads.</p>\n<p>Under financial difficulties, the kingdom has decided to maintain only <var>N-1</var> roads so that one can still travel between any two cities using those roads and abandon the rest.</p>\n<p>Let <var>d_i</var> be the total length of the roads one must use when going from City <var>1</var> to City <var>i</var> using only maintained roads. Print a choice of roads to maintain that minimizes <var>d_2+d_3+\\ldots+d_N</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 2\\times 10^5</var></li>\n<li><var>N-1 \\leq M \\leq 2\\times 10^5</var></li>\n<li><var>1 \\leq A_i &lt; B_i \\leq N</var></li>\n<li><var>(A_i,B_i)\\neq(A_j,B_j)</var> if <var>i\\neq j</var>.</li>\n<li><var>1\\leq C_i \\leq 10^9</var></li>\n<li>One can travel between any two cities using some roads.</li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>A_1</var> <var>B_1</var> <var>C_1</var>\n<var>A_2</var> <var>B_2</var> <var>C_2</var>\n<var>\\vdots</var>\n<var>A_M</var> <var>B_M</var> <var>C_M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the indices of roads to maintain, in arbitrary order, with spaces in between.<br>\nIf multiple solutions exist, you may print any of them.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 3\n1 2 1\n2 3 2\n1 3 10\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1 2\n</pre>\n<p>Here are the possible choices of roads to maintain and the corresponding values of <var>d_i</var>.</p>\n<ul>\n<li>Maintain Road <var>1</var> and <var>2</var>: <var>d_2=1</var>, <var>d_3=3</var>.</li>\n<li>Maintain Road <var>1</var> and <var>3</var>: <var>d_2=1</var>, <var>d_3=10</var>.</li>\n<li>Maintain Road <var>2</var> and <var>3</var>: <var>d_2=12</var>, <var>d_3=10</var>.</li>\n</ul>\n<p>Thus, maintaining Road <var>1</var> and <var>2</var> minimizes <var>d_2+d_3</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>4 6\n1 2 1\n1 3 1\n1 4 1\n2 3 1\n2 4 1\n3 4 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>3 1 2\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc252/tasks/abc252_e"}