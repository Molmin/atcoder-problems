{"html":{"ja":"<span class=\"lang-ja\">\n\n<div class=\"part\">\n<section>\n<h3>ストーリー</h3><p>高橋くんはイベントホールの管理をしている。\nこのイベントホールは、パーティションを設置していくつかの長方形区画に区切ることが出来、各区画を別々の団体に貸し出している。</p>\n<p>数日間の予約状況が与えられる。\n各予約ごとに希望する区画の面積が指定されており、割り当てた区画の面積が指定された面積を下回った場合、コストが発生する。\nまた、区画の区切りを変更するためのパーティションの設置・撤去にも長さに応じたコストが発生する。\n出来るだけコストの総和が小さくなるようにイベントホールを運営して欲しい。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>縦横の長さが共に <var>W</var> のグリッドとして表現されるイベントホールがある。\n一番左上の格子点の座標を <var>(0,0)</var> とし、そこから下方向に <var>i</var> マス、右方向に <var>j</var> マス進んだ先の格子点の座標を <var>(i,j)</var> とする。\n一番右下の格子点の座標は <var>(W, W)</var> である。</p>\n<p><var>D</var> 日分の予約状況が与えられる。\n各日の予約数は全て <var>N</var> であり、<var>d=0,1,\\cdots,D-1</var> 日目の <var>k=0,1,\\cdots,N-1</var> 番目の予約は面積 <var>a_{d,k}</var> 以上の長方形区画の貸出を希望している。\n貸し出す長方形の形と位置は自由であるが、軸に平行かつ各頂点が格子点でなければならない。\nまた、同じ日の異なる2つの予約に対する長方形は正の面積の共通部分を持ってはならない。\n貸し出されない空きスペースが残るのは構わない。</p>\n<p><var>d</var> 日目の <var>k</var> 番目の予約に対して貸し出す長方形区画を <var>R_{d,k}</var>、その面積を <var>b_{d,k}</var> とする。\n<var>a_{d,k}&gt;b_{d,k}</var> の場合、<var>100\\times (a_{d,k}-b_{d,k})</var> のコストが発生する。\n<var>a_{d,k}\\leq b_{d,k}</var> の場合にはコストは発生しない。</p>\n<p>各長方形 <var>R_{d,k}</var> の外周のうち、グリッドの外周ではない部分にはパーティションを設置する必要があり、逆に、それ以外の場所にはパーティションが存在してはならない。\n<var>d</var> 日目には、<var>d-1</var> 日目のパーティションの配置から、この条件を満たすようにパーティションの設置・撤去を行う必要がある。\n<var>d</var> 日目に設置・撤去を行ったパーティションの長さの合計が <var>L_d</var> のとき、<var>L_d</var> のコストが発生する。\nただし、<strong>初日は特別に <var>L_0=0</var> とする。</strong></p>\n<p>より詳細には、<var>L_d</var> は以下のように計算される。\n各 <var>d=0,\\cdots,D-1</var> に対して、グリッドの外周を除いた内部に含まれる横方向の各線分 <var>(i,j)-(i,j+1)</var> (<var>1\\leq i\\leq W-1, 0\\leq j\\leq W-1</var>) がいずれかの <var>R_{d,k}</var> の外周上にある場合、\n<var>H_{d,i,j}=1</var>、そうでない場合に <var>H_{d,i,j}=0</var> と定義する。\nこの時、<var>H_{d-1,i,j}\\neq H_{d,i,j}</var> であるような <var>(i,j)</var> 1つにつき、<var>L_d</var> に1が加算される。\n同様に、縦方向の各線分 <var>(i,j)-(i+1,j)</var> (<var>0\\leq i\\leq W-1, 1\\leq j\\leq W-1</var>) がいずれかの <var>R_{d,k}</var> の外周上にある場合、\n<var>V_{d,i,j}=1</var>、そうでない場合に <var>V_{d,i,j}=0</var> と定義する。\nこの時、<var>V_{d-1,i,j}\\neq V_{d,i,j}</var> であるような <var>(i,j)</var> 1つにつき、<var>L_d</var> に1が加算される。</p>\n<p>コストの合計が出来るだけ小さくなるように、貸し出す長方形区画を決定せよ。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>得点</h3><p><var>D</var> 日間のコストの合計が <var>C</var> のとき、<var>C+1</var> の絶対スコアが得られる。\n<strong>絶対スコアは小さければ小さいほど良い。</strong></p>\n<p>各テストケース毎に、<var>\\mathrm{round}(10^9\\times \\frac{全参加者中の最小絶対スコア}{自身の絶対スコア})</var> の<font color=\"red\"><strong>相対評価スコア</strong></font>が得られ、その和が提出の得点となる。</p>\n<p>最終順位はコンテスト終了後に実施されるより多くの入力に対するシステムテストにおける得点で決定される。\n暫定テスト、システムテストともに、一部のテストケースで不正な出力や制限時間超過をした場合、そのテストケースの相対評価スコアは0点となり、そのテストケースにおいては「全参加者中の最小絶対スコア」の計算から除外される。\nシステムテストは<font color=\"red\"><strong> <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"コンパイルエラー\">CE</span> 以外の結果を得た一番最後の提出</strong></font>に対してのみ行われるため、最終的に提出する解答を間違えないよう注意せよ。</p>\n<h4>テストケース数</h4>\n<ul>\n<li>暫定テスト: 50個</li>\n<li>システムテスト: 2000個、コンテスト終了後に <a href=\"https://img.atcoder.jp/ahc031/seeds.txt\">seeds.txt</a> (sha256=16f021f46aad43a81ad05ebf38ed2b6ac813eafacbb6ad98549832218314db8f) を公開</li>\n</ul>\n<h4>相対評価システムについて</h4>\n<p>暫定テスト、システムテストともに、<span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"コンパイルエラー\">CE</span> 以外の結果を得た一番最後の提出のみが順位表に反映される。\n相対評価スコアの計算に用いられる各テストケース毎の全参加者中の最小絶対スコアの算出においても、順位表に反映されている最終提出のみが用いられる。</p>\n<p>順位表に表示されているスコアは相対評価スコアであり、新規提出があるたびに、相対評価スコアが再計算される。\n一方、提出一覧から確認出来る各提出のスコアは各テストケース毎の絶対スコアをそのまま足し合わせたものであり、相対評価スコアは表示されない。\n最新以外の提出の、現在の順位表における相対評価スコアを知るためには、再提出が必要である。\n不正な出力や制限時間超過をした場合、提出一覧から確認出来るスコアは0となるが、順位表には正解したテストケースに対する相対スコアの和が表示されている。</p>\n<h4>実行時間について</h4>\n<p>実行時間には多少のブレが生じます。\nまた、システムテストでは同時に大量の実行を行うため、暫定テストに比べて数%程度実行時間が伸びる現象が確認されています。\nそのため、実行時間制限ギリギリの提出がシステムテストで<span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"実行時間制限超過\">TLE</span>となる可能性があります。\nプログラム内で時間を計測して処理を打ち切るか、実行時間に余裕を持たせるようお願いします。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>W</var> <var>D</var> <var>N</var>\n<var>a_{0,0}</var> <var>\\cdots</var> <var>a_{0,N-1}</var>\n<var>\\vdots</var>\n<var>a_{D-1,0}</var> <var>\\cdots</var> <var>a_{D-1,N-1}</var>\n</pre>\n\n<ul>\n<li>グリッドの縦横の長さ <var>W</var> は <var>W=1000</var> で固定である。</li>\n<li>日数 <var>D</var> は <var>5\\leq D\\leq 50</var> を満たす。</li>\n<li>各日の予約数 <var>N</var> は <var>5\\leq N\\leq 50</var> を満たす。</li>\n<li><var>d</var> 日目の <var>k</var> 番目の予約が希望する面積 <var>a_{d,k}</var> は <var>1\\leq a_{d,0}\\leq \\cdots\\leq a_{d,N-1}</var> を満たす整数値であり、その和は <var>a_{d,0}+\\cdots+a_{d,N-1}\\leq W^2</var> を満たす。</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>d</var> 日目の <var>k</var> 番目の予約に対して貸し出す長方形の左上の頂点の座標を <var>(i_{d,k},j_{d,k})</var>、右下の頂点の座標を <var>(i_{d,k}',j_{d,k}')</var> としたとき、\n以下の形式で標準出力に出力せよ。</p>\n<pre><var>i_{0,0}</var> <var>j_{0,0}</var> <var>i_{0,0}'</var> <var>j_{0,0}'</var>\n<var>\\vdots</var>\n<var>i_{0,N-1}</var> <var>j_{0,N-1}</var> <var>i_{0,N-1}'</var> <var>j_{0,N-1}'</var>\n<var>\\vdots</var>\n<var>i_{D-1,0}</var> <var>j_{D-1,0}</var> <var>i_{D-1,0}'</var> <var>j_{D-1,0}'</var>\n<var>\\vdots</var>\n<var>i_{D-1,N-1}</var> <var>j_{D-1,N-1}</var> <var>i_{D-1,N-1}'</var> <var>j_{D-1,N-1}'</var>\n</pre>\n\n<p>各長方形は <var>0\\leq i_{d,k}\\lt i_{d,k}'\\leq W</var> と <var>0\\leq j_{d,k}\\lt j_{d,k}'\\leq W</var> を満たす必要がある。\nこの条件を満たさない場合、<span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"不正解\">WA</span> と判定される。</p>\n<p><a href=\"https://img.atcoder.jp/ahc031/PJcas1sL.html?lang=ja&amp;seed=0&amp;output=sample\">例を見る</a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>サンプルプログラム</h3><details>\n\n<p>Pythonでの解答例を示す。 このプログラムでは、<var>k</var> 番目の長方形として左上が <var>(k,0)</var>、右下が <var>(k+1,W)</var> のものを出力している。</p>\n<pre class=\"prettyprint linenums\"># read input\nW, D, N = map(int, input().split())\na = []\nfor d in range(D):\n    a.append(list(map(int, input().split())))\n\n# determine rectangles\nrect = [[] for _ in range(D)]\nfor d in range(D):\n    for k in range(N):\n        rect[d].append((k, 0, k + 1, W))\n\n# output\nfor d in range(D):\n    for k in range(N):\n        i0, j0, i1, j1 = rect[d][k]\n        print(i0, j0, i1, j1)\n</pre>\n\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>入力生成方法</h3><details>\n\n<p><var>L</var> 以上 <var>U</var> 以下の整数値を一様ランダムに生成する関数を <var>\\mathrm{rand}(L,U)</var> で表す。</p>\n<p>日数 <var>D</var> は <var>D=\\mathrm{rand}(5,50)</var> により生成される。\n各日の予約数 <var>N</var> は <var>N=\\mathrm{rand}(5,50)</var> により生成される。\nパラメータ <var>e</var> を、<var>e=\\mathrm{rand}(500,5000)/10000</var> により生成し、平均空き面積 <var>E</var> を <var>E=\\mathrm{round}(W^2 e^2)</var> と設定する。\n各 <var>d=0,\\cdots,D-1</var> に対し、以下のようにして <var>a_{d,0},\\cdots,a_{d,N-1}</var> を生成する。</p>\n<p>まず、<var>T_d=\\mathrm{rand}(W^2-\\mathrm{floor}(\\frac{3E}{2}),W^2-\\mathrm{floor}(\\frac{E}{2}))</var> を生成する。\n次に、集合 <var>S=\\{0,T_d\\}</var> から開始し、<var>S</var> の要素数が <var>N+1</var> となるまで、<var>\\mathrm{rand}(1,T_d-1)</var> を生成して <var>S</var> に追加する。\n作成した集合 <var>S</var> の要素を小さい方から順に <var>s_0(=0),s_1,\\cdots,s_{N-1},s_N(=T_d)</var> としたとき、\n<var>a_{d,k}=s_{k+1}-s_k</var> と設定する。\n最後に <var>a_{d,0},\\cdots,a_{d,N-1}</var> を昇順に並び替える。</p>\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>ツール(入力ジェネレータ・ビジュアライザ)</h3><ul>\n<li><a href=\"https://img.atcoder.jp/ahc031/PJcas1sL.html?lang=ja\">Web版</a>: ローカル版より高性能でアニメーション表示が可能です。</li>\n<li><a href=\"https://img.atcoder.jp/ahc031/PJcas1sL.zip\">ローカル版</a>: 使用するには<a href=\"https://www.rust-lang.org/ja\">Rust言語</a>のコンパイル環境をご用意下さい。<ul>\n<li><a href=\"https://img.atcoder.jp/ahc031/PJcas1sL_windows.zip\">Windows用のコンパイル済みバイナリ</a>: Rust言語の環境構築が面倒な方は代わりにこちらをご利用下さい。</li>\n</ul>\n</li>\n</ul>\n<p>コンテスト期間中に、ビジュアライズ結果の共有や、解法・考察に関する言及は禁止されています。ご注意下さい。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre style=\"max-height:200px;overflow-y:scroll\">1000 5 10\n6508 11666 12167 16717 46095 55928 56542 127260 200961 202211\n11754 15667 26620 31851 48890 50181 52520 53150 263650 280526\n7171 7218 14268 26231 37133 47199 93385 131356 174634 189807\n10290 15811 16235 39805 45168 75830 76161 137648 148368 152504\n6553 22994 44284 45120 67646 68899 98726 129109 138615 247097\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre style=\"max-height:200px;overflow-y:scroll\">0 43 23 326\n747 654 824 843\n863 2 1000 469\n824 621 892 869\n892 469 983 977\n23 19 676 105\n58 917 742 1000\n494 398 747 917\n85 105 863 398\n6 398 403 911\n166 917 329 1000\n6 848 266 911\n403 803 588 1000\n863 633 983 977\n361 19 494 398\n361 398 494 803\n494 105 588 767\n863 0 1000 633\n588 0 863 1000\n0 19 361 848\n10 740 81 841\n949 196 1000 425\n538 396 588 764\n883 425 988 748\n0 0 189 268\n0 268 189 540\n588 396 883 764\n515 76 949 396\n81 767 873 1000\n189 0 515 583\n363 460 538 767\n363 767 600 923\n762 767 873 923\n288 923 807 1000\n0 0 1000 76\n188 397 363 832\n10 376 188 841\n0 76 462 376\n515 76 949 425\n538 425 988 764\n10 376 86 736\n288 452 330 1000\n1 76 243 265\n349 283 604 460\n86 397 288 736\n0 736 288 1000\n243 8 604 283\n330 520 600 1000\n600 638 1000 1000\n604 0 1000 638\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n\n<div class=\"part\">\n<section>\n<h3>Story</h3><p>Takahashi manages an event hall.\nThis event hall can be divided into several rectangular sections by installing partitions, and each section is rented out to different groups.</p>\n<p>You are given a reservation status for several days.\nFor each reservation, the desired area of the section is specified, and if the area of the assigned section is less than the specified area, a cost will be incurred.\nAdditionally, installation and removal of partitions to change the divisions of sections incurs a cost based on the length of the partitions.\nPlease operate the event hall to minimize the total cost as much as possible.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There is an event hall represented as a grid whose vertical and horizontal lengths are both <var>W</var>.\nLet <var>(0,0)</var> be the coordinates of the top-left grid point, and <var>(i,j)</var> be the coordinates of the grid point <var>i</var> squares down and <var>j</var> squares to the right from there.\nThe coordinates of the bottom-right grid point are <var>(W, W)</var>.</p>\n<p>You are given a reservation status for <var>D</var> days.\nThe number of reservations for each day are all <var>N</var>, and the <var>k=0,1,\\cdots,N-1</var>-th reservation on day <var>d=0,1,\\cdots,D-1</var> desires to rent a rectangular section of at least area <var>a_{d,k}</var>.\nThe shape and position of the rented rectangles are flexible, but they must be parallel to the axes and each vertex must be a grid point.\nFurthermore, rectangles for two different reservations on the same day must not have a positive area in common.\nIt is acceptable for there to be some vacant space that remains unrented.</p>\n<p>Let <var>R_{d,k}</var> be the rectangle for the <var>k</var>-th reservation on day <var>d</var> and <var>b_{d,k}</var> be its area.\nIf <var>a_{d,k}&gt;b_{d,k}</var>, a cost of <var>100\\times (a_{d,k}-b_{d,k})</var> is incurred.\nIf <var>a_{d,k}\\leq b_{d,k}</var>, no cost is incurred.</p>\n<p>Partitions must be installed along the part of the perimeter of each rectangle <var>R_{d,k}</var> that do not lie on the perimeter of the grid, and conversely, partitions must not exist anywhere else.\nOn day <var>d</var>, you must install and remove partitions from the configuration of day <var>d-1</var> to meet this condition.\nIf the total length of partitions installed and removed on day <var>d</var> is <var>L_d</var>, a cost of <var>L_d</var> is incurred.\nHowever, as a special case, <strong>we assume <var>L_0=0</var> on the first day.</strong></p>\n<p>More precisely, <var>L_d</var> is computed as follows.\nFor each <var>d=0,\\cdots,D-1</var> and each horizontal line segment <var>(i,j)-(i,j+1)</var> (<var>1\\leq i\\leq W-1, 0\\leq j\\leq W-1</var>) within the interior, excluding the perimeter of the grid, we define <var>H_{d,i,j}=1</var> if it lies on the perimeter of any <var>R_{d,k}</var>, otherwise we define <var>H_{d,i,j}=0</var>.\nThen 1 is added to <var>L_d</var> for each <var>(i,j)</var> such that <var>H_{d-1,i,j}\\neq H_{d,i,j}</var>.\nSimilarly, for each vertical line segment <var>(i,j)-(i+1,j)</var> (<var>0\\leq i\\leq W-1, 1\\leq j\\leq W-1</var>) that lies on the perimeter of any <var>R_{d,k}</var>,\nwe define <var>V_{d,i,j}=1</var>, and otherwise <var>V_{d,i,j}=0</var>.\nThen 1 is added to <var>L_d</var> for each <var>(i,j)</var> such that <var>V_{d-1,i,j}\\neq V_{d,i,j}</var>.</p>\n<p>Your task is to determine the rectangular sections to be rented out so that the total cost is as small as possible.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Scoring</h3><p>When the total cost of <var>D</var> days is <var>C</var>, you obtain an absolute score of <var>C+1</var>.\n<strong>The lower the absolute score, the better.</strong></p>\n<p>For each test case, we compute the <font color=\"red\"><strong>relative score</strong></font> <var>\\mathrm{round}(10^9\\times \\frac{\\mathrm{MIN}}{\\mathrm{YOUR}})</var>, where YOUR is your absolute score and MIN is the lowest absolute score among all competitors obtained on that test case. The score of the submission is the sum of the relative scores.</p>\n<p>The final ranking will be determined by the system test with more inputs which will be run after the contest is over.\nIn both the provisional/system test, if your submission produces illegal output or exceeds the time limit for some test cases, only the score for those test cases will be zero, and your submission will be excluded from the MIN calculation for those test cases.</p>\n<p>The system test will be performed only for <font color=\"red\"><strong>the last submission which received a result other than <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Compilation Error\">CE</span> </strong></font>.\nBe careful not to make a mistake in the final submission.</p>\n<h4>Number of test cases</h4>\n<ul>\n<li>Provisional test: 50</li>\n<li>System test: 2000. We will publish <a href=\"https://img.atcoder.jp/ahc031/seeds.txt\">seeds.txt</a> (sha256=16f021f46aad43a81ad05ebf38ed2b6ac813eafacbb6ad98549832218314db8f) after the contest is over.</li>\n</ul>\n<h4>About relative evaluation system</h4>\n<p>In both the provisional/system test, the standings will be calculated using only the last submission which received a result other than <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Compilation Error\">CE</span>.\nOnly the last submissions are used to calculate the MIN for each test case when calculating the relative scores.</p>\n<p>The scores shown in the standings are relative, and whenever a new submission arrives, all relative scores are recalculated.\nOn the other hand, the score for each submission shown on the submissions page is the sum of the absolute score for each test case, and the relative scores are not shown.\nIn order to know the relative score of submission other than the latest one in the current standings, you need to resubmit it.\nIf your submission produces illegal output or exceeds the time limit for some test cases, the score shown on the submissions page will be 0, but the standings show the sum of the relative scores for the test cases that were answered correctly.</p>\n<h4>About execution time</h4>\n<p>Execution time may vary slightly from run to run.\nIn addition, since system tests simultaneously perform a large number of executions, it has been observed that execution time increases by several percent compared to provisional tests.\nFor these reasons, submissions that are very close to the time limit may result in <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Time Limit Exceeded\">TLE</span> in the system test.\nPlease measure the execution time in your program to terminate the process, or have enough margin in the execution time.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format.</p>\n<pre><var>W</var> <var>D</var> <var>N</var>\n<var>a_{0,0}</var> <var>\\cdots</var> <var>a_{0,N-1}</var>\n<var>\\vdots</var>\n<var>a_{D-1,0}</var> <var>\\cdots</var> <var>a_{D-1,N-1}</var>\n</pre>\n\n<ul>\n<li>The horizontal and vertical length of the grid <var>W</var> is fixed at <var>W=1000</var>.</li>\n<li>The number of days <var>D</var> satisfies <var>5\\leq D\\leq 50</var>.</li>\n<li>The number of reservations <var>N</var> for each day satisfies <var>5\\leq N\\leq 50</var>.</li>\n<li>The desired area <var>a_{d,k}</var> of the <var>k</var>-th reservation on day <var>d</var> is an integer value satisfying <var>1\\leq a_{d,0}\\leq \\cdots\\leq a_{d,N-1}</var> and its sum satisfies <var>a_{d,0}+\\cdots+a_{d,N-1}\\leq W^2</var>.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>When renting out a rectangle whose top-left vertex has coordinates <var>(i_{d,k},j_{d,k})</var> and whose bottom-right vertex has coordinates <var>(i_{d,k}',j_{d,k}')</var> for the <var>k</var>-th reservation on day <var>d</var>, output to Standard Output in the following format.</p>\n<pre><var>i_{0,0}</var> <var>j_{0,0}</var> <var>i_{0,0}'</var> <var>j_{0,0}'</var>\n<var>\\vdots</var>\n<var>i_{0,N-1}</var> <var>j_{0,N-1}</var> <var>i_{0,N-1}'</var> <var>j_{0,N-1}'</var>\n<var>\\vdots</var>\n<var>i_{D-1,0}</var> <var>j_{D-1,0}</var> <var>i_{D-1,0}'</var> <var>j_{D-1,0}'</var>\n<var>\\vdots</var>\n<var>i_{D-1,N-1}</var> <var>j_{D-1,N-1}</var> <var>i_{D-1,N-1}'</var> <var>j_{D-1,N-1}'</var>\n</pre>\n\n<p>Each rectangle must satisfy <var>0\\leq i_{d,k}\\lt i_{d,k}'\\leq W</var> and <var>0\\leq j_{d,k}\\lt j_{d,k}'\\leq W</var>.\nIf this condition is not met, the submission will be judged as <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Wrong Answer\">WA</span>.</p>\n<p><a href=\"https://img.atcoder.jp/ahc031/PJcas1sL.html?lang=en&amp;seed=0&amp;output=sample\">Show example</a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Solution</h3><details>\n\n<p>This is a sample solution in Python.\nThe program outputs the <var>k</var>-th rectangle with the top left <var>(k,0)</var> and the bottom right <var>(k+1,W)</var>.</p>\n<pre class=\"prettyprint linenums\"># read input\nW, D, N = map(int, input().split())\na = []\nfor d in range(D):\n    a.append(list(map(int, input().split())))\n\n# determine rectangles\nrect = [[] for _ in range(D)]\nfor d in range(D):\n    for k in range(N):\n        rect[d].append((k, 0, k + 1, W))\n\n# output\nfor d in range(D):\n    for k in range(N):\n        i0, j0, i1, j1 = rect[d][k]\n        print(i0, j0, i1, j1)\n</pre>\n\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Input Generation</h3><details>\n\n<p>Let <var>\\mathrm{rand}(L,U)</var> be a function that generates a uniform random integer between <var>L</var> and <var>U</var>, inclusive.</p>\n<p>We generate the number of days <var>D</var> by <var>D=\\mathrm{rand}(5,50)</var>.\nWe generate the number of reservations <var>N</var> for each day by <var>N=\\mathrm{rand}(5,50)</var>.\nA parameter <var>e</var> is generated by <var>e=\\mathrm{rand}(500,5000)/10000</var> and we set the average free area <var>E</var> to <var>E=\\mathrm{round}(W^2 e^2)</var>.\nFor each <var>d=0,\\cdots,D-1</var>, we generate <var>a_{d,0},\\cdots,a_{d,N-1}</var> as follows</p>\n<p>First, we generate <var>T_d=\\mathrm{rand}(W^2-\\mathrm{floor}(\\frac{3E}{2}),W^2-\\mathrm{floor}(\\frac{E}{2}))</var>.\nNext, starting from the set <var>S=\\{0,T_d\\}</var>, generate <var>\\mathrm{rand}(1,T_d-1)</var> and add it to <var>S</var> until the number of elements in <var>S</var> becomes <var>N+1</var>.\nLet <var>s_0(=0),s_1,\\cdots,s_{N-1},s_N(=T_d)</var> be the elements of the resulting <var>S</var>, in ascending order.\nThen we set <var>a_{d,k}=s_{k+1}-s_k</var>.\nFinally, sort <var>a_{d,0},\\cdots,a_{d,N-1}</var> in ascending order.</p>\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Tools (Input generator and visualizer)</h3><ul>\n<li><a href=\"https://img.atcoder.jp/ahc031/PJcas1sL.html?lang=en\">Web version</a>: This is more powerful than the local version providing animations.</li>\n<li><a href=\"https://img.atcoder.jp/ahc031/PJcas1sL.zip\">Local version</a>: You need a compilation environment of <a href=\"https://www.rust-lang.org/\">Rust language</a>.<ul>\n<li><a href=\"https://img.atcoder.jp/ahc031/PJcas1sL_windows.zip\">Pre-compiled binary for Windows</a>: If you are not familiar with the Rust language environment, please use this instead.</li>\n</ul>\n</li>\n</ul>\n<p>Please be aware that sharing visualization results or discussing solutions/ideas during the contest is prohibited.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre style=\"max-height:200px;overflow-y:scroll\">1000 5 10\n6508 11666 12167 16717 46095 55928 56542 127260 200961 202211\n11754 15667 26620 31851 48890 50181 52520 53150 263650 280526\n7171 7218 14268 26231 37133 47199 93385 131356 174634 189807\n10290 15811 16235 39805 45168 75830 76161 137648 148368 152504\n6553 22994 44284 45120 67646 68899 98726 129109 138615 247097\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre style=\"max-height:200px;overflow-y:scroll\">0 43 23 326\n747 654 824 843\n863 2 1000 469\n824 621 892 869\n892 469 983 977\n23 19 676 105\n58 917 742 1000\n494 398 747 917\n85 105 863 398\n6 398 403 911\n166 917 329 1000\n6 848 266 911\n403 803 588 1000\n863 633 983 977\n361 19 494 398\n361 398 494 803\n494 105 588 767\n863 0 1000 633\n588 0 863 1000\n0 19 361 848\n10 740 81 841\n949 196 1000 425\n538 396 588 764\n883 425 988 748\n0 0 189 268\n0 268 189 540\n588 396 883 764\n515 76 949 396\n81 767 873 1000\n189 0 515 583\n363 460 538 767\n363 767 600 923\n762 767 873 923\n288 923 807 1000\n0 0 1000 76\n188 397 363 832\n10 376 188 841\n0 76 462 376\n515 76 949 425\n538 425 988 764\n10 376 86 736\n288 452 330 1000\n1 76 243 265\n349 283 604 460\n86 397 288 736\n0 736 288 1000\n243 8 604 283\n330 520 600 1000\n600 638 1000 1000\n604 0 1000 638\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/ahc031/tasks/ahc031_a"}