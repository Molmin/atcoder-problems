{"html":{"ja":"<span class=\"lang-ja\">\n<p>﻿配点: <var>400</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3>\n<p>AtCoder 洋菓子店は数字の形をしたキャンドルがついたケーキを販売しています。<br>\nここには <var>1, 2, 3</var> の形をしたキャンドルがついたケーキがそれぞれ <var>X</var> 種類、<var>Y</var> 種類、<var>Z</var> 種類あります。<br>\nそれぞれのケーキには「美味しさ」という整数の値が以下のように割り当てられています。  </p>\n<ul>\n<li><var>1</var> の形のキャンドルがついたケーキの美味しさはそれぞれ <var>A_1, A_2, ..., A_X</var></li>\n<li><var>2</var> の形のキャンドルがついたケーキの美味しさはそれぞれ <var>B_1, B_2, ..., B_Y</var></li>\n<li><var>3</var> の形のキャンドルがついたケーキの美味しさはそれぞれ <var>C_1, C_2, ..., C_Z</var></li>\n</ul>\n<p>高橋君は ABC 123 を記念するために、<var>1, 2, 3</var> の形のキャンドルがついたケーキを <var>1</var> つずつ買うことにしました。<br>\nそのようにケーキを買う方法は <var>X \\times Y \\times Z</var> 通りあります。  </p>\n<p>これらの選び方を <var>3</var> つのケーキの美味しさの合計が大きい順に並べたとき、<var>1, 2, ..., K</var> 番目の選び方でのケーキの美味しさの合計をそれぞれ出力してください。  </p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3>\n<ul>\n<li><var>1 \\leq X \\leq 1 \\ 000</var></li>\n<li><var>1 \\leq Y \\leq 1 \\ 000</var></li>\n<li><var>1 \\leq Z \\leq 1 \\ 000</var></li>\n<li><var>1 \\leq K \\leq \\min(3 \\ 000, X \\times Y \\times Z)</var></li>\n<li><var>1 \\leq A_i \\leq 10 \\ 000 \\ 000 \\ 000</var></li>\n<li><var>1 \\leq B_i \\leq 10 \\ 000 \\ 000 \\ 000</var></li>\n<li><var>1 \\leq C_i \\leq 10 \\ 000 \\ 000 \\ 000</var></li>\n<li>入力中の値はすべて整数である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3>\n<p>入力は以下の形式で標準入力から与えられる。  </p>\n<pre><var>X</var> <var>Y</var> <var>Z</var> <var>K</var>\n<var>A_1 \\ A_2 \\ A_3 \\ ... \\ A_X</var>\n<var>B_1 \\ B_2 \\ B_3 \\ ... \\ B_Y</var>\n<var>C_1 \\ C_2 \\ C_3 \\ ... \\ C_Z</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3>\n<p><var>i</var> 行目に、問題文中の <var>i</var> 番目の値を出力せよ。  </p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>2 2 2 8\n4 6\n1 5\n3 8\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>19\n17\n15\n14\n13\n12\n10\n8\n</pre>\n\n<p><var>3</var> つのケーキの選び方は <var>2 \\times 2 \\times 2 = 8</var> 通りあり、それらをケーキの美味しさの合計が大きい順に並べると以下の通りです。</p>\n<ul>\n<li><var>(A_2, B_2, C_2)</var>: <var>6 + 5 + 8 = 19</var></li>\n<li><var>(A_1, B_2, C_2)</var>: <var>4 + 5 + 8 = 17</var></li>\n<li><var>(A_2, B_1, C_2)</var>: <var>6 + 1 + 8 = 15</var></li>\n<li><var>(A_2, B_2, C_1)</var>: <var>6 + 5 + 3 = 14</var></li>\n<li><var>(A_1, B_1, C_2)</var>: <var>4 + 1 + 8 = 13</var></li>\n<li><var>(A_1, B_2, C_1)</var>: <var>4 + 5 + 3 = 12</var></li>\n<li><var>(A_2, B_1, C_1)</var>: <var>6 + 1 + 3 = 10</var></li>\n<li><var>(A_1, B_1, C_1)</var>: <var>4 + 1 + 3 = 8</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>3 3 3 5\n1 10 100\n2 20 200\n1 10 100\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>400\n310\n310\n301\n301\n</pre>\n\n<p>美味しさの合計が同じになる組み合わせが複数ある可能性もあります。例えば、このテストケースで <var>(A_1, B_3, C_3)</var> を選ぶときと <var>(A_3, B_3, C_1)</var> を選ぶときはともに、美味しさの合計が <var>301</var> となります。<br>\nしかし、これらは異なる選び方であるため、出力には <var>301</var> が <var>2</var> 回出現します。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>10 10 10 20\n7467038376 5724769290 292794712 2843504496 3381970101 8402252870 249131806 6310293640 6690322794 6082257488\n1873977926 2576529623 1144842195 1379118507 6003234687 4925540914 3902539811 3326692703 484657758 2877436338\n4975681328 8974383988 2882263257 7690203955 514305523 6679823484 4263279310 585966808 3752282379 620585736\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>23379871545\n22444657051\n22302177772\n22095691512\n21667941469\n21366963278\n21287912315\n21279176669\n21160477018\n21085311041\n21059876163\n21017997739\n20703329561\n20702387965\n20590247696\n20383761436\n20343962175\n20254073196\n20210218542\n20150096547\n</pre>\n\n<p>入力・出力は <var>32</var> ビット整数に収まらない可能性があることに注意してください。  </p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score: <var>400</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3>\n<p>The Patisserie AtCoder sells cakes with number-shaped candles.\nThere are <var>X</var>, <var>Y</var> and <var>Z</var> kinds of cakes with <var>1</var>-shaped, <var>2</var>-shaped and <var>3</var>-shaped candles, respectively.\nEach cake has an integer value called <em>deliciousness</em>, as follows:</p>\n<ul>\n<li>The deliciousness of the cakes with <var>1</var>-shaped candles are <var>A_1, A_2, ..., A_X</var>.</li>\n<li>The deliciousness of the cakes with <var>2</var>-shaped candles are <var>B_1, B_2, ..., B_Y</var>.</li>\n<li>The deliciousness of the cakes with <var>3</var>-shaped candles are <var>C_1, C_2, ..., C_Z</var>.</li>\n</ul>\n<p>Takahashi decides to buy three cakes, one for each of the three shapes of the candles, to celebrate ABC 123.<br>\nThere are <var>X \\times Y \\times Z</var> such ways to choose three cakes.<br>\nWe will arrange these <var>X \\times Y \\times Z</var> ways in descending order of the sum of the deliciousness of the cakes.<br>\nPrint the sums of the deliciousness of the cakes for the first, second, <var>...</var>, <var>K</var>-th ways in this list.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3>\n<ul>\n<li><var>1 \\leq X \\leq 1 \\ 000</var></li>\n<li><var>1 \\leq Y \\leq 1 \\ 000</var></li>\n<li><var>1 \\leq Z \\leq 1 \\ 000</var></li>\n<li><var>1 \\leq K \\leq \\min(3 \\ 000, X \\times Y \\times Z)</var></li>\n<li><var>1 \\leq A_i \\leq 10 \\ 000 \\ 000 \\ 000</var></li>\n<li><var>1 \\leq B_i \\leq 10 \\ 000 \\ 000 \\ 000</var></li>\n<li><var>1 \\leq C_i \\leq 10 \\ 000 \\ 000 \\ 000</var></li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3>\n<p>Input is given from Standard Input in the following format:</p>\n<pre><var>X</var> <var>Y</var> <var>Z</var> <var>K</var>\n<var>A_1 \\ A_2 \\ A_3 \\ ... \\ A_X</var>\n<var>B_1 \\ B_2 \\ B_3 \\ ... \\ B_Y</var>\n<var>C_1 \\ C_2 \\ C_3 \\ ... \\ C_Z</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3>\n<p>Print <var>K</var> lines. The <var>i</var>-th line should contain the <var>i</var>-th value stated in the problem statement.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>2 2 2 8\n4 6\n1 5\n3 8\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>19\n17\n15\n14\n13\n12\n10\n8\n</pre>\n\n<p>There are <var>2 \\times 2 \\times 2 = 8</var> ways to choose three cakes, as shown below in descending order of the sum of the deliciousness of the cakes:</p>\n<ul>\n<li><var>(A_2, B_2, C_2)</var>: <var>6 + 5 + 8 = 19</var></li>\n<li><var>(A_1, B_2, C_2)</var>: <var>4 + 5 + 8 = 17</var></li>\n<li><var>(A_2, B_1, C_2)</var>: <var>6 + 1 + 8 = 15</var></li>\n<li><var>(A_2, B_2, C_1)</var>: <var>6 + 5 + 3 = 14</var></li>\n<li><var>(A_1, B_1, C_2)</var>: <var>4 + 1 + 8 = 13</var></li>\n<li><var>(A_1, B_2, C_1)</var>: <var>4 + 5 + 3 = 12</var></li>\n<li><var>(A_2, B_1, C_1)</var>: <var>6 + 1 + 3 = 10</var></li>\n<li><var>(A_1, B_1, C_1)</var>: <var>4 + 1 + 3 = 8</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>3 3 3 5\n1 10 100\n2 20 200\n1 10 100\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>400\n310\n310\n301\n301\n</pre>\n\n<p>There may be multiple combinations of cakes with the same sum of the deliciousness. For example, in this test case, the sum of <var>A_1, B_3, C_3</var> and the sum of <var>A_3, B_3, C_1</var> are both <var>301</var>.\nHowever, they are different ways of choosing cakes, so <var>301</var> occurs twice in the output.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>10 10 10 20\n7467038376 5724769290 292794712 2843504496 3381970101 8402252870 249131806 6310293640 6690322794 6082257488\n1873977926 2576529623 1144842195 1379118507 6003234687 4925540914 3902539811 3326692703 484657758 2877436338\n4975681328 8974383988 2882263257 7690203955 514305523 6679823484 4263279310 585966808 3752282379 620585736\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>23379871545\n22444657051\n22302177772\n22095691512\n21667941469\n21366963278\n21287912315\n21279176669\n21160477018\n21085311041\n21059876163\n21017997739\n20703329561\n20702387965\n20590247696\n20383761436\n20343962175\n20254073196\n20210218542\n20150096547\n</pre>\n\n<p>Note that the input or output may not fit into a <var>32</var>-bit integer type.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc123/tasks/abc123_d"}