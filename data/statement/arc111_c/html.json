{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>600</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>1</var> から <var>N</var> の番号がついた <var>N</var> 人の人間と、同じく <var>1</var> から <var>N</var> の番号がついた <var>N</var> 個の荷物があります。\n人 <var>i</var> の体重は <var>a_i</var>, 荷物 <var>j</var> の重さは <var>b_j</var> です。\nはじめ人 <var>i</var> は 荷物 <var>p_i</var> を持っており、以下の操作を <var>0</var> 回以上繰り返すことで全ての人が自分と同じ番号の荷物を持っている状態にしたいです。</p>\n<ul>\n<li><var>i,j (i \\neq j)</var> を選び、人 <var>i</var> と人 <var>j</var> の荷物を交換する。</li>\n</ul>\n<p>ただし、人は自分の体重<strong>以上</strong>の重さの荷物を持つと疲れてしまい、その後一切操作には加われません (すなわち、<var>i,j</var>として選べません)。\n特に、 <var>a_i \\leq b_{p_i}</var> なら一度も操作に加われません。</p>\n<p>条件を満たす操作列があるか判定し、存在するならばそのうち<strong>操作回数が最小</strong>であるものをひとつ構成してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq N \\leq 200000</var></li>\n<li><var>1 \\leq a_i,b_i \\leq 10^9</var></li>\n<li><var>p</var> は <var>1, \\ldots ,N</var> の順列</li>\n<li>入力される数はすべて整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>a_1</var> <var>a_2</var> <var>\\ldots</var> <var>a_N</var>\n<var>b_1</var> <var>b_2</var> <var>\\ldots</var> <var>b_N</var>\n<var>p_1</var> <var>p_2</var> <var>\\ldots</var> <var>p_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>どのように操作しても条件を満たせない場合、<code>-1</code> を出力せよ。\n条件を満たすことが可能な場合、以下のフォーマットで操作列を出力せよ。</p>\n<pre><var>K</var>\n<var>i_1</var> <var>j_1</var>\n<var>i_2</var> <var>j_2</var>\n<var>:</var>\n<var>i_K</var> <var>j_K</var>\n</pre>\n<p>ここで <var>K</var> は操作回数であり、 <var>i_t,j_t</var> は <var>t</var> 回目の操作で選んだ人間の番号である。</p>\n<p>解が複数存在する場合、どれを出力しても構わない。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>4\n3 4 8 6\n5 3 1 3\n3 4 2 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>3\n3 4\n1 3\n4 2\n</pre>\n<p>初期状態で人 <var>1,2,3,4</var> が持っている荷物の重さはそれぞれ <var>1,3,3,5</var> なので、初期状態では誰も疲れていません。</p>\n<p>まず人 <var>3</var> と <var>4</var> で操作をします。人 <var>1,2,3,4</var> が持っている荷物の重さはそれぞれ <var>1,3,5,3</var> なので、まだ誰も疲れていません。</p>\n<p>次に人 <var>1</var> と <var>3</var> で操作をします。人 <var>1,2,3,4</var> が持っている荷物の重さはそれぞれ <var>5,3,1,3</var> なので、人 <var>1</var> が疲れます。</p>\n<p>最後に人 <var>4</var> と <var>2</var> で操作をします。人 <var>1,2,3,4</var> が持っている荷物の重さはそれぞれ <var>5,3,1,3</var> なので、これで新たに疲れる人はいません。</p>\n<p>これによって全員が正しい荷物を持っている状態になり、さらにこれは最小の操作回数なので、正しい出力の一つです。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>4\n1 2 3 4\n4 3 2 1\n4 3 2 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>-1\n</pre>\n<p>条件を満たすように操作することは出来ません。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>1\n58\n998244353\n1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>0\n</pre>\n<p>初期状態で条件を満たしています。</p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>600</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There are <var>N</var> people numbered <var>1</var> to <var>N</var> and <var>N</var> pieces of baggage numbered numbered <var>1</var> to <var>N</var>.\nPerson <var>i</var> has a weight of <var>a_i</var>, and Baggage <var>j</var> has a weight of <var>b_j</var>.\nInitially, Person <var>i</var> has Baggage <var>p_i</var>. We want to do the operation below zero or more times so that each Person <var>i</var> will have Baggage <var>i</var>.</p>\n<ul>\n<li>Choose <var>i,j (i \\neq j)</var>, and swap the baggages of Person <var>i</var> and Person <var>j</var>.</li>\n</ul>\n<p>However, when a person has a piece of baggage with a weight <strong>greater than or equal to</strong> his/her own weight, the person gets tired and becomes unable to take part in a future operation (that is, we cannot choose him/her as Person <var>i</var> or <var>j</var>).\nParticularly, if <var>a_i \\leq b_{p_i}</var>, Person <var>i</var> cannot take part in any operation.</p>\n<p>Determine whether there is a sequence of operations that achieves the objective, and if so, construct one such sequence <strong>with the minimum possible number of operations</strong>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N \\leq 200000</var></li>\n<li><var>1 \\leq a_i,b_i \\leq 10^9</var></li>\n<li><var>p</var> is a permutation of <var>1, \\ldots, N</var>.</li>\n<li>All numbers in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>a_1</var> <var>a_2</var> <var>\\ldots</var> <var>a_N</var>\n<var>b_1</var> <var>b_2</var> <var>\\ldots</var> <var>b_N</var>\n<var>p_1</var> <var>p_2</var> <var>\\ldots</var> <var>p_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If no sequence of operations achieves the objective, print <code>-1</code>.\nOtherwise, print a sequence of operations in the following format:</p>\n<pre><var>K</var>\n<var>i_1</var> <var>j_1</var>\n<var>i_2</var> <var>j_2</var>\n<var>:</var>\n<var>i_K</var> <var>j_K</var>\n</pre>\n<p>Here, <var>K</var> is the number of operations, and <var>i_t, j_t</var> represent the people chosen in the <var>t</var>-th operation.</p>\n<p>If there are multiple solutions, any of them will be accepted.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>4\n3 4 8 6\n5 3 1 3\n3 4 2 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>3\n3 4\n1 3\n4 2\n</pre>\n<p>Initially, People <var>1, 2, 3, 4</var> has pieces of baggage with weights <var>1, 3, 3, 5</var>, respectively, so no one is tired.</p>\n<p>First, we do the operation choosing Person <var>3</var> and <var>4</var>. Now, people <var>1, 2, 3, 4</var> has pieces of baggage with weights <var>1, 3, 5, 3</var>, so no one is tired yet.</p>\n<p>Second, we do the operation choosing Person <var>1</var> and <var>3</var>. Now, people <var>1, 2, 3, 4</var> has pieces of baggage with weights <var>5, 3, 1, 3</var>, so Person <var>1</var> gets tired.</p>\n<p>Lastly, we do the operation choosing Person <var>4</var> and <var>2</var>. Now, people <var>1, 2, 3, 4</var> has pieces of baggage with weights <var>5, 3, 1, 3</var>, so no one gets tired.</p>\n<p>This sequence of operations has made everyone have the right piece of baggage, with the minimum possible number of operations, so it is valid.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>4\n1 2 3 4\n4 3 2 1\n4 3 2 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>-1\n</pre>\n<p>No sequence of operations achieves the objective.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>1\n58\n998244353\n1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>0\n</pre>\n<p>The objective is already achieved in the initial state.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc111/tasks/arc111_c"}