{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>475</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>H</var> 行 <var>W</var> 列のグリッドがあります。\n上から <var>i</var> 行目、左から <var>j</var> 列目のマス目を <var>(i,j)</var> と表します。\nグリッドの各マスはスタートマス、ゴールマス、空マス、壁マス、お菓子マスのいずれかです。\n<var>(i,j)</var> が何のマスであるかは文字 <var>A_{i,j}</var> によって表され、<var>A_{i,j}=</var> <code>S</code> のときスタートマス、\n<var>A_{i,j}=</var> <code>G</code> のときゴールマス、\n<var>A_{i,j}=</var> <code>.</code> のとき空マス、\n<var>A_{i,j}=</var> <code>#</code> のとき壁マス、\n<var>A_{i,j}=</var> <code>o</code> のときお菓子マスです。\nここで、スタートマスとゴールマスはちょうど <var>1</var> つずつあり、お菓子マスは <strong><var>18</var> 個以下</strong>であることが保証されます。</p>\n<p>高橋くんは現在スタートマスにいます。\n高橋くんは、上下左右に隣接するマスであって壁マスでないマスに移動することを繰り返し行えます。\n高橋くんは今から <var>T</var> 回以下の移動によってゴールマスに到達したいです。\nそのようなことは可能かどうか判定してください。\n可能な場合は、最終的にゴールマスにいるという条件のもとで、移動の途中に訪れるお菓子マスの数の最大値を求めてください。\nただし、<var>1</var> つのお菓子マスに複数回訪れた場合でも、カウントするのは <var>1</var> 回のみです。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1\\leq H,W \\leq 300</var></li>\n<li><var>1 \\leq T \\leq 2\\times 10^6</var></li>\n<li><var>H,W,T</var> は整数</li>\n<li><var>A_{i,j}</var> は <code>S</code>, <code>G</code>, <code>.</code>, <code>#</code>, <code>o</code> のいずれか</li>\n<li><var>A_{i,j}=</var> <code>S</code> を満たす <var>(i,j)</var> の組がちょうど <var>1</var> つ存在する</li>\n<li><var>A_{i,j}=</var> <code>G</code> を満たす <var>(i,j)</var> の組がちょうど <var>1</var> つ存在する</li>\n<li><var>A_{i,j}=</var> <code>o</code> を満たす <var>(i,j)</var> の組は <strong><var>18</var> 個以下</strong></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>H</var> <var>W</var> <var>T</var>\n<var>A_{1,1}A_{1,2}\\dots A_{1,W}</var>\n<var>\\vdots</var>\n<var>A_{H,1}A_{H,2}\\dots A_{H,W}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>T</var> 回以下の移動によってゴールマスに到達することが不可能ならば <code>-1</code> を出力せよ。\n可能ならば、最終的にゴールマスにいるという条件のもとで、移動の途中に訪れるお菓子マスの数の最大値を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 3 5\nS.G\no#o\n.#.\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1\n</pre>\n<p><var>(1,1) \\rightarrow (1,2) \\rightarrow (1,3) \\rightarrow (2,3) \\rightarrow (1,3)</var> と <var>4</var> 回移動すると、\n<var>1</var> 個のお菓子マスを訪れた上で最終的にゴールマスにいることができます。\n<var>5</var> 回以下の移動で <var>2</var> 個のお菓子マスを訪れた上で最終的にゴールマスにいることはできないので、<var>1</var> が答えです。</p>\n<p>なお、<var>(1,1) \\rightarrow (2,1) \\rightarrow (1,1) \\rightarrow (1,2) \\rightarrow (1,3) \\rightarrow (2,3)</var> \nと移動すると <var>5</var> 回の移動で <var>2</var> 個のお菓子マスを訪れることができますが、最終的にゴールマスにいないため無効であることに注意してください。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>3 3 1\nS.G\n.#o\no#.\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>-1\n</pre>\n<p><var>1</var> 回以下の移動でゴールマスに到達することはできません。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>5 10 2000000\nS.o..ooo..\n..o..o.o..\n..o..ooo..\n..o..o.o..\n..o..ooo.G\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>18\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>475</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>We have a grid with <var>H</var> rows and <var>W</var> columns.\nLet <var>(i,j)</var> denote the square at the <var>i</var>-th row from the top and <var>j</var>-th column from the left.\nEach square in the grid is one of the following: the start square, the goal square, an empty square, a wall square, and a candy square.\n<var>(i,j)</var> is represented by a character <var>A_{i,j}</var>, and is the start square if <var>A_{i,j}=</var> <code>S</code>, the goal square if <var>A_{i,j}=</var> <code>G</code>, an empty square if <var>A_{i,j}=</var> <code>.</code>, a wall square if <var>A_{i,j}=</var> <code>#</code>, and a candy square if <var>A_{i,j}=</var> <code>o</code>.\nHere, it is guaranteed that there are exactly one start, exactly one goal, and <strong>at most <var>18</var></strong> candy squares.</p>\n<p>Takahashi is now at the start square.\nHe can repeat moving to a vertically or horizontally adjacent non-wall square.\nHe wants to reach the goal square in at most <var>T</var> moves.\nDetermine whether it is possible.\nIf it is possible, find the maximum number of candy squares he can visit on the way to the goal square, where he must finish.\nEach candy square counts only once, even if it is visited multiple times.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1\\leq H,W \\leq 300</var></li>\n<li><var>1 \\leq T \\leq 2\\times 10^6</var></li>\n<li><var>H</var>, <var>W</var>, and <var>T</var> are integers.</li>\n<li><var>A_{i,j}</var> is one of <code>S</code>, <code>G</code>, <code>.</code>, <code>#</code>, and <code>o</code>.</li>\n<li>Exactly one pair <var>(i,j)</var> satisfies <var>A_{i,j}=</var> <code>S</code>.</li>\n<li>Exactly one pair <var>(i,j)</var> satisfies <var>A_{i,j}=</var> <code>G</code>.</li>\n<li><strong>At most <var>18</var></strong> pairs <var>(i,j)</var> satisfy <var>A_{i,j}=</var> <code>o</code>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>H</var> <var>W</var> <var>T</var>\n<var>A_{1,1}A_{1,2}\\dots A_{1,W}</var>\n<var>\\vdots</var>\n<var>A_{H,1}A_{H,2}\\dots A_{H,W}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If it is impossible to reach the goal square in at most <var>T</var> moves, print <code>-1</code>.\nOtherwise, print the maximum number of candy squares that can be visited on the way to the goal square, where Takahashi must finish.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 3 5\nS.G\no#o\n.#.\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1\n</pre>\n<p>If he makes four moves as <var>(1,1) \\rightarrow (1,2) \\rightarrow (1,3) \\rightarrow (2,3) \\rightarrow (1,3)</var>, he can visit one candy square and finish at the goal square.\nHe cannot make five or fewer moves to visit two candy squares and finish at the goal square, so the answer is <var>1</var>.</p>\n<p>Note that making five moves as <var>(1,1) \\rightarrow (2,1) \\rightarrow (1,1) \\rightarrow (1,2) \\rightarrow (1,3) \\rightarrow (2,3)</var> to visit two candy squares is invalid since he would not finish at the goal square.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>3 3 1\nS.G\n.#o\no#.\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>-1\n</pre>\n<p>He cannot reach the goal square in one or fewer moves.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>5 10 2000000\nS.o..ooo..\n..o..o.o..\n..o..ooo..\n..o..o.o..\n..o..ooo.G\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>18\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc301/tasks/abc301_e"}