{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点：<var>400</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3>\n<p>縦 <var>H</var> マス, 横 <var>W</var> マスに広がるマス目があり, 各マスは白または黒で塗られている. 上から <var>i</var> 番目で左から <var>j</var> 番目のマスを <var>(i, j)</var> で表す.\nすぬけ君は, このマス目を使って次のようなゲームをしたい. ゲームの開始時点ではマス <var>(1, 1)</var> にゲームキャラクター「けぬす君」がいる. プレイヤーはけぬす君を上下左右の <var>4</var> 方向のいずれかに <var>1</var> マスだけ動かすことを繰り返す. けぬす君が白いマスだけを通って <var>(H, W)</var> にたどり着けばゲームクリアとなる.<br>\nゲームを開始する前に, すぬけ君はいくつかの白いマス目の色を黒に変えることができる. ただし, マス <var>(1, 1)</var> と <var>(H, W)</var> の色を変えることはできず, ゲームを開始するまでにすべての色の変更を行わなければならない.<br>\nゲームをクリアしたとき, ゲームの開始前にマスの色を変えた回数がすぬけ君のスコアとなる. そのとき, すぬけ君が取る可能性のある最大のスコアを求めなさい.ただし, すぬけ君がどのようにマス目の色を変えてもけぬす君が <var>(H, W)</var> にたどり着くことが出来ない場合、<var>-1</var> と出力しなさい.</p>\n<p>ただし, 各マスの色の情報は文字 <var>s_{i, j}</var> として与えられる. マス <var>(i, j)</var> が最初白で塗られている場合 <var>s_{i, j}</var> は <code>.</code> であり, マス <var>(i, j)</var> が最初黒で塗られている場合 <var>s_{i, j}</var> は <code>#</code> である.  </p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3>\n<ul>\n<li><var>H</var> は <var>2</var> 以上 <var>50</var> 以下の整数</li>\n<li><var>W</var> は <var>2</var> 以上 <var>50</var> 以下の整数</li>\n<li><var>s_{i, j}</var> は <code>.</code> または <code>#</code> <var>(1 \\leq i \\leq H, 1 \\leq j \\leq W)</var></li>\n<li><var>s_{1, 1}, s_{H, W}</var> は <code>.</code> である</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3>\n<p>入力は以下の形式で標準入力から与えられる.</p>\n<pre><var>H</var> <var>W</var>\n<var>s_{1, 1}s_{1, 2}s_{1, 3} ... s_{1, W}</var>\n<var>s_{2, 1}s_{2, 2}s_{2, 3} ... s_{2, W}</var>\n <var>:</var>   <var>:</var>\n<var>s_{H, 1}s_{H, 2}s_{H, 3} ... s_{H, W}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3>\n<p>すぬけ君が取る可能性のある最大のスコアを出力しなさい.\nただし, すぬけ君がどのようにマス目の色を変えてもけぬす君が <var>(H, W)</var> にたどり着くことが出来ない場合、<var>-1</var> と出力しなさい.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 3\n..#\n#..\n...\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>2\n</pre>\n\n<p>下の図のようにマス目の色を変えれば, スコア <var>2</var> を達成できます.<br>\n<img alt=\"Explanation of Sample 1\" src=\"https://img.atcoder.jp/abc088/bc944898899615e35f898654b68cd517.png\"></p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>10 37\n.....................................\n...#...####...####..###...###...###..\n..#.#..#...#.##....#...#.#...#.#...#.\n..#.#..#...#.#.....#...#.#...#.#...#.\n.#...#.#..##.#.....#...#.#.###.#.###.\n.#####.####..#.....#...#..##....##...\n.#...#.#...#.#.....#...#.#...#.#...#.\n.#...#.#...#.##....#...#.#...#.#...#.\n.#...#.####...####..###...###...###..\n.....................................\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>209\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score: <var>400</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem statement</h3>\n<p>We have an <var>H \\times W</var> grid whose squares are painted black or white. The square at the <var>i</var>-th row from the top and the <var>j</var>-th column from the left is denoted as <var>(i, j)</var>.<br>\nSnuke would like to play the following game on this grid. At the beginning of the game, there is a character called Kenus at square <var>(1, 1)</var>. The player repeatedly moves Kenus up, down, left or right by one square. The game is completed when Kenus reaches square <var>(H, W)</var> passing only white squares.<br>\nBefore Snuke starts the game, he can change the color of some of the white squares to black. However, he cannot change the color of square <var>(1, 1)</var> and <var>(H, W)</var>. Also, changes of color must all be carried out before the beginning of the game.<br>\nWhen the game is completed, Snuke's score will be the number of times he changed the color of a square before the beginning of the game. Find the maximum possible score that Snuke can achieve, or print <var>-1</var> if the game cannot be completed, that is, Kenus can never reach square <var>(H, W)</var> regardless of how Snuke changes the color of the squares.  </p>\n<p>The color of the squares are given to you as characters <var>s_{i, j}</var>. If square <var>(i, j)</var> is initially painted by white, <var>s_{i, j}</var> is <code>.</code>; if square <var>(i, j)</var> is initially painted by black, <var>s_{i, j}</var> is <code>#</code>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3>\n<ul>\n<li><var>H</var> is an integer between <var>2</var> and <var>50</var> (inclusive).</li>\n<li><var>W</var> is an integer between <var>2</var> and <var>50</var> (inclusive).</li>\n<li><var>s_{i, j}</var> is <code>.</code> or <code>#</code> <var>(1 \\leq i \\leq H, 1 \\leq j \\leq W)</var>.</li>\n<li><var>s_{1, 1}</var> and <var>s_{H, W}</var> are <code>.</code>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3>\n<p>Input is given from Standard Input in the following format:</p>\n<pre><var>H</var> <var>W</var>\n<var>s_{1, 1}s_{1, 2}s_{1, 3} ... s_{1, W}</var>\n<var>s_{2, 1}s_{2, 2}s_{2, 3} ... s_{2, W}</var>\n <var>:</var>   <var>:</var>\n<var>s_{H, 1}s_{H, 2}s_{H, 3} ... s_{H, W}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3>\n<p>Print the maximum possible score that Snuke can achieve, or print <var>-1</var> if the game cannot be completed.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 3\n..#\n#..\n...\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>2\n</pre>\n\n<p>The score <var>2</var> can be achieved by changing the color of squares as follows:</p>\n<p><img alt=\"Explanation of Sample 1\" src=\"https://img.atcoder.jp/abc088/bc944898899615e35f898654b68cd517.png\"></p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>10 37\n.....................................\n...#...####...####..###...###...###..\n..#.#..#...#.##....#...#.#...#.#...#.\n..#.#..#...#.#.....#...#.#...#.#...#.\n.#...#.#..##.#.....#...#.#.###.#.###.\n.#####.####..#.....#...#..##....##...\n.#...#.#...#.#.....#...#.#...#.#...#.\n.#...#.#...#.##....#...#.#...#.#...#.\n.#...#.####...####..###...###...###..\n.....................................\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>209\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc088/tasks/abc088_d"}