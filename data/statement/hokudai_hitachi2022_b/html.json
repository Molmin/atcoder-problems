{"html":{"ja":"<span class=\"lang-ja\">\n<p></p><details><summary>目次</summary><p></p>\n<ol>\n<li><a href=\"#problem-overview\">問題概要</a></li>\n<li><a href=\"#input1\">入力1</a><ol>\n<li><a href=\"#work-time-frame\">作業期間</a></li>\n<li><a href=\"#geo-data\">地理情報</a></li>\n<li><a href=\"#worker\">ワーカー</a></li>\n<li><a href=\"#job\">ジョブ</a></li>\n<li><a href=\"#weather\">天候</a></li>\n<li><a href=\"#schedule\">スケジュール</a></li>\n</ol>\n</li>\n<li><a href=\"#output1\">出力1</a></li>\n<li><a href=\"#input2\">入力2(毎時刻)</a><ol>\n<li><a href=\"#current-weather\">現在の天候</a></li>\n<li><a href=\"#job-state\">ジョブの状態</a></li>\n<li><a href=\"#worker-current-location\">ワーカーの現在位置</a></li>\n<li><a href=\"#weather-forecast\">天候予測</a></li>\n</ol>\n</li>\n<li><a href=\"#output2\">出力2(毎時刻)</a><ol>\n<li><a href=\"#schedule-submission\">スケジュールの提出</a></li>\n<li><a href=\"#worker-action\">ワーカーの行動</a></li>\n</ol>\n</li>\n<li><a href=\"#input3\">入力3(採点)</a><ol>\n<li><a href=\"#scoring-method\">採点方法</a></li>\n<li><a href=\"#total-reward-amount\">総報酬量</a></li>\n<li><a href=\"#unfinished-penalty\">未完了ペナルティ</a></li>\n<li><a href=\"#schedule-added-point\">スケジュール加点</a></li>\n</ol>\n</li>\n<li><a href=\"#task-limit\">実行タスク数制限</a></li>\n<li><a href=\"#testcase-generation-rules\">テストケース生成規則</a></li>\n<li><a href=\"#ranking-method\">順位決定方法</a></li>\n<li><a href=\"#constraints\">制約</a></li>\n<li><a href=\"#toolkit\">ツールキット</a></li>\n<li><a href=\"#visualizer\">ビジュアライザ</a>\n</li></ol></details>\n\n<p><a id=\"problem-overview\" class=\"anchor\"></a></p>\n\n<div class=\"part\">\n<section>\n<h3>問題概要</h3>\n<p>この問題では、農機シェアリングサービスにおいて、所有する機械や人員（単純化して、以下\"ワーカー\"とする）を最大限活用し、報酬*が最も多くなるように農作業（以下、\"ジョブ\"と呼ぶ）を\n受託することを考える。空間内に配置された数多く存在するジョブから受託するジョブを自分で最初に決定し、ジョブ実行スケジュールを提出/修正しながら、ワーカーに指示を出し実際にそれらを処理していく。各ジョブは複数の小作業を表す\"タスク\"をワーカーが規定の量処理することで完了と見なされ、基本的に受託したジョブは完了する必要がある(完了しなければペナルティが発生する）。ジョブを完了することで報酬を獲得できるが、タスクを処理する時刻により報酬量は異なるため適切な作業時間帯を考慮して処理する必要がある。また、各時刻における実行可能なタスク数はワーカーの処理能力と天候に依存し、天候は一定時間ごとに予報が与えられる。</p>\n<p>*報酬：農作物の適切な収穫時期、ナノグリッドから農機に供給する再生可能エネルギーの利用率等を想定する。</p>\n<p style=\"text-align:center;display:flex;justify-content: center; width:100%;aspect-ratio: 2.5;\" id=\"overview-img\">\n\n\n\n<img src=\"https://img.atcoder.jp/hokudai-hitachi2022/5e199d624f0745dcfff05d6a768727b7.png\">\n\n<img src=\"https://img.atcoder.jp/hokudai-hitachi2022/412dcdb4a36421e3254a6b551bb2fe64.png\">\n\n<img src=\"https://img.atcoder.jp/hokudai-hitachi2022/e1a5cf2b76200488ebf9b36f63efc7d5.png\">\n\n\n</p>\n\n<p>入力として最初に以下の情報が与えられる。</p>\n<ol>\n<li>作業期間</li>\n<li>地理情報（グラフ）</li>\n<li>ワーカーの情報</li>\n<li>全てのジョブの情報</li>\n<li>天候に関する情報</li>\n<li>スケジュールに関する情報</li>\n</ol>\n<p>これに対し最初にコンテスタントは</p>\n<ol>\n<li>受託するジョブ</li>\n</ol>\n<p>を出力する。</p>\n<p>以降各時刻開始時に入力として以下の情報が与えられる。</p>\n<ol>\n<li>受託したジョブに関する情報</li>\n<li>ワーカーの現在位置</li>\n<li>(一定間隔で)天候の予報</li>\n</ol>\n<p>これに対しコンテスタントは</p>\n<ol>\n<li>ジョブ実行スケジュール</li>\n<li>各ワーカーの動作</li>\n</ol>\n<p>を出力する。これを作業期間終了まで繰り返す。</p>\n<p>スコアは</p>\n<ol>\n<li>報酬</li>\n<li>未完了ジョブに対するペナルティ</li>\n<li>スケジュール変更の度合い・スケジュール遵守の度合い</li>\n</ol>\n<p>を考慮して採点される。</p>\n<p>以下はその詳細である。</p>\n<p><a id=\"input1\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>入力1</h3>\n<p>最初に入力として</p>\n<ol>\n<li>作業期間</li>\n<li>地理情報（グラフ）</li>\n<li>ワーカーの情報</li>\n<li>全てのジョブの情報</li>\n<li>天候に関する情報</li>\n<li>スケジュールに関する情報</li>\n</ol>\n<p>が以下の形式で標準入力から与えられる。</p>\n<div class=\"codehilite\"><pre><span></span><var>\nT_{\\rm{max}}\\\\\nN_V\\,\\,N_E\\\\\nu_1\\quad v_1\\quad d_1\\\\\n\\vdots\\\\\nu_{N_E}\\,\\, v_{N_E}\\,\\, d_{N_E}\\\\\nN_{\\rm{worker}}\\\\\nv^{\\rm{init}}_1\\,\\,L^\\text{max}_1\\,\\,N^{\\rm{JobType}}_1\\,\\,\\text{Type}^1_1\\,\\,\\text{Type}^1_2\\,\\,\\cdots \\text{Type}^1_{N^{\\rm{JobType}}_1}\\\\\n\\vdots\\\\\nv^{\\rm{init}}_{N_{\\rm{worker}}}\\,\\,L^\\text{max}_{N_{\\rm{worker}}}\\,\\,N^{\\rm{JobType}}_{N_{\\rm{worker}}}\\,\\,\\text{Type}^{N_{\\rm{worker}}}_1\\,\\,\\text{Type}^{N_{\\rm{worker}}}_2\\,\\,\\cdots \\text{Type}^{N_{\\rm{worker}}}_{N^{\\rm{JobType}}_1}\\\\\nN_{\\rm{job}}\\\\\n\\text{Job}_1\\\\\n\\vdots\\\\\n\\text{Job}_{N_{\\rm{job}}}\\\\\nT^{\\rm{weather}}\\,\\,N^{\\rm{weather}}\\\\\n\\begin{array}{llll}\np^{\\rm{weather}}_{1,1} &amp; p^{\\rm{weather}}_{1,2} &amp; \\cdots &amp; p^{\\rm{weather}}_{1,N^{\\rm{weather}}}\\\\\np^{\\rm{weather}}_{2,1} &amp; p^{\\rm{weather}}_{2,2} &amp; \\cdots &amp; p^{\\rm{weather}}_{2,N^{\\rm{weather}}}\\\\\n\\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots\\\\\np^{\\rm{weather}}_{N^{\\rm{weather}},1} &amp; p^{\\rm{weather}}_{N^{\\rm{weather}},2} &amp; \\cdots &amp; p^{\\rm{weather}}_{N^{\\rm{weather}},N^{\\rm{weather}}}\\\\\n\\end{array}\\\\\nc_1\\,\\,c_2\\,\\,\\cdots\\,\\,c_{N^{\\rm{weather}}}\\\\\nP_m\\,\\, R_m\\,\\, \\alpha\\\\\nt_1\\,\\, p^1_1\\,\\, p^1_2\\,\\, \\cdots \\,\\, p^1_{N^{\\rm{weather}}}\\\\\nt_2\\,\\, p^2_1\\,\\, p^2_2\\,\\, \\cdots \\,\\, p^2_{N^{\\rm{weather}}}\\\\\n\\vdots\\\\\nt_{N'}\\,\\, p^{N'}_1\\,\\, p^{N'}_2\\,\\, \\cdots \\,\\, p^{N'}_{N^{\\rm{weather}}}</var>\n</pre></div>\n\n\n<p>(<var>\\text{Job}_i</var>の構成は後述)\n<a id=\"work-time-frame\" class=\"anchor\"></a></p>\n<h4>作業期間</h4>\n<ul>\n<li><strong>入力</strong><ul>\n<li>最初の<var>1</var>行目で作業期間の長さ<var>T_\\text{max}</var>が与えられる。</li>\n</ul>\n</li>\n</ul>\n<p>この問題における時刻<var>t</var>は <var>1</var> から <var>T_{\\text{max}}</var>までの整数の値をとる。\n</p><details><summary>入力例</summary>\n以下は <var>T_\\text{max}=300</var>の例:<p></p>\n<div class=\"codehilite\"><pre><span></span>300\n</pre></div>\n\n\n<p>(末尾に改行有)</p>\n<ul>\n<li>1行目:作業期間の長さは<code>300</code> である。(<var>T_\\text{max}=300</var>)\n</li></ul></details>\n<a id=\"geo-data\" class=\"anchor\"></a>\n\n<h4>地理情報</h4>\n<ul>\n<li><strong>入力</strong><ul>\n<li>次の<var>1</var>行で、問題の地理情報を表すグラフ(連結な正の重み付き無向グラフ)の頂点数<var>N_V</var>と辺の数<var>N_E</var>が与えられる。<ul>\n<li>この<var>N_V</var>個の頂点には<var>1</var>から順に<var>N_V</var>まで頂点番号が割り当てられるものとする。</li>\n</ul>\n</li>\n<li>続く<var>N_E</var>行で辺を表す情報: 端点<var>u_i,v_i</var>と重み(=距離)<var>d_i</var> が与えられる。(<var>1\\leq i \\leq N_E</var>)</li>\n</ul>\n</li>\n</ul>\n<p>後述するが、<a href=\"#job\">ジョブ</a>はこのグラフの頂点上に配置され、<a href=\"#worker\">ワーカー</a>はこのグラフの上を移動する。\n</p><details><summary>入力例</summary>\n以下は <var>N_V=14,N_E=19</var>の例:<p></p>\n<div class=\"codehilite\"><pre><span></span>14 19\n1 7 1\n1 2 1\n2 9 1\n2 3 1\n3 5 1\n3 7 1\n3 6 1\n4 13 2\n4 10 2\n4 6 1\n4 5 1\n6 8 1\n7 8 1\n8 14 2\n9 11 2\n10 12 2\n10 11 2\n12 13 2\n13 14 2\n</pre></div>\n\n\n<p>(末尾に改行有)</p>\n<ul>\n<li>1行目:グラフの頂点は<code>14</code>個存在し、辺は<code>19</code>個存在する。(<var>N_V=14,N_E=19</var>)<ul>\n<li>この<code>14</code>個の頂点には<var>1</var>から順に<code>14</code>まで頂点番号が割り当てられている。</li>\n<li>以下、頂点番号<var>i</var>に対応する頂点 を単に 頂点<var>i</var> と呼ぶ。</li>\n</ul>\n</li>\n<li>2行目:頂点<code>1</code>と頂点<code>7</code>の間に長さ<code>1</code>の辺が存在する。(<var>u_{1}=1,v_{1}=7,d_{1}=1</var>)</li>\n<li>3行目:頂点<code>1</code>と頂点<code>2</code>の間に長さ<code>1</code>の辺が存在する。(<var>u_{2}=1,v_{2}=2,d_{2}=1</var>)</li>\n<li>4行目:頂点<code>2</code>と頂点<code>9</code>の間に長さ<code>1</code>の辺が存在する。(<var>u_{3}=2,v_{3}=9,d_{3}=1</var>)</li>\n<li>5行目:頂点<code>2</code>と頂点<code>3</code>の間に長さ<code>1</code>の辺が存在する。(<var>u_{4}=2,v_{4}=3,d_{4}=1</var>)</li>\n<li>6行目:頂点<code>3</code>と頂点<code>5</code>の間に長さ<code>1</code>の辺が存在する。(<var>u_{5}=3,v_{5}=5,d_{5}=1</var>)</li>\n<li>7行目:頂点<code>3</code>と頂点<code>7</code>の間に長さ<code>1</code>の辺が存在する。(<var>u_{6}=3,v_{6}=7,d_{6}=1</var>)</li>\n<li>8行目:頂点<code>3</code>と頂点<code>6</code>の間に長さ<code>1</code>の辺が存在する。(<var>u_{7}=3,v_{7}=6,d_{7}=1</var>)</li>\n<li>9行目:頂点<code>4</code>と頂点<code>13</code>の間に長さ<code>2</code>の辺が存在する。(<var>u_{8}=4,v_{8}=13,d_{8}=2</var>)</li>\n<li>10行目:頂点<code>4</code>と頂点<code>10</code>の間に長さ<code>2</code>の辺が存在する。(<var>u_{9}=4,v_{9}=10,d_{9}=2</var>)</li>\n<li>11行目:頂点<code>4</code>と頂点<code>6</code>の間に長さ<code>1</code>の辺が存在する。(<var>u_{10}=4,v_{10}=6,d_{10}=1</var>)</li>\n<li>12行目:頂点<code>4</code>と頂点<code>5</code>の間に長さ<code>1</code>の辺が存在する。(<var>u_{11}=4,v_{11}=5,d_{11}=1</var>)</li>\n<li>13行目:頂点<code>6</code>と頂点<code>8</code>の間に長さ<code>1</code>の辺が存在する。(<var>u_{12}=6,v_{12}=8,d_{12}=1</var>)</li>\n<li>14行目:頂点<code>7</code>と頂点<code>8</code>の間に長さ<code>1</code>の辺が存在する。(<var>u_{13}=7,v_{13}=8,d_{13}=1</var>)</li>\n<li>15行目:頂点<code>8</code>と頂点<code>14</code>の間に長さ<code>2</code>の辺が存在する。(<var>u_{14}=8,v_{14}=14,d_{14}=2</var>)</li>\n<li>16行目:頂点<code>9</code>と頂点<code>11</code>の間に長さ<code>2</code>の辺が存在する。(<var>u_{15}=9,v_{15}=11,d_{15}=2</var>)</li>\n<li>17行目:頂点<code>10</code>と頂点<code>12</code>の間に長さ<code>2</code>の辺が存在する。(<var>u_{16}=10,v_{16}=12,d_{16}=2</var>)</li>\n<li>18行目:頂点<code>10</code>と頂点<code>11</code>の間に長さ<code>2</code>の辺が存在する。(<var>u_{17}=10,v_{17}=11,d_{17}=2</var>)</li>\n<li>19行目:頂点<code>12</code>と頂点<code>13</code>の間に長さ<code>2</code>の辺が存在する。(<var>u_{18}=12,v_{18}=13,d_{18}=2</var>)</li>\n<li>20(<var>=1+N_E</var>)行目:頂点<code>13</code>と頂点<code>14</code>の間に長さ<code>2</code>の辺が存在する。(<var>u_{19}=13,v_{19}=14,d_{19}=2</var>)\n</li></ul></details>\n<a id=\"worker\" class=\"anchor\"></a>\n\n<h4>ワーカー</h4>\n<p>ワーカーはジョブを処理する存在であり、移動とタスクの実行が可能である。これはコンテスタントの入力により操作される。(<a href=\"#worker-action\">ワーカーの行動</a>を参照)</p>\n<ul>\n<li><strong>入力</strong><ul>\n<li>続く<var>1</var>行でワーカーの数<var>N_{\\text{worker}}</var>が与えられる。</li>\n<li><p>\n次の<var>N_{\\text{worker}}</var>行で各ワーカーの構成情報:\n</p><ul>\n<li>初期位置(頂点番号): <var>v^{\\text{init}}_i</var></li>\n<li>単位時間に実行可能なタスク数の上限: <var>L^{\\text{max}}_i</var></li>\n<li>実行可能なジョブのタイプ数 <var>N^{\\text{JobType}}_i</var> と タイプの列 <var>\\text{Type}^i_1\\,\\,\\text{Type}^i_2\\,\\,\\cdots\\,\\,\\text{Type}^i_{N^{\\text{JobType}}_i}</var></li>\n</ul>\nが与えられる。(<var>1\\leq i \\leq N_{\\text{worker}}</var>)\n<p></p></li>\n</ul>\n</li>\n</ul>\n<p>この入力における順序はワーカーのIDに対応する。</p>\n<p>ワーカーごとに、単位時間に実行可能なタスク数の上限 や 処理できるジョブのタイプは異なる。また、実際に実行可能なタスク数は天候により左右される。\n</p><details><summary>入力例</summary>\n以下は <var>N_{\\text{worker}}=5</var> の例:<p></p>\n<div class=\"codehilite\"><pre><span></span>5\n6 100 3 1 2 3\n13 59 1 3\n10 55 2 2 3\n9 47 3 1 2 3\n9 89 1 2\n</pre></div>\n\n\n<p>(末尾に改行有)</p>\n<ul>\n<li>1行目:ワーカーの数は<code>5</code>である。(<var>N_{\\text{worker}}=5</var>)</li>\n<li>2行目:ID=1であるワーカーの記述。<ul>\n<li>初期位置は頂点番号<code>6</code>に対応する頂点である。(<var>v^{\\text{init}}_1=6</var>)</li>\n<li>単位時間あたりに実行可能なタスク数の上限は<code>100</code>である。(<var>L^{\\text{max}}_1=100</var>)</li>\n<li>実行可能なジョブのタイプは<code>3</code>つあり(<var>N^{\\text{JobType}}_1=3</var>)、それらは<code>1</code>と<code>2</code>と<code>3</code>である。(<var>\\text{Type}^1_1=1,\\text{Type}^1_2=2,\\text{Type}^1_3=3</var>)</li>\n</ul>\n</li>\n<li>3行目:ID=2であるワーカーの記述。<ul>\n<li>初期位置は頂点番号<code>13</code>に対応する頂点である。(<var>v^{\\text{init}}_2=13</var>)</li>\n<li>単位時間あたりに実行可能なタスク数の上限は<code>59</code>である。(<var>L^{\\text{max}}_2=59</var>)</li>\n<li>実行可能なジョブのタイプは<code>1</code>つあり(<var>N^{\\text{JobType}}_2=1</var>)、それは<code>3</code>である。(<var>\\text{Type}^2_1=3</var>)</li>\n</ul>\n</li>\n<li>4行目:ID=3であるワーカーの記述。<ul>\n<li>初期位置は頂点番号<code>10</code>に対応する頂点である。(<var>v^{\\text{init}}_3=10</var>)</li>\n<li>単位時間あたりに実行可能なタスク数の上限は<code>55</code>である。(<var>L^{\\text{max}}_3=55</var>)</li>\n<li>実行可能なジョブのタイプは<code>2</code>つあり(<var>N^{\\text{JobType}}_3=2</var>)、それらは<code>2</code>と<code>3</code>である。(<var>\\text{Type}^3_1=2,\\text{Type}^3_2=3</var>)</li>\n</ul>\n</li>\n<li>5行目:ID=4であるワーカーの記述。<ul>\n<li>初期位置は頂点番号<code>9</code>に対応する頂点である。(<var>v^{\\text{init}}_4=9</var>)</li>\n<li>単位時間あたりに実行可能なタスク数の上限は<code>47</code>である。(<var>L^{\\text{max}}_4=47</var>)</li>\n<li>実行可能なジョブのタイプは<code>3</code>つあり(<var>N^{\\text{JobType}}_4=3</var>)、それらは<code>1</code>と<code>2</code>と<code>3</code>である。(<var>\\text{Type}^4_1=1,\\text{Type}^4_2=2,\\text{Type}^4_3=3</var>)</li>\n</ul>\n</li>\n<li>6(<var>=1+N_{\\text{worker}}</var>)行目:ID=5であるワーカーの記述。<ul>\n<li>初期位置は頂点番号<code>9</code>に対応する頂点である。(<var>v^{\\text{init}}_5=9</var>)</li>\n<li>単位時間あたりに実行可能なタスク数の上限は<code>89</code>である。(<var>L^{\\text{max}}_5=89</var>)</li>\n<li>実行可能なジョブのタイプは<code>1</code>つあり(<var>N^{\\text{JobType}}_5=1</var>)、それは<code>2</code>である。(<var>\\text{Type}^5_1=2</var>)\n</li></ul></li></ul></details>\n<a id=\"job\" class=\"anchor\"></a>\n\n\n\n<h4>ジョブ</h4>\n<p>ジョブは頂点上でワーカーが実行する仕事である。</p>\n<ul>\n<li><strong>ジョブとは</strong><ul>\n<li><strong>ジョブ</strong>は現実における作業の1つの単位に相当し、例えば作物の収穫や農薬の散布等である。</li>\n<li>これらはより小さな単位の複数作業から構成される。例えば、果実1つを摘み取る、稲を一定面積刈り取る、農薬を一定面積に撒く、といったものである。このようにジョブを構成する小さな単位の作業をここでは<strong>タスク</strong>と呼ぶことにする。</li>\n<li>ジョブを構成するタスクが全て一定量行われることでそのジョブは完了すると考える。</li>\n<li>現実的にはジョブは複数種類のタスクから構成されるかもしれないが、今回は単純化しタスクをこなす量だけに着目する。すなわち、<strong>タスクを規定の量処理することでジョブが完了したとみなす</strong>ことにする。</li>\n<li>ジョブが行われる場所はそのジョブ毎に異なる。この問題ではそれを<a href=\"#geo-data\">地理情報</a>として与えられた<strong>グラフの頂点上にジョブを配置</strong>することで表現する。</li>\n</ul>\n</li>\n<li><strong>タスクの処理と報酬</strong><ul>\n<li>各ジョブのタスクを処理するものとして<strong><a href=\"#worker\">ワーカー</a></strong>が存在する。</li>\n<li>コンテスタントは各ワーカーに<strong>移動</strong>や<strong>作業</strong>の指示を出し、ジョブが存在する頂点に移動させタスクを処理する。</li>\n<li>コンテスタントは<strong>ジョブを<font color=\"#DC143C\">完了する(=タスクを規定の量処理する)</font>ことで報酬を得る</strong>。</li>\n<li>ワーカーは単位時間あたりに処理できるタスク量に上限(<a href=\"#task-limit\">実行タスク数制限</a>)があり、ジョブを完了するにはある程度時間がかかる。典型的には、ある時刻から一定時間、毎時刻タスクを一定量処理することになる。</li>\n<li><strong>ジョブ完了時に得られる報酬はタスクを処理した時刻によって異なる</strong>。具体的には:<p style=\"text-align:center;\">各時刻におけるタスク処理量あたりの報酬量<var>r(t)</var> <var>\\times</var> その時刻に処理されたタスク量</p>の時間に関する総和(<var>t=1,2,\\cdots,T_\\text{max}</var>)である。</li>\n<li>各時刻におけるタスク処理量あたりの報酬量<var>r(t)</var>は<strong>ジョブ毎にも異なる。</strong></li>\n<li>全ワーカーが集めた報酬の総和がこの問題のスコアを構成する中心的な要素である。(<a href=\"#scoring-method\">採点方法</a>) コンテスタントはこの報酬の総和が大きくなるように、他の要素も考慮しつつワーカーの行動を決定する。</li>\n</ul>\n</li>\n<li><strong>ジョブ間の依存関係</strong><ul>\n<li>ジョブは他のジョブに依存する場合がある。すなわち、そのジョブが依存するジョブが全て完了していなければそのジョブのタスクを処理することができないという制限がある。</li>\n<li>依存するジョブが存在しない場合このような制限は無い。</li>\n</ul>\n</li>\n<li><strong>ジョブの受託</strong><ul>\n<li>コンテスタントは<strong>問題開始時に受託するジョブを選択する</strong>。(<a href=\"#output1\">出力1</a>)</li>\n<li><strong>受託が必須であるジョブが存在する</strong>ため、それらを全て含むようにジョブを選択する。</li>\n<li>受託したジョブが未完了のまま作業期間を終えた場合、ジョブ毎に指定された<strong>未完了ペナルティが発生する。</strong> </li>\n</ul>\n</li>\n</ul>\n<p></p><details open=\"\"><summary>各種制限</summary>\n<ul>\n<li>報酬が獲得できない時刻(タスク処理量あたりの報酬量 = 0 である時刻)にはタスクを処理することができない。</li>\n<li>ワーカーの単位時間当たりのタスク実行数上限は天候に影響される。(<a href=\"#task-limit\">実行タスク数制限</a>)</li>\n<li>受託していないジョブは実行できない。</li>\n</ul></details>\n<br>\n<br><p></p>\n<ul>\n<li><strong>入力</strong><ul>\n<li>続く<var>1</var>行でジョブの数<var>N_{\\text{job}}</var>が与えられる。</li>\n<li>次の行からジョブの構成情報<var>\\text{Job}_i</var>が<var>N_{\\text{job}}</var>個与えられる。(合計<var>N_{\\text{job}}\\times 3</var>行)</li>\n</ul>\n</li>\n</ul>\n<p>ジョブの構成情報<var>\\text{Job}_i</var>は次の形式で与えられる。</p>\n<div class=\"codehilite\"><pre><span></span><var>\n\\text{ID}^{\\rm{job}}_i\\,\\,\\text{Type}_i\\,\\,N^{\\rm{task}}_i\\,\\,v^{\\rm{job}}_i\\,\\, P^{\\rm{job}}_i\\,\\,d^\\text{weather}_i\\,\\, f^{\\rm{mandatory}}_i\\\\\nN^{\\rm{reward}}_i\\,\\, t^{\\rm{reward}}_{i,1}\\,\\, y^{\\rm{reward}}_{i,1}\\cdots t^{\\rm{reward}}_{i,N^{\\rm{reward}}_i}\\,\\, y^{\\rm{reward}}_{i,N^{\\rm{reward}}_i}\\\\\nN^{\\rm{depend}}_i\\,\\, {\\rm{id}}^{\\rm{depend}}_{i,1}\\,\\, \\cdots \\,\\,{\\rm{id}}^{\\rm{depend}}_{i,N^{\\rm{depend}}_i}</var>\n</pre></div>\n\n\n<ul>\n<li>1行目<ul>\n<li>ジョブID: <var>\\text{ID}^{\\text{job}}_i</var></li>\n<li>ジョブタイプ: <var>\\text{Type}_i</var></li>\n<li>完了までのタスク数: <var>N^{\\text{task}}_i</var></li>\n<li>ジョブの位置(頂点番号): <var>v^{\\text{job}}_i</var></li>\n<li>ジョブを受託したが完了しなかった場合のペナルティ係数: <var>P^{\\text{job}}_i</var></li>\n<li>天候依存度: <var>d^\\text{weather}_i</var></li>\n<li>受託必須ジョブフラグ: <var>f^{\\text{mandatory}}_i</var> (<var>0</var>:必須でない、<var>1</var>:必須)</li>\n</ul>\n</li>\n<li>2行目(報酬関数<var>r(t)</var>の定義)<ul>\n<li>報酬関数の制御点個数:<var>N^{\\text{reward}}_i</var></li>\n<li>制御点の列:<var>t^{\\rm{reward}}_{i,1}\\,\\,y^{\\rm{reward}}_{i,1}\\,\\,t^{\\rm{reward}}_{i,2}\\,\\,y^{\\rm{reward}}_{i,2}\\,\\,\\cdots\\,\\,t^{\\rm{reward}}_{i,N^{\\text{reward}}_i}\\,\\,y^{\\rm{reward}}_{i,N^{\\text{reward}}_i}</var></li>\n</ul>\n</li>\n<li>3行目(依存するジョブ)<ul>\n<li>依存するジョブの数: <var>N^{\\text{depend}}_i</var></li>\n<li>依存するジョブID: <var>{\\rm{id}}^{\\rm{depend}}_{i,1}\\,\\,{\\rm{id}}^{\\rm{depend}}_{i,2}\\,\\, \\cdots \\,\\,{\\rm{id}}^{\\rm{depend}}_{i,N^{\\rm{depend}}_i}</var></li>\n</ul>\n</li>\n</ul>\n<p></p><details><summary>報酬関数<var>r(t)</var>の詳細</summary>\n時刻<var>t</var>におけるタスク当たりの報酬を与える関数<var>r(t)</var>は、1個以上の制御点(時刻と値のペア)とそれらの間の線形補間で定める。<p></p>\n<p>すなわち、制御点の列<var>p=((t_i,y_i))_{i=1,\\cdots,n}</var>  (<var>t_i,y_i\\in \\mathbb{Z},t_1 &lt; t_2 &lt; \\cdots &lt; t_n,n\\geq 1</var>)が与えられたとき、時刻<var>t</var>におけるタスク当たりの報酬を与える関数<var>r(t)</var> (正確には<var>r(t;p)</var>)を</p>\n<p></p><p><var>\nr(t)=\\begin{cases}\ny_1, &amp; \\text{if}\\,\\, t &lt; t_1, \\\\\ny_n, &amp; \\text{if}\\,\\, t \\geq t_n, \\\\\n(y_\\text{next}-y_\\text{prev})(t-t_\\text{prev})/(t_\\text{next}-t_\\text{prev})+y_\\text{prev}, &amp; \\text{otherwise}.\n\\end{cases}</var></p>\nと定める。<p></p>\n<p>ただし、<var>(t_\\text{prev},y_\\text{prev})</var>は時刻に関して<var>t</var>を超えない最大のペア、<var>(t_\\text{next},y_\\text{next})</var>は時刻に関して<var>t</var>を超える最小のペアである。</p>\n<p><var>r(t)</var>（と<var>r(t)</var>の整数倍、およびそれらの和）は小数で計算される。</p>\n<p></p></details><p></p>\n<p></p><details><summary>入力例</summary>\n以下は <var>N_{\\text{job}}=6</var>の例(これはジョブの数が極端に少ない例であることに注意):<p></p>\n<div class=\"codehilite\"><pre><span></span>6\n1 1 906 10 0.94469412898840599 0.07857326752336613 0\n13 11 0 12 1212810 37 1849941 63 2266874 88 1944271 113 1207029 139 768959 164 808665 189 992126 214 1137116 240 907954 265 903397 266 0\n0\n2 3 905 2 0.96478158647239831 0.056877102556647817 0\n7 92 0 93 1280499 121 1553205 149 1429506 176 1419189 204 1731967 205 0\n0\n3 1 1052 4 0.94436951517275258 0.071240847781028308 0\n7 191 0 192 1914094 218 1735762 244 1444725 270 1275768 296 975408 297 0\n0\n4 3 653 4 0.95274950239675604 0.14137003825803521 0\n10 70 0 71 1319303 94 1329844 118 1503315 141 1161131 165 1294526 188 849137 212 1953166 235 2087503 236 0\n1 2\n5 1 1452 12 0.95747093286627682 0.076042573628832266 0\n8 122 0 123 1667665 149 911519 174 1511934 200 1967913 225 1633211 251 1589845 252 0\n2 6 4\n6 2 737 6 0.95812926774107732 0.049371044631834608 1\n11 82 0 83 1431723 108 1475010 133 1032345 158 1012865 183 1593586 207 1923638 232 1956884 257 2797127 282 2877123 283 0\n0\n</pre></div>\n\n\n<ul>\n<li>1行目:全ジョブの数は<code>6</code>である。(<var>N_{\\text{job}}=6</var>)<ul>\n<li>実際の問題では数百以上のジョブが与えられる。</li>\n</ul>\n</li>\n<li>2行目:ジョブID=1の記述開始。<ul>\n<li>ジョブIDは<code>1</code>である。(<var>\\text{ID}^{\\text{job}}_1=1</var>)</li>\n<li>このジョブのタイプは<code>1</code>である。(<var>\\text{Type}_1=1</var>)</li>\n<li>このジョブの完了に必要なタスク数は<code>906</code>である。(<var>N^{\\text{task}}_1=906</var>)</li>\n<li>このジョブは頂点<code>10</code>上に存在する。(<var>v^{\\text{job}}_1=10</var>)</li>\n<li>このジョブを選択したが未完了のまま作業期間(<var>T_\\text{max}</var>)が終了した場合、未完了ペナルティ<code>0.94469412898840599</code>が適用される。(<a href=\"#scoring-method\">採点方法</a>)(<var>P^{\\text{job}}_1=0.94469412898840599</var>)</li>\n<li>このジョブの天候依存度は<code>0.07857326752336613</code>である。(<a href=\"#task-limit\">実行タスク数制限</a>)(<var>d^\\text{weather}_1=0.07857326752336613</var>)</li>\n<li>このジョブは選択必須ではない。(<var>f^{\\text{mandatory}}_1=0</var>)</li>\n</ul>\n</li>\n<li>3行目:ジョブID=1の報酬を表す関数の記述<ul>\n<li>制御点個数は<code>13</code>個である。(<var>N^{\\text{reward}}_1=13</var>)</li>\n<li>制御点の列は((<code>11</code>,<code>0</code>), (<code>12</code>,<code>1212810</code>), (<code>37</code>,<code>1849941</code>), (<code>63</code>,<code>2266874</code>), (<code>88</code>,<code>1944271</code>), (<code>113</code>,<code>1207029</code>), (<code>139</code>,<code>768959</code>), (<code>164</code>,<code>808665</code>), (<code>189</code>,<code>992126</code>), (<code>214</code>,<code>1137116</code>), (<code>240</code>,<code>907954</code>), (<code>265</code>,<code>903397</code>), (<code>266</code>,<code>0</code>))である。<ul>\n<li>報酬が得られる時刻は<var>12,13,\\cdots,265</var>である。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>4行目:ジョブID=1が依存するジョブ。ジョブID=1の記述終了。<ul>\n<li>このジョブが依存するジョブの数は<code>0</code>個である。(<var>N^{\\text{depend}}_1=0</var>)</li>\n<li>(依存するジョブの数が<code>0</code>なので依存するジョブIDは存在しない。)</li>\n</ul>\n</li>\n<li>5行目:ジョブID=2の記述開始。<ul>\n<li>ジョブIDは<code>2</code>である。(<var>\\text{ID}^{\\text{job}}_2=2</var>)</li>\n<li>このジョブのタイプは<code>3</code>である。(<var>\\text{Type}_2=3</var>)</li>\n<li>このジョブの完了に必要なタスク数は<code>905</code>である。(<var>N^{\\text{task}}_2=905</var>)</li>\n<li>このジョブは頂点<code>2</code>上に存在する。(<var>v^{\\text{job}}_2=2</var>)</li>\n<li>このジョブを選択したが未完了のまま作業期間(<var>T_\\text{max}</var>)が終了した場合、未完了ペナルティ<code>0.96478158647239831</code>が適用される。(<a href=\"#scoring-method\">採点方法</a>)(<var>P^{\\text{job}}_2=0.96478158647239831</var>)</li>\n<li>このジョブの天候依存度は<code>0.056877102556647817</code>である。(<a href=\"#task-limit\">実行タスク数制限</a>)(<var>d^\\text{weather}_2=0.056877102556647817</var>)</li>\n<li>このジョブは選択必須ではない。(<var>f^{\\text{mandatory}}_2=0</var>)</li>\n</ul>\n</li>\n<li>6行目:ジョブID=2の報酬を表す関数の記述<ul>\n<li>制御点個数は<code>7</code>個である。(<var>N^{\\text{reward}}_2=7</var>)</li>\n<li>制御点の列は((<code>92</code>,<code>0</code>), (<code>93</code>,<code>1280499</code>), (<code>121</code>,<code>1553205</code>), (<code>149</code>,<code>1429506</code>), (<code>176</code>,<code>1419189</code>), (<code>204</code>,<code>1731967</code>), (<code>205</code>,<code>0</code>))である。<ul>\n<li>報酬が得られる時刻は<var>93,94,\\cdots,204</var>である。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>7行目:ジョブID=2が依存するジョブ。ジョブID=2の記述終了。<ul>\n<li>このジョブが依存するジョブの数は<code>0</code>個である。(<var>N^{\\text{depend}}_2=0</var>)</li>\n<li>(依存するジョブの数が<code>0</code>なので依存するジョブIDは存在しない。)</li>\n</ul>\n</li>\n<li>8行目:ジョブID=3の記述開始。<ul>\n<li>ジョブIDは<code>3</code>である。(<var>\\text{ID}^{\\text{job}}_3=3</var>)</li>\n<li>このジョブのタイプは<code>1</code>である。(<var>\\text{Type}_3=1</var>)</li>\n<li>このジョブの完了に必要なタスク数は<code>1052</code>である。(<var>N^{\\text{task}}_3=1052</var>)</li>\n<li>このジョブは頂点<code>4</code>上に存在する。(<var>v^{\\text{job}}_3=4</var>)</li>\n<li>このジョブを選択したが未完了のまま作業期間(<var>T_\\text{max}</var>)が終了した場合、未完了ペナルティ<code>0.94436951517275258</code>が適用される。(<a href=\"#scoring-method\">採点方法</a>)(<var>P^{\\text{job}}_3=0.94436951517275258</var>)</li>\n<li>このジョブの天候依存度は<code>0.071240847781028308</code>である。(<a href=\"#task-limit\">実行タスク数制限</a>)(<var>d^\\text{weather}_3=0.071240847781028308</var>)</li>\n<li>このジョブは選択必須ではない。(<var>f^{\\text{mandatory}}_3=0</var>)</li>\n</ul>\n</li>\n<li>9行目:ジョブID=3の報酬を表す関数の記述<ul>\n<li>制御点個数は<code>7</code>個である。(<var>N^{\\text{reward}}_3=7</var>)</li>\n<li>制御点の列は((<code>191</code>,<code>0</code>), (<code>192</code>,<code>1914094</code>), (<code>218</code>,<code>1735762</code>), (<code>244</code>,<code>1444725</code>), (<code>270</code>,<code>1275768</code>), (<code>296</code>,<code>975408</code>), (<code>297</code>,<code>0</code>))である。<ul>\n<li>報酬が得られる時刻は<var>192,193,\\cdots,296</var>である。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>10行目:ジョブID=3が依存するジョブ。ジョブID=3の記述終了。<ul>\n<li>このジョブが依存するジョブの数は<code>0</code>個である。(<var>N^{\\text{depend}}_3=0</var>)</li>\n<li>(依存するジョブの数が<code>0</code>なので依存するジョブIDは存在しない。)</li>\n</ul>\n</li>\n<li>11行目:ジョブID=4の記述開始。<ul>\n<li>ジョブIDは<code>4</code>である。(<var>\\text{ID}^{\\text{job}}_4=4</var>)</li>\n<li>このジョブのタイプは<code>3</code>である。(<var>\\text{Type}_4=3</var>)</li>\n<li>このジョブの完了に必要なタスク数は<code>653</code>である。(<var>N^{\\text{task}}_4=653</var>)</li>\n<li>このジョブは頂点<code>4</code>上に存在する。(<var>v^{\\text{job}}_4=4</var>)</li>\n<li>このジョブを選択したが未完了のまま作業期間(<var>T_\\text{max}</var>)が終了した場合、未完了ペナルティ<code>0.95274950239675604</code>が適用される。(<a href=\"#scoring-method\">採点方法</a>)(<var>P^{\\text{job}}_4=0.95274950239675604</var>)</li>\n<li>このジョブの天候依存度は<code>0.14137003825803521</code>である。(<a href=\"#task-limit\">実行タスク数制限</a>)(<var>d^\\text{weather}_4=0.14137003825803521</var>)</li>\n<li>このジョブは選択必須ではない。(<var>f^{\\text{mandatory}}_4=0</var>)</li>\n</ul>\n</li>\n<li>12行目:ジョブID=4の報酬を表す関数の記述<ul>\n<li>制御点個数は<code>10</code>個である。(<var>N^{\\text{reward}}_4=10</var>)</li>\n<li>制御点の列は((<code>70</code>,<code>0</code>), (<code>71</code>,<code>1319303</code>), (<code>94</code>,<code>1329844</code>), (<code>118</code>,<code>1503315</code>), (<code>141</code>,<code>1161131</code>), (<code>165</code>,<code>1294526</code>), (<code>188</code>,<code>849137</code>), (<code>212</code>,<code>1953166</code>), (<code>235</code>,<code>2087503</code>), (<code>236</code>,<code>0</code>))である。<ul>\n<li>報酬が得られる時刻は<var>71,72,\\cdots,235</var>である。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>13行目:ジョブID=4が依存するジョブ。ジョブID=4の記述終了。<ul>\n<li>このジョブが依存するジョブの数は<code>1</code>個である。(<var>N^{\\text{depend}}_4=1</var>)</li>\n<li>このジョブはID=<code>2</code>のジョブに依存する。(<var>\\text{id}^\\text{depend}_{4,1}=2</var>)</li>\n</ul>\n</li>\n<li>14行目:ジョブID=5の記述開始。<ul>\n<li>ジョブIDは<code>5</code>である。(<var>\\text{ID}^{\\text{job}}_5=5</var>)</li>\n<li>このジョブのタイプは<code>1</code>である。(<var>\\text{Type}_5=1</var>)</li>\n<li>このジョブの完了に必要なタスク数は<code>1452</code>である。(<var>N^{\\text{task}}_5=1452</var>)</li>\n<li>このジョブは頂点<code>12</code>上に存在する。(<var>v^{\\text{job}}_5=12</var>)</li>\n<li>このジョブを選択したが未完了のまま作業期間(<var>T_\\text{max}</var>)が終了した場合、未完了ペナルティ<code>0.95747093286627682</code>が適用される。(<a href=\"#scoring-method\">採点方法</a>)(<var>P^{\\text{job}}_5=0.95747093286627682</var>)</li>\n<li>このジョブの天候依存度は<code>0.076042573628832266</code>である。(<a href=\"#task-limit\">実行タスク数制限</a>)(<var>d^\\text{weather}_5=0.076042573628832266</var>)</li>\n<li>このジョブは選択必須ではない。(<var>f^{\\text{mandatory}}_5=0</var>)</li>\n</ul>\n</li>\n<li>15行目:ジョブID=5の報酬を表す関数の記述<ul>\n<li>制御点個数は<code>8</code>個である。(<var>N^{\\text{reward}}_5=8</var>)</li>\n<li>制御点の列は((<code>122</code>,<code>0</code>), (<code>123</code>,<code>1667665</code>), (<code>149</code>,<code>911519</code>), (<code>174</code>,<code>1511934</code>), (<code>200</code>,<code>1967913</code>), (<code>225</code>,<code>1633211</code>), (<code>251</code>,<code>1589845</code>), (<code>252</code>,<code>0</code>))である。<ul>\n<li>報酬が得られる時刻は<var>123,124,\\cdots,251</var>である。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>16行目:ジョブID=5が依存するジョブ。ジョブID=5の記述終了。<ul>\n<li>このジョブが依存するジョブの数は<code>2</code>個である。(<var>N^{\\text{depend}}_5=2</var>)</li>\n<li>このジョブはID=<code>6</code>,<code>4</code>のジョブ全てに依存する。(<var>\\text{id}^\\text{depend}_{5,1}=6,\\text{id}^\\text{depend}_{5,2}=4</var>)</li>\n</ul>\n</li>\n<li>17行目:ジョブID=6の記述開始。<ul>\n<li>ジョブIDは<code>6</code>である。(<var>\\text{ID}^{\\text{job}}_6=6</var>)</li>\n<li>このジョブのタイプは<code>2</code>である。(<var>\\text{Type}_6=2</var>)</li>\n<li>このジョブの完了に必要なタスク数は<code>737</code>である。(<var>N^{\\text{task}}_6=737</var>)</li>\n<li>このジョブは頂点<code>6</code>上に存在する。(<var>v^{\\text{job}}_6=6</var>)</li>\n<li>このジョブを選択したが未完了のまま作業期間(<var>T_\\text{max}</var>)が終了した場合、未完了ペナルティ<code>0.95812926774107732</code>が適用される。(<a href=\"#scoring-method\">採点方法</a>)(<var>P^{\\text{job}}_6=0.95812926774107732</var>)</li>\n<li>このジョブの天候依存度は<code>0.049371044631834608</code>である。(<a href=\"#task-limit\">実行タスク数制限</a>)(<var>d^\\text{weather}_6=0.049371044631834608</var>)</li>\n<li><strong>このジョブは選択必須である。</strong>(<var>f^{\\text{mandatory}}_6=1</var>)</li>\n</ul>\n</li>\n<li>18行目:ジョブID=6の報酬を表す関数の記述<ul>\n<li>制御点個数は<code>11</code>個である。(<var>N^{\\text{reward}}_6=11</var>)</li>\n<li>制御点の列は((<code>82</code>,<code>0</code>), (<code>83</code>,<code>1431723</code>), (<code>108</code>,<code>1475010</code>), (<code>133</code>,<code>1032345</code>), (<code>158</code>,<code>1012865</code>), (<code>183</code>,<code>1593586</code>), (<code>207</code>,<code>1923638</code>), (<code>232</code>,<code>1956884</code>), (<code>257</code>,<code>2797127</code>), (<code>282</code>,<code>2877123</code>), (<code>283</code>,<code>0</code>))である。<ul>\n<li>報酬が得られる時刻は<var>83,84,\\cdots,282</var>である。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>19(<var>=1+3\\times N_{\\text{job}}</var>)行目:ジョブID=6が依存するジョブ。ジョブID=6の記述終了。<ul>\n<li>このジョブが依存するジョブの数は<code>0</code>個である。(<var>N^{\\text{depend}}_6=0</var>)</li>\n<li>(依存するジョブの数が<code>0</code>なので依存するジョブIDは存在しない。)\n</li></ul></li></ul></details>\n\n\n\n<p><a id=\"weather\" class=\"anchor\"></a></p>\n<h4>天候</h4>\n<p>天候はタスクの実行可能数に影響する値で、毎時刻確率的に状態遷移する。</p>\n<ul>\n<li><strong>入力</strong><ul>\n<li>続く<var>1</var>行で基本天候区間長<var>T^\\text{weather}</var>と天候の全状態数<var>N^\\text{weather}</var>が与えられる。</li>\n<li>続く<var>N^\\text{weather}</var>行で、状態<var>i</var>から各状態への遷移確率 <var>p^{\\text{weather}}_{i,1} \\,\\, p^{\\text{weather}}_{i,2} \\,\\,\\cdots \\,\\, p^{\\text{weather}}_{i,N^{\\text{weather}}}</var>が与えられる。(遷移確率行列)</li>\n<li>続く<var>1</var>行で、各天候における<a href=\"#task-limit\">実行タスク数制限</a>を計算するための制限定数<var>c_1\\,\\,c_2\\,\\,\\cdots\\,\\,c_{N_\\text{weather}}</var>が与えられる。 </li>\n</ul>\n</li>\n</ul>\n<p><strong>この問題では<var>N^\\text{weather}=7</var>で固定であり、<font color=\"#DC143C\">天候<var>1</var>は快晴、<var>2</var>は晴れ、<var>3</var>は薄雲、<var>4</var>は曇り、<var>5</var>は弱い雨、<var>6</var>は普通程度の雨、<var>7</var>は強い雨</font>に対応する。</strong></p>\n<p></p><details><summary>天候の挙動・更新処理</summary>\n基本天候と実天候の2種類の内部状態が存在し、直接タスク実行数に影響を与えるのは実天候のみである。<p></p>\n<h4>基本天候</h4>\n<p>作業期間全体を長さが<var>T^\\text{weather}</var>である基本天候区間<var>b_i (i=1,\\cdots,n(=T_\\text{max}/T^\\text{weather}))</var>に等分割する。</p>\n<p><var>b_i</var>はそれぞれ独立した天候状態<var>w_i</var>を持ち、これを基本天候と呼ぶ。</p>\n<p>時刻<var>t=1</var>の開始時に遷移確率行列の定常分布に従い、<var>w_i</var>を全て独立に確率的に決定する。\n以降、時間が<var>T^\\text{weather}</var>経過する度に遷移確率行列を用いて各区間の状態<var>w_i</var>を独立に更新する。</p>\n<h4>実天候</h4>\n<p>実天候状態を<var>w</var>とすると、 <var>w</var>は次のように更新される:</p>\n<p>時刻<var>t</var>の開始時に</p>\n<ul>\n<li><var>t</var>が、ある基本天候区間<var>b_i</var>の開始時刻と一致する場合:<var>w \\leftarrow w_i</var> </li>\n<li>その他の場合:<var>w</var>を遷移確率行列を用いて更新</li>\n</ul>\n<p>ただし、実天候の更新処理より基本天候の更新処理の方が先に行われる。</p>\n<p>他の箇所で単に「天候（の値・の状態）」と言った場合、実天候<var>w</var>の値の事を指す。</p>\n<p>天候を決定するために使われるシード値はテストケースごとに異なる値が与えられる。</p>\n<p></p></details><p></p>\n<p><a href=\"#input2\">入力2</a>で、時間<var>T^\\text{weather}</var>ごとの将来の各天候状態の確率が、時刻<var>t=1</var>から時間<var>T^\\text{weather}</var>経過する度に与えられる。(時刻<var>t=1</var>自体も含む)</p>\n<p></p><details><summary>入力例</summary>\n以下は <var>T^\\text{weather}=10,N^\\text{weather}=7</var> の例:<p></p>\n<div class=\"codehilite\"><pre><span></span>10 7\n0.65038945819291316 0.3456395688250497 0.0039709729820371371 0 0 0 0\n0.29367291714300126 0.57978625074387669 0.11253142456916906 0.014009407543952863 0 0 0\n1.4131189430426344e-09 0.18905960051799561 0.44909739165434842 0.32239542530231813 0.039447581112218938 0 0\n0 0.043752041690362654 0.079271361143687852 0.87011603340370036 0.0033077052290538069 0.0035528585331954204 0\n0 0 0.015190350742277408 0.044334491311077411 0.90080171493640016 0.039640375730251982 3.3067279992976463e-05\n0 0 0 2.9123680876183852e-09 0.21976983161374733 0.68711791872304939 0.093112246750835195\n0 0 0 0 0.018677162951541051 0.41030647336908055 0.57101636367937847\n0 1 2 3 10 14 20\n</pre></div>\n\n\n<ul>\n<li>1行目:基本天候区間長は<code>10</code>、天候の全状態数は<code>7</code>である。(<var>T^\\text{weather}=10,N^\\text{weather}=7</var>)</li>\n<li>2行目:状態<var>1</var>から状態<var>1,2,3,4,5,6,7</var>への(基本)遷移確率はそれぞれ<code>0.65038945819291316</code>,<code>0.3456395688250497</code>,<code>0.0039709729820371371</code>,<code>0</code>,<code>0</code>,<code>0</code>,<code>0</code>である。</li>\n<li>3行目:状態<var>2</var>から状態<var>1,2,3,4,5,6,7</var>への(基本)遷移確率はそれぞれ<code>0.29367291714300126</code>,<code>0.57978625074387669</code>,<code>0.11253142456916906</code>,<code>0.014009407543952863</code>,<code>0</code>,<code>0</code>,<code>0</code>である。</li>\n<li>4行目:状態<var>3</var>から状態<var>1,2,3,4,5,6,7</var>への(基本)遷移確率はそれぞれ<code>1.4131189430426344e-09</code>,<code>0.18905960051799561</code>,<code>0.44909739165434842</code>,<code>0.32239542530231813</code>,<code>0.039447581112218938</code>,<code>0</code>,<code>0</code>である。</li>\n<li>5行目:状態<var>4</var>から状態<var>1,2,3,4,5,6,7</var>への(基本)遷移確率はそれぞれ<code>0</code>,<code>0.043752041690362654</code>,<code>0.079271361143687852</code>,<code>0.87011603340370036</code>,<code>0.0033077052290538069</code>,<code>0.0035528585331954204</code>,<code>0</code>である。</li>\n<li>6行目:状態<var>5</var>から状態<var>1,2,3,4,5,6,7</var>への(基本)遷移確率はそれぞれ<code>0</code>,<code>0</code>,<code>0.015190350742277408</code>,<code>0.044334491311077411</code>,<code>0.90080171493640016</code>,<code>0.039640375730251982</code>,<code>3.3067279992976463e-05</code>である。</li>\n<li>7行目:状態<var>6</var>から状態<var>1,2,3,4,5,6,7</var>への(基本)遷移確率はそれぞれ<code>0</code>,<code>0</code>,<code>0</code>,<code>2.9123680876183852e-09</code>,<code>0.21976983161374733</code>,<code>0.68711791872304939</code>,<code>0.093112246750835195</code>である。</li>\n<li>8行目:状態<var>7</var>から状態<var>1,2,3,4,5,6,7</var>への(基本)遷移確率はそれぞれ<code>0</code>,<code>0</code>,<code>0</code>,<code>0</code>,<code>0.018677162951541051</code>,<code>0.41030647336908055</code>,<code>0.57101636367937847</code>である。</li>\n<li>9行目:状態<var>1,2,3,4,5,6,7</var>に対する制限定数はそれぞれ<code>0</code>,<code>1</code>,<code>2</code>,<code>3</code>,<code>10</code>,<code>14</code>,<code>20</code>である。\n</li></ul></details>\n\n<p><a id=\"schedule\" class=\"anchor\"></a></p>\n<h4>スケジュール</h4>\n<p>コンテスタントは、各ワーカーごとのジョブ実行のスケジュール（いつ、どのジョブを、どのぐらい）を提出し、スケジュール通りに実行することで加点を得ることができる。スケジュールと実行にズレがあると加点は小さくなる。スケジュールは途中で変更できるが、時間的に直近のスケジュールを変更すると加点は大きく減少する。逆に、遠い未来のスケジュール変更は加点の減少が小さい。</p>\n<p>スケジュール評価の詳細は、<a href=\"#output2\">出力2</a>を参照。</p>\n<p>計画を提出する意図がない場合、任意の計画を提出してよい。</p>\n<ul>\n<li><strong>入力</strong><ul>\n<li>次の<var>1</var>行で最大スケジュール変更ペナルティ <var>P_m</var>、スケジュール変更ペナルティ減衰率<var>R_m</var>、スケジュール加点係数<var>\\alpha</var>が与えられる。</li>\n</ul>\n</li>\n</ul>\n<p></p><details><summary>入力例</summary><p></p>\n<div class=\"codehilite\"><pre><span></span>0.029878077064496654 0.99054720249346828 0.87563809736779619\n</pre></div>\n\n\n<ul>\n<li>1行目:最大スケジュール変更ペナルティは<code>0.029878077064496654</code>、スケジュール変更ペナルティ減衰率は<code>0.99054720249346828</code>、スケジュール加点係数は<code>0.87563809736779619</code>である。(<var>P_m=0.029878077064496654,R_m=0.99054720249346828,\\alpha=0.87563809736779619</var>)\n</li></ul></details>\n\n<h4>天候予測</h4>\n<p>受託するジョブを決定するために開始時点(時刻<var>t=1</var>)での天候予測情報が入力として与えられる。構成は入力2の<a href=\"#weather-forecast\">天候予測</a>と同一であるのでそちらを参照せよ。</p>\n<p></p><details><summary>入力1全体の例</summary><p></p>\n<div class=\"codehilite\"><pre><span></span>300\n14 19\n1 7 1\n1 2 1\n2 9 1\n2 3 1\n3 5 1\n3 7 1\n3 6 1\n4 13 2\n4 10 2\n4 6 1\n4 5 1\n6 8 1\n7 8 1\n8 14 2\n9 11 2\n10 12 2\n10 11 2\n12 13 2\n13 14 2\n5\n6 100 3 1 2 3\n13 59 1 3\n10 55 2 2 3\n9 47 3 1 2 3\n9 89 1 2\n6\n1 1 906 10 0.94469412898840599 0.07857326752336613 0\n13 11 0 12 1212810 37 1849941 63 2266874 88 1944271 113 1207029 139 768959 164 808665 189 992126 214 1137116 240 907954 265 903397 266 0\n0\n2 3 905 2 0.96478158647239831 0.056877102556647817 0\n7 92 0 93 1280499 121 1553205 149 1429506 176 1419189 204 1731967 205 0\n0\n3 1 1052 4 0.94436951517275258 0.071240847781028308 0\n7 191 0 192 1914094 218 1735762 244 1444725 270 1275768 296 975408 297 0\n0\n4 3 653 4 0.95274950239675604 0.14137003825803521 0\n10 70 0 71 1319303 94 1329844 118 1503315 141 1161131 165 1294526 188 849137 212 1953166 235 2087503 236 0\n1 2\n5 1 1452 12 0.95747093286627682 0.076042573628832266 0\n8 122 0 123 1667665 149 911519 174 1511934 200 1967913 225 1633211 251 1589845 252 0\n2 6 4\n6 2 737 6 0.95812926774107732 0.049371044631834608 1\n11 82 0 83 1431723 108 1475010 133 1032345 158 1012865 183 1593586 207 1923638 232 1956884 257 2797127 282 2877123 283 0\n0\n10 7\n0.65038945819291316 0.3456395688250497 0.0039709729820371371 0 0 0 0\n0.29367291714300126 0.57978625074387669 0.11253142456916906 0.014009407543952863 0 0 0\n1.4131189430426344e-09 0.18905960051799561 0.44909739165434842 0.32239542530231813 0.039447581112218938 0 0\n0 0.043752041690362654 0.079271361143687852 0.87011603340370036 0.0033077052290538069 0.0035528585331954204 0\n0 0 0.015190350742277408 0.044334491311077411 0.90080171493640016 0.039640375730251982 3.3067279992976463e-05\n0 0 0 2.9123680876183852e-09 0.21976983161374733 0.68711791872304939 0.093112246750835195\n0 0 0 0 0.018677162951541051 0.41030647336908055 0.57101636367937847\n0 1 2 3 10 14 20\n0.029878077064496654 0.99054720249346828 0.87563809736779619\n1 0 0 0 0 1 0 0\n11 0.32997661987364896 0.35720093880279286 0.10144180605929307 0.18397452127884667 0.023582674286464638 0.0033945272798704107 0.00042891241908338078\n21 0.26146895868607978 0.29829553702903927 0.10367350846525671 0.27413103299772817 0.050432669277988201 0.010115966874572493 0.0018823266693354056\n31 0.20903275687358913 0.2506351074109075 0.10197621041600768 0.32306215864825039 0.090561788952494518 0.020385340563280511 0.0043466371354700514\n41 0.16453280991499084 0.20329129777873356 0.091390970778385427 0.30920472674724836 0.18000987309438846 0.041926491747270762 0.0096438299389825944\n51 0.21773018584216544 0.25781470723187322 0.10129611879665416 0.30911960619088807 0.089756375035668315 0.020014729744938529 0.0042682771578124723\n61 0.18695780159879197 0.22637031212950884 0.095692191594510659 0.30993166346993428 0.14119172380160475 0.032519854076175789 0.0073364533294737588\n71 0.19978365794228928 0.23953773160128791 0.098109392505800377 0.31008680745444389 0.11925953673379487 0.027193693951331609 0.0060291798110520588\n81 0.20381180897940113 0.24366400563862556 0.098856417213860404 0.3100620551039589 0.11244486750690874 0.02553797224640603 0.0056228733108393747\n91 0.21098420754865557 0.2510068631469719 0.10018090439250056 0.30998380940692433 0.10034511870194431 0.02259771906125015 0.0049013777417531382\n101 0.21017332149772244 0.25017760625955138 0.10003235653165234 0.30999988763169445 0.10170583135583394 0.022928465225827428 0.0049825314977181429\n111 0.21035975914577648 0.25036818399930888 0.10006639945926016 0.30999551883837906 0.10139365148795368 0.02285257565351554 0.0049639114158061791\n121 0.21006375850103443 0.25006523326156821 0.10001185087147714 0.3099994276865809 0.10189232028110375 0.022973761374232418 0.0049936480240032411\n131 0.21003860874539299 0.25003947404099974 0.1000071910191422 0.30999960764692047 0.10193484214518268 0.022984093048729243 0.0049961833536327927\n141 0.21002336947231043 0.25002386973415752 0.10000437307823702 0.30999975094869503 0.1019605735904045 0.022990345532450621 0.0049977176437451558\n151 0.21001036314333912 0.25001055377029446 0.10000197057271488 0.30999988860662192 0.1019825193444605 0.022995678324735189 0.0049990262378340521\n161 0.2098468891366603 0.24984320350327363 0.099971794472248382 0.31000174310451423 0.10225822676243579 0.023062676470061792 0.0050154665508059335\n171 0.21001766063059757 0.25001802405322704 0.10000331731605842 0.30999980388842874 0.10197021368851594 0.022992687970461667 0.0049982924527108988\n181 0.21000312608202204 0.25000314492830189 0.10000063442967058 0.30999996928440271 0.10199472644850339 0.022998644688091742 0.0049997541390076946\n191 0.21000646152716931 0.25000655944481537 0.10000125010448897 0.30999993130167014 0.10198910119136487 0.022997277723427214 0.0049994187070641306\n201 0.21000390597655963 0.25000394330415704 0.10000077837739391 0.30999996034571875 0.10199341120724155 0.022998325077383485 0.0049996757115455511\n211 0.21000068372351638 0.25000064465305499 0.10000018358284854 0.30999999695861213 0.10199884564588058 0.022999645671209767 0.004999999764877615\n221 0.21000123276535285 0.25000120671230119 0.10000028493014526 0.3099999907192631 0.10199791966912596 0.022999420654547454 0.0049999445492642201\n231 0.2100001748189628 0.25000012368230085 0.10000008964391316 0.31000000273847578 0.10199970393318095 0.022999854238977081 0.0050000509441893055\n241 0.21000051371752923 0.25000047061605735 0.10000015220117091 0.30999999888829144 0.10199913236874111 0.022999715346170929 0.0050000168620389848\n251 0.21000030618472809 0.25000025816270716 0.10000011389270266 0.31000000124600918 0.10199948238020001 0.022999800400576097 0.0050000377330769279\n261 0.2100000445095816 0.2499999902833088 0.1000000655900994 0.31000000421880708 0.10199992370466664 0.022999907644464797 0.0050000640490715734\n271 0.21000008909654816 0.25000003592742104 0.10000007382040528 0.31000000371226893 0.10199984850715899 0.022999889371122236 0.0050000595650754173\n281 0.21000000318197135 0.24999994797583083 0.10000005796143702 0.31000000468831079 0.10199999340515975 0.02299992458200726 0.005000068205283017\n291 0.21000003070352388 0.24999997614991259 0.10000006304163929 0.31000000437564929 0.10199994698907894 0.022999913302684732 0.0050000654375114001\n</pre></div>\n\n\n<ul>\n<li>1行目:<a href=\"#work-time-frame\">作業期間</a>参照</li>\n<li>2-21行目:<a href=\"#geo-data\">地理情報</a>参照</li>\n<li>22-27行目:<a href=\"#worker\">ワーカー</a>参照</li>\n<li>28-46行目:<a href=\"#job\">ジョブ</a>参照</li>\n<li>47-55行目:<a href=\"#weather\">天候</a>参照</li>\n<li>56行目:<a href=\"#schedule\">スケジュール</a>参照</li>\n<li>57-86行目:開始時(<var>t=1</var>)での天候予測情報(入力2の<a href=\"#weather-forecast\">天候予測</a>参照)\n</li></ul></details>\n\n<p><a id=\"output1\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>出力1</h3>\n<p>これらの情報が与えられた後、コンテスタントは受託するジョブを選択し以下の形式で出力する:</p>\n<div class=\"codehilite\"><pre><span></span><var>\nN^{\\text{selected}}\\,\\, \\text{id}_1\\,\\, \\text{id}_2\\,\\,\\cdots \\,\\,\\text{id}_{N^{\\text{selected}}}\n</var>\n</pre></div>\n\n\n<p>(末尾に改行を挿入すること)</p>\n<p><a id=\"accepting-jobs\" class=\"anchor\"></a></p>\n<h4>ジョブの受託</h4>\n<ul>\n<li><strong>出力</strong><ul>\n<li>最初の<var>1</var>行で、受託するジョブの数<var>N^{\\text{selected}}</var>と受託するジョブIDの列<var>\\text{id}_1\\,\\, \\text{id}_2\\,\\,\\cdots \\,\\,\\text{id}_{N^{\\text{selected}}}</var>を出力する。</li>\n</ul>\n</li>\n</ul>\n<p>以下の条件を満たさない場合<code>WA</code>(Wrong Answer)となる。</p>\n<ul>\n<li><var>N^{\\text{selected}} \\geq 0</var></li>\n<li>ジョブIDの列の長さは<var>N^{\\text{selected}}</var></li>\n<li>指定されたジョブID全てについて、対応するジョブが存在する。</li>\n<li>ジョブIDは重複していない。</li>\n<li>受託必須ジョブ(<var>f^\\text{mandatory}=1</var>であるジョブ)はすべて選択されている。</li>\n<li>選択した全てのジョブについて、依存するジョブが1つ以上存在するならばそれらもまた全て選択されている。</li>\n</ul>\n<p></p><details><summary>出力例</summary><p></p>\n<div class=\"codehilite\"><pre><span></span>4 6 2 3 4\n</pre></div>\n\n\n<ul>\n<li>1行目:コンテスタントは<code>4</code>個のジョブを受託する。受託するジョブのIDは<code>6</code>,<code>2</code>,<code>3</code>,<code>4</code>である。(<var>N^{\\text{selected}}=4,\\text{id}_1=6,\\text{id}_2=2,\\text{id}_3=3,\\text{id}_4=4</var>)\n</li></ul></details>\n\n<p><a id=\"input2\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>入力2(毎時刻)</h3>\n<p>出力1が正常に終了すると各時刻での入出力に移行する。\n時刻<var>t=1</var>から開始し、以後入力2に到達する度に時刻が<var>1</var>進む。</p>\n<p>毎時刻、入力として</p>\n<ol>\n<li>現在の天候</li>\n<li>受託したジョブの情報</li>\n<li>ワーカーの現在位置</li>\n<li>(時間<var>T^\\text{weather}</var>毎に)天候の予報</li>\n</ol>\n<p>が以下の形式で標準入力から与えられる。</p>\n<div class=\"codehilite\"><pre><span></span><var>\nw\\\\\nN^\\text{selected}\\\\\n{\\rm{id}}^{\\rm{job}}_1\\,\\, n^{\\rm{rest}}_1\\\\\n\\vdots\\\\\n{\\rm{id}}^{\\rm{job}}_{N^\\text{selected}}\\,\\, n^{\\rm{rest}}_{N^\\text{selected}}\\\\\n{\\rm{id}}^{\\rm{worker}}_1\\,\\, u_1\\,\\, v_1\\,\\, d^{\\rm{from\\_u}}_1\\\\\n\\vdots\\\\\n{\\rm{id}}^{\\rm{worker}}_{N_{\\rm{worker}}}\\,\\, u_{N_{\\rm{worker}}}\\,\\, v_{N_{\\rm{worker}}}\\,\\, d^{\\rm{from\\_u}}_{N_{\\rm{worker}}}\n</var>\n</pre></div>\n\n\n<p><strong><font color=\"#DC143C\">時間<var>T^\\text{weather}</var>毎に(=時刻<var>t</var>が<var>(t-1) \\mod T^\\text{weather} = 0</var>を満たす場合にのみ)</font></strong>、天候の予測が以下の形式で標準入力から追加で与えられる。</p>\n<div class=\"codehilite\"><pre><span></span><var>\nt_1\\,\\, p^1_1\\,\\, p^1_2\\,\\, \\cdots \\,\\, p^1_{N^{\\rm{weather}}}\\\\\nt_2\\,\\, p^2_1\\,\\, p^2_2\\,\\, \\cdots \\,\\, p^2_{N^{\\rm{weather}}}\\\\\n\\vdots\\\\\nt_{N'}\\,\\, p^{N'}_1\\,\\, p^{N'}_2\\,\\, \\cdots \\,\\, p^{N'}_{N^{\\rm{weather}}}</var>\n</pre></div>\n\n\n<p><a id=\"current-weather\" class=\"anchor\"></a></p>\n<h4>現在の天候</h4>\n<ul>\n<li><strong>入力</strong><ul>\n<li>最初の<var>1</var>行で現在の天候<var>w \\in \\{1,\\cdots,N_\\text{weather}\\}</var>が与えられる。</li>\n</ul>\n</li>\n</ul>\n<p></p><details><summary>入力例</summary><p></p>\n<div class=\"codehilite\"><pre><span></span>4\n</pre></div>\n\n\n<ul>\n<li>1行目:時刻<var>t</var>における天候は<code>4</code>である。(<var>w=4</var>)\n</li></ul></details>\n\n<p><a id=\"job-state\" class=\"anchor\"></a></p>\n<h4>ジョブの状態</h4>\n<p>受託したジョブに関する以下の情報が入力として与えられる。</p>\n<ul>\n<li><strong>入力</strong><ul>\n<li>続く<var>1</var>行で受託したジョブの個数<var>N^\\text{selected}</var>が与えられる。</li>\n<li>次の<var>N^\\text{selected}</var>行で、受託した各ジョブの状態<ul>\n<li>対応するジョブID:<var>{\\text{id}}^{\\text{job}}_i</var></li>\n<li>残りタスク量:<var>n^{\\text{rest}}_i</var></li>\n</ul>\n</li>\n<li>が与えられる。(<var>1 \\leq i \\leq N^\\text{selected}</var>)</li>\n</ul>\n</li>\n</ul>\n<p></p><details><summary>入力例</summary><p></p>\n<div class=\"codehilite\"><pre><span></span>4\n2 905\n3 1052\n4 653\n6 737\n</pre></div>\n\n\n<ul>\n<li>1行目:コンテスタントが選択したジョブは<code>4</code>個である。(<var>N^\\text{selected}=4</var>)</li>\n<li>2行目:コンテスタントはID=<code>2</code>のジョブを選択しており、その残タスク数は<code>905</code>である。</li>\n<li>3行目:コンテスタントはID=<code>3</code>のジョブを選択しており、その残タスク数は<code>1052</code>である。</li>\n<li>4行目:コンテスタントはID=<code>4</code>のジョブを選択しており、その残タスク数は<code>653</code>である。</li>\n<li>5行目:コンテスタントはID=<code>6</code>のジョブを選択しており、その残タスク数は<code>737</code>である。\n</li></ul></details>\n\n<p><a id=\"worker-current-location\" class=\"anchor\"></a></p>\n<h4>ワーカーの現在位置</h4>\n<ul>\n<li><strong>入力</strong><ul>\n<li>続く<var>N_\\text{worker}</var>行で各ワーカーの<ul>\n<li>ワーカーID:<var>\\text{id}^\\text{worker}</var></li>\n<li>ワーカーが存在する辺の端点の頂点番号: <var>u,v</var></li>\n<li>ワーカーの端点<var>u</var>からの距離: <var>d^\\text{from\\_u}</var></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>が与えられる。</p>\n<p>ただし、ワーカーが辺ではなく頂点上に存在する場合、その頂点番号を<var>w</var>とすれば<var>u=v=w</var>かつ<var>d^\\text{from\\_u}=0</var>となる。</p>\n<p></p><details><summary>入力例</summary><p></p>\n<div class=\"codehilite\"><pre><span></span>1 6 6 0\n2 13 4 1\n3 10 4 1\n4 9 9 0\n5 9 9 0\n</pre></div>\n\n\n<ul>\n<li>1行目:ワーカー(ID=<code>1</code>)は頂点<code>6</code>上に存在する。(<var>\\text{id}^\\text{worker}_1=1,u_1=6,v_1=6,d_1=0</var>)</li>\n<li>2行目:ワーカー(ID=<code>2</code>)は頂点<code>13</code>と<code>4</code>を接続する辺上の、頂点<code>13</code>から距離<code>1</code>の位置に存在する。(<var>\\text{id}^\\text{worker}_2=2,u_2=13,v_2=4,d_2=1</var>)</li>\n<li>3行目:ワーカー(ID=<code>3</code>)は頂点<code>10</code>と<code>4</code>を接続する辺上の、頂点<code>10</code>から距離<code>1</code>の位置に存在する。(<var>\\text{id}^\\text{worker}_3=3,u_3=10,v_3=4,d_3=1</var>)</li>\n<li>4行目:ワーカー(ID=<code>4</code>)は頂点<code>9</code>上に存在する。(<var>\\text{id}^\\text{worker}_4=4,u_4=9,v_4=9,d_4=0</var>)</li>\n<li>5行目:ワーカー(ID=<code>5</code>)は頂点<code>9</code>上に存在する。(<var>\\text{id}^\\text{worker}_5=5,u_5=9,v_5=9,d_5=0</var>)\n</li></ul></details>\n\n<p><a id=\"weather-forecast\" class=\"anchor\"></a></p>\n<h4>天候予測</h4>\n<p><strong><font color=\"#DC143C\">時刻<var>t</var>が<var>(t-1) \\mod T^\\text{weather} = 0</var>を満たす場合にのみ</font></strong>、作業期間終了までの<var>T^\\text{weather}</var>間隔の天候予測情報が与えられる。</p>\n<ul>\n<li><strong>入力</strong><ul>\n<li>現在時刻<var>t</var>における以降の予報の個数を<var>N'</var>とすると、続く<var>N'</var>行で<ul>\n<li>時刻<var>t_i</var> と 現時点における時刻<var>t_i</var>の各天候状態の確率<var>p^i_1\\,\\, p^i_2\\,\\, \\cdots \\,\\, p^i_{N^{\\text{weather}}}</var></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>が与えられる。(<var>1\\leq i \\leq N'</var>)</p>\n<p>ただし、<var>t_i=t+(i-1)\\times T^{\\text{weather}},N'= (T_{\\text{max}}-(t-1))/T^{\\text{weather}}</var></p>\n<p></p><details><summary>入力例</summary>\n以下は<var>T_\\text{max}=300,T^{\\text{weather}}=10,N^{\\text{weather}}=7</var>のときの、時刻<code>231</code>における天候予測情報である。<p></p>\n<div class=\"codehilite\"><pre><span></span>231 0 0 0 1 0 0 0\n241 0.14018451203740215 0.1989275695057979 0.11416680823055275 0.47491922909498718 0.055436150269510279 0.013776723318683931 0.0025890075430656636\n251 0.09280720088264463 0.12786225388899222 0.075541159856700776 0.2940084286639329 0.3187308679757298 0.073782875285869701 0.017267213446130077\n261 0.13618507866780669 0.1738477285644548 0.085600288742176719 0.30613029252196533 0.23136324103370096 0.054225695397813925 0.012647675072081671\n271 0.22147567372764859 0.26151152419242735 0.10180524115884333 0.30797314144503296 0.084544670039893785 0.018734568743877168 0.0039551806922769701\n281 0.21773018584216544 0.25781470723187322 0.10129611879665416 0.30911960619088807 0.089756375035668315 0.020014729744938529 0.0042682771578124723\n291 0.21391908801649892 0.25399316678508993 0.10069857638866596 0.30980462878477455 0.095541376935105796 0.021428548707005373 0.0046146143828596133\n</pre></div>\n\n\n<ul>\n<li>1行目:時刻<code>231</code>において天候が<var>1</var>になる確率は<code>0</code>、<var>2</var>になる確率は<code>0</code>、<var>3</var>になる確率は<code>0</code>、<var>4</var>になる確率は<code>1</code>、<var>5</var>になる確率は<code>0</code>、<var>6</var>になる確率は<code>0</code>、<var>7</var>になる確率は<code>0</code>である。</li>\n<li>2行目:時刻<code>241</code>において天候が<var>1</var>になる確率は<code>0.14018451203740215</code>、<var>2</var>になる確率は<code>0.1989275695057979</code>、<var>3</var>になる確率は<code>0.11416680823055275</code>、<var>4</var>になる確率は<code>0.47491922909498718</code>、<var>5</var>になる確率は<code>0.055436150269510279</code>、<var>6</var>になる確率は<code>0.013776723318683931</code>、<var>7</var>になる確率は<code>0.0025890075430656636</code>である。</li>\n<li>3行目:時刻<code>251</code>において天候が<var>1</var>になる確率は<code>0.09280720088264463</code>、<var>2</var>になる確率は<code>0.12786225388899222</code>、<var>3</var>になる確率は<code>0.075541159856700776</code>、<var>4</var>になる確率は<code>0.2940084286639329</code>、<var>5</var>になる確率は<code>0.3187308679757298</code>、<var>6</var>になる確率は<code>0.073782875285869701</code>、<var>7</var>になる確率は<code>0.017267213446130077</code>である。</li>\n<li>4行目:時刻<code>261</code>において天候が<var>1</var>になる確率は<code>0.13618507866780669</code>、<var>2</var>になる確率は<code>0.1738477285644548</code>、<var>3</var>になる確率は<code>0.085600288742176719</code>、<var>4</var>になる確率は<code>0.30613029252196533</code>、<var>5</var>になる確率は<code>0.23136324103370096</code>、<var>6</var>になる確率は<code>0.054225695397813925</code>、<var>7</var>になる確率は<code>0.012647675072081671</code>である。</li>\n<li>5行目:時刻<code>271</code>において天候が<var>1</var>になる確率は<code>0.22147567372764859</code>、<var>2</var>になる確率は<code>0.26151152419242735</code>、<var>3</var>になる確率は<code>0.10180524115884333</code>、<var>4</var>になる確率は<code>0.30797314144503296</code>、<var>5</var>になる確率は<code>0.084544670039893785</code>、<var>6</var>になる確率は<code>0.018734568743877168</code>、<var>7</var>になる確率は<code>0.0039551806922769701</code>である。</li>\n<li>6行目:時刻<code>281</code>において天候が<var>1</var>になる確率は<code>0.21773018584216544</code>、<var>2</var>になる確率は<code>0.25781470723187322</code>、<var>3</var>になる確率は<code>0.10129611879665416</code>、<var>4</var>になる確率は<code>0.30911960619088807</code>、<var>5</var>になる確率は<code>0.089756375035668315</code>、<var>6</var>になる確率は<code>0.020014729744938529</code>、<var>7</var>になる確率は<code>0.0042682771578124723</code>である。</li>\n<li>7行目:時刻<code>291</code>において天候が<var>1</var>になる確率は<code>0.21391908801649892</code>、<var>2</var>になる確率は<code>0.25399316678508993</code>、<var>3</var>になる確率は<code>0.10069857638866596</code>、<var>4</var>になる確率は<code>0.30980462878477455</code>、<var>5</var>になる確率は<code>0.095541376935105796</code>、<var>6</var>になる確率は<code>0.021428548707005373</code>、<var>7</var>になる確率は<code>0.0046146143828596133</code>である。\n</li></ul></details>\n\n<p><a id=\"output2\" class=\"anchor\"></a></p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>出力2(毎時刻)</h3>\n<p>これに対して、コンテスタントは標準出力から</p>\n<ol>\n<li>各ワーカーのスケジュール</li>\n<li>各ワーカーの行動</li>\n</ol>\n<p>を以下の形式で出力する。</p>\n<div class=\"codehilite\"><pre><span></span><var>\nN_\\text{schedule}\\\\\n\\text{id}_1\\,\\,\\text{id}_2\\,\\,\\cdots\\,\\,\\text{id}_{N_\\text{schedule}}\\\\\n\\text{job}^{\\text{id}_1}_t\\,\\,\\text{job}^{\\text{id}_1}_{t+1}\\,\\,\\cdots\\,\\,\\text{job}^{\\text{id}_1}_{T_\\text{max}}\\\\\n\\vdots\\\\\n\\text{job}^{\\text{id}_{N_\\text{schedule}}}_t\\,\\,\\text{job}^{\\text{id}_{N_\\text{schedule}}}_{t+1}\\,\\,\\cdots\\,\\,\\text{job}^{\\text{id}_{N_\\text{schedule}}}_{T_\\text{max}}\\\\\n{\\rm{action}}_1\\\\\n{\\rm{action}}_2\\\\\n\\vdots\\\\\n{\\rm{action}}_{N_{\\rm{worker}}}</var>\n</pre></div>\n\n\n<p>(末尾に改行を挿入すること)</p>\n<p><a id=\"schedule-submission\" class=\"anchor\"></a></p>\n<h4>スケジュールの提出</h4>\n<p>各ワーカーは、\"各時刻におけるジョブID\"の列をジョブ実行スケジュールとして保持している。</p>\n<p>コンテスタントは時刻<var>t=1</var>に全ワーカーのスケジュールを提出する。以後どの時刻でも、変更が必要なワーカーのみ選択して再提出しスケジュールを変更することができる。</p>\n<ul>\n<li>\n<p><strong>出力</strong></p>\n<ul>\n<li>最初の<var>1</var>行で、スケジュールを変更するワーカーの数<var>N_\\text{schedule}</var>を出力する。</li>\n<li>続く<var>1</var>行で、ワーカーのIDの列<var>\\text{id}_1\\,\\,\\text{id}_2\\,\\,\\cdots\\,\\,\\text{id}_{N_\\text{schedule}}</var>を出力する。</li>\n<li>続く<var>N_\\text{schedule}</var>行で、ワーカー(ID=<var>\\text{id}_i</var>)の現在時刻<var>t</var>から<var>T_\\text{max}</var>までのスケジュール(各時刻で行うジョブのID) <var>\\text{job}^{\\text{id}_i}_t\\,\\,\\text{job}^{\\text{id}_i}_{t+1}\\,\\,\\cdots\\,\\,\\text{job}^{\\text{id}_i}_{T_\\text{max}}</var>を出力する。(<var>1\\leq i \\leq N_\\text{schedule}</var>)</li>\n</ul>\n</li>\n<li>\n<p>以下の条件を満たさない場合<code>WA</code>(Wrong Answerとなる)</p>\n<ul>\n<li><var>N_\\text{schedule} \\geq 0</var></li>\n<li>ワーカーIDの列の長さは<var>N_\\text{schedule} </var>である。</li>\n<li>指定されたワーカーID全てについて、対応するワーカーが存在する。</li>\n<li>ワーカーIDは重複していない。</li>\n<li>提出時刻を<var>t</var>とすると、スケジュールで指定されるジョブIDの数は<var>T_\\text{max}-t+1</var>である。</li>\n<li>時刻<var>t=1</var>の場合のみ: <var>N_\\text{schedule} = N_\\text{worker}</var></li>\n</ul>\n</li>\n</ul>\n<p>スケジュールの再提出を行うと、既存のスケジュールからの変更の大きさに依存してスケジュール加点量が減少する。(<a href=\"#schedule-added-point\">スケジュール加点</a>を参照)</p>\n<p><a id=\"worker-action\" class=\"anchor\"></a></p>\n<h4>ワーカーの行動</h4>\n<p>コンテスタントは全てのワーカーの行動<var>\\text{action}</var>を毎時刻指定する。<var>\\text{action}</var>の実体は文字列であり、以下の3種類のいずれかである。</p>\n<ul>\n<li><code>stay</code>:移動もジョブ実行もせずその場にとどまる。</li>\n<li><code>move w</code>:現在位置から頂点番号<code>w</code>に対応する頂点の方向にその間の最短経路上を距離<var>1</var>だけ進む。以下の条件を満たさない場合<code>WA</code>(Wrong Answer)となる。<ul>\n<li>頂点番号<code>w</code>に対応する頂点は存在する。</li>\n<li>現在位置と頂点番号<code>w</code>に対応する頂点は異なる。</li>\n</ul>\n</li>\n<li><code>execute i a</code>:ID=<code>i</code>のジョブをタスク数<code>a</code>だけ実行する。ただし、以下の条件を満たさない場合<code>WA</code>(Wrong Answer)となる。<ul>\n<li>受託したジョブの中にID=<code>i</code>であるものが存在する。</li>\n<li>ワーカーの現在位置とID=<code>i</code>であるジョブが存在する頂点が一致する。</li>\n<li>ID=<code>i</code>のジョブのタイプは、このワーカーの実行可能ジョブタイプに含まれる。</li>\n<li><code>a</code>は1以上の整数。</li>\n<li><code>a</code>はID=<code>i</code>のジョブの残タスク数を超えない。</li>\n<li><code>a</code>は実行タスク数制限を超えない。(詳細は<a href=\"#task-limit\">実行タスク数制限</a>)</li>\n<li>ID=<code>i</code>のジョブが依存するジョブは全て完了している。</li>\n<li>報酬の値は正である。</li>\n</ul>\n</li>\n</ul>\n<p><code>move w</code>に関して、現在位置と頂点<code>w</code>の間に2つ以上の異なる最短経路が存在する場合どれが選ばれるかは未規定である。そのような場合でも、コンテスタントは経路の途中の点を指定して移動する操作を繰り返すことで希望の経路を選ぶことができる。</p>\n<p>上記のいずれの文字列パターンにも合致しない<var>\\text{action}</var>が指定された場合<code>WA</code>(Wrong Answer)となる。</p>\n<p>また、各時刻終了時に、合計タスク処理量 が 完了までのタスク数 <var>N^{\\text{task}}_i</var> を超えるようなジョブが存在する場合 <code>WA</code> または <code>RE</code> となる。</p>\n<ul>\n<li><strong>出力</strong><ul>\n<li>次の<var>N_\\text{worker}</var>行で各ワーカーの行動<var>\\text{action}_i</var>を出力する。(<var>1 \\leq i \\leq N_\\text{worker}</var>)</li>\n</ul>\n</li>\n</ul>\n<p>出力が有効であれば<a href=\"#input2\">入力2</a>に進み次の時刻を開始する。現在時刻が<var>T_\\text{max}</var>ならば<a href=\"#input3\">入力3(採点)</a>に進む。</p>\n<p></p><details><summary>出力例</summary>\n以下は<var>N_\\text{worker}=3,T_\\text{max}=10</var>の例である。<p></p>\n<h4>例1:行動+初期スケジュール提出(<var>t=1</var>)</h4>\n<div class=\"codehilite\"><pre><span></span>3\n1 2 3\n85 85 85 85 431 431 431 431 431 431\n65 65 65 65 65 65 65 65 65 65\n730 730 639 639 639 639 4 4 4 4\nexecute 85 135\nmove 12\nmove 98\n</pre></div>\n\n\n<ul>\n<li>1行目:コンテスタントは<code>3</code>つのワーカーのスケジュールを提出する。</li>\n<li>2行目:対象となるワーカーはID=<code>1</code>,<code>2</code>,<code>3</code>のものである。</li>\n<li>3行目:これは2行目で1番目に指定されたワーカー(ID=<code>1</code>)のスケジュールであり、以下の通りである:<ul>\n<li>時刻<var>1</var>でID=<code>85</code>のジョブを実行する。同様に、時刻<var>2</var>でID=<code>85</code>、時刻<var>3</var>でID=<code>85</code>、時刻<var>4</var>でID=<code>85</code>、時刻<var>5</var>でID=<code>431</code>、時刻<var>6</var>でID=<code>431</code>、時刻<var>7</var>でID=<code>431</code>、時刻<var>8</var>でID=<code>431</code>、時刻<var>9</var>でID=<code>431</code>、時刻<var>10</var>でID=<code>431</code>のジョブを処理する。</li>\n</ul>\n</li>\n<li>4行目:これは2行目で2番目に指定されたワーカー(ID=<code>2</code>)のスケジュールであり、以下の通りである:<ul>\n<li>時刻<var>1</var>でID=<code>65</code>のジョブを実行する。同様に、時刻<var>2</var>でID=<code>65</code>、時刻<var>3</var>でID=<code>65</code>、時刻<var>4</var>でID=<code>65</code>、時刻<var>5</var>でID=<code>65</code>、時刻<var>6</var>でID=<code>65</code>、時刻<var>7</var>でID=<code>65</code>、時刻<var>8</var>でID=<code>65</code>、時刻<var>9</var>でID=<code>65</code>、時刻<var>10</var>でID=<code>65</code>のジョブを処理する。</li>\n</ul>\n</li>\n<li>5行目:これは2行目で3番目に指定されたワーカー(ID=<code>3</code>)のスケジュールであり、以下の通りである:<ul>\n<li>時刻<var>1</var>でID=<code>730</code>のジョブを実行する。同様に、時刻<var>2</var>でID=<code>730</code>、時刻<var>3</var>でID=<code>639</code>、時刻<var>4</var>でID=<code>639</code>、時刻<var>5</var>でID=<code>639</code>、時刻<var>6</var>でID=<code>639</code>、時刻<var>7</var>でID=<code>4</code>、時刻<var>8</var>でID=<code>4</code>、時刻<var>9</var>でID=<code>4</code>、時刻<var>10</var>でID=<code>4</code>のジョブを処理する。</li>\n</ul>\n</li>\n<li>6行目:現在時刻におけるID=1のワーカーの行動を次のように指定する:ID=<code>85</code>のジョブのタスクを<code>135</code>だけ処理する。</li>\n<li>7行目:現在時刻におけるID=2のワーカーの行動を次のように指定する:頂点<code>12</code>に向かって移動する。</li>\n<li>8行目:現在時刻におけるID=3のワーカーの行動を次のように指定する:頂点<code>98</code>に向かって移動する。</li>\n</ul>\n<h4>例2:行動+スケジュールを変更しない</h4>\n<div class=\"codehilite\"><pre><span></span>0\n\nstay\nmove 87\nexecute 670 40\n</pre></div>\n\n\n<ul>\n<li>1行目:コンテスタントは<code>0</code>個のワーカーのスケジュールを提出する。(=スケジュールを変更しない)</li>\n<li>2行目:対象となるワーカーは存在しない。（=ワーカーIDが0個入った行、すなわち空行が入る）</li>\n<li>（存在しない行:0個のワーカーに対してスケジュールが出力され、合計0行出力される。）</li>\n<li>3行目:現在時刻におけるID=1のワーカーの行動を次のように指定する:何もしない</li>\n<li>4行目:現在時刻におけるID=2のワーカーの行動を次のように指定する:頂点<code>87</code>に向かって移動する。</li>\n<li>5行目:現在時刻におけるID=3のワーカーの行動を次のように指定する:ID=<code>670</code>のジョブのタスクを<code>40</code>だけ処理する。</li>\n</ul>\n<h4>例3:行動+スケジュール変更(<var>t=6</var>)</h4>\n<div class=\"codehilite\"><pre><span></span>2\n2 3\n65 65 65 65 223\n639 4 4 91 91\nexecute 431 80\nexecute 65 40\nmove 9\n</pre></div>\n\n\n<ul>\n<li>1行目:コンテスタントは<code>2</code>個のワーカーのスケジュールを提出(変更)する。</li>\n<li>2行目:対象となるワーカーはID=<code>2</code>,<code>3</code>のものである。</li>\n<li>3行目:これは2行目で1番目に指定されたワーカー(ID=<code>2</code>)の(変更された)スケジュールであり、以下の通りである:<ul>\n<li>時刻<var>6</var>でID=<code>65</code>のジョブを実行する。同様に、時刻<var>7</var>でID=<code>65</code>、時刻<var>8</var>でID=<code>65</code>、時刻<var>9</var>でID=<code>65</code>、時刻<var>5</var>でID=<code>223</code>のジョブを処理する。</li>\n</ul>\n</li>\n<li>4行目:これは2行目で2番目に指定されたワーカー(ID=<code>3</code>)の(変更された)スケジュールであり、以下の通りである:<ul>\n<li>時刻<var>6</var>でID=<code>639</code>のジョブを実行する。同様に、時刻<var>7</var>でID=<code>4</code>、時刻<var>8</var>でID=<code>4</code>、時刻<var>9</var>でID=<code>91</code>、時刻<var>5</var>でID=<code>91</code>のジョブを処理する。</li>\n</ul>\n</li>\n<li>5行目:現在時刻におけるID=1のワーカーの行動を次のように指定する:ID=<code>431</code>のジョブのタスクを<code>80</code>だけ処理する。</li>\n<li>6行目:現在時刻におけるID=2のワーカーの行動を次のように指定する:ID=<code>65</code>のジョブのタスクを<code>40</code>だけ処理する。</li>\n<li>7行目:現在時刻におけるID=3のワーカーの行動を次のように指定する:頂点<code>9</code>に向かって移動する。\n</li></ul></details>\n\n<p><a id=\"input3\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>入力3(採点)</h3>\n<p>時刻<var>t=T_\\text{max}</var>の<a href=\"output2\">出力2</a>終了後、出力が有効であれば、入力としてスコア<var>S</var>を標準入力から以下の形式で与える。</p>\n<div class=\"codehilite\"><pre><span></span><var>\nS\n</var>\n</pre></div>\n\n\n<p>この値を入力から受け取らない場合、<code>TLE</code>となる可能性がある。</p>\n<p>また、順位付けに関しては <a href=\"#ranking-method\">順位決定方法</a> を参照せよ。</p>\n<p><a id=\"scoring-method\" class=\"anchor\"></a></p>\n<h4>採点方法</h4>\n<p>スコア<var>S</var>は総報酬量<var>R</var>、未完了ペナルティ<var>U</var>、スケジュール加点<var>A</var>から以下の式により決定される。\n</p><p style=\"text-align:center;\">\n<var>\nS=\\left\\lfloor R \\times U \\times (1+\\alpha A) \\right\\rfloor\n</var>\n</p><p></p>\n<p>ただし、<var>\\left\\lfloor x \\right\\rfloor</var> は<var>x</var>を超えない最大の整数を返す関数(床関数)である。</p>\n<p><var>~</var></p>\n<p><var>R,U,A</var>の計算式は以下の通りである。</p>\n<p><a id=\"total-reward-amount\" class=\"anchor\"></a></p>\n<p><strong>総報酬量<var>R</var></strong>:\n</p><p style=\"text-align:center;\">\n<var>\n\\begin{aligned}\nR=\\sum_{j\\in J_\\text{finished}}\\sum_{w \\in W}\\sum_{t=1}^{T_\\text{max}}a^w_j(t)r_j(t)\n\\end{aligned}\n</var>\n</p><p></p>\n<ul>\n<li>完了したジョブの集合:<var>J_\\text{finished}</var></li>\n<li>全ワーカーの集合:<var>W</var></li>\n<li>時刻<var>t</var>にワーカー<var>w</var>が実行したジョブ<var>j</var>のタスク数:<var>a^w_j(t)</var></li>\n<li>時刻<var>t</var>におけるジョブ<var>j</var>のタスク当たりの報酬:<var>r_j(t)</var></li>\n</ul>\n<p><a id=\"unfinished-penalty\" class=\"anchor\"></a></p>\n<p><strong>未完了ペナルティ<var>U</var></strong>:\n</p><p style=\"text-align:center;\">\n<var>\n\\begin{aligned}\nU=\\prod_{j \\in J_{\\text{unfinished}}} P^{\\text{job}}_j\n\\end{aligned}\n</var>\n</p><p></p>\n<ul>\n<li>受託したが未完了であるジョブの集合:<var>J_\\text{unfinished}</var></li>\n<li>ジョブ<var>j</var>の未完了ペナルティ係数:<var>P_j^\\text{job}</var></li>\n</ul>\n<p><a id=\"schedule-added-point\" class=\"anchor\"></a></p>\n<p><strong>スケジュール加点<var>A</var></strong>:</p>\n<p><var>A</var>は初期値を<var>1.0</var>として毎時刻以下の規則で更新される:</p>\n<ul>\n<li>\n<p>各ワーカーに対して:</p>\n<ul>\n<li>スケジュールと異なるジョブを実行した場合: <p style=\"text-align:center;\">\n<var>\n\\begin{aligned}A\\leftarrow 0\\end{aligned}\n</var></p></li>\n<li>スケジュールと同じジョブを実行した場合: <p style=\"text-align:center;\">\n<var>\n\\begin{aligned}A\\leftarrow A\\end{aligned}\n</var></p></li>\n<li>ジョブを実行しなかった場合: <p style=\"text-align:center;\">\n<var>\n\\begin{aligned}A\\leftarrow A\\end{aligned}\n</var>\n</p></li>\n</ul>\n</li>\n<li>\n<p>各ワーカーのスケジュール再提出について、提出時刻を<var>t</var>とすると:</p>\n<ul>\n<li>時刻<var>s(\\geq t)</var>のジョブIDについて:<ul>\n<li>変更する場合: <p style=\"text-align:center;\">\n<var>\n\\begin{aligned}A\\leftarrow A\\times \\left(1.0-P_m \\times (R_m)^{s-t}\\right)\\end{aligned}\n</var></p></li>\n<li>変更しない場合: <p style=\"text-align:center;\">\n<var>\n\\begin{aligned}A\\leftarrow A\\end{aligned}\n</var></p></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>ただし、初期スケジュール提出時には<var>A</var>の更新は行われない。</p>\n<p>空集合に対する総和<var>\\sum</var>は<var>0</var>であり、空集合に対する総乗<var>\\prod</var>は<var>1</var>である。</p>\n<p><a id=\"task-limit\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>実行タスク数制限</h3>\n<p>ワーカーが1単位時間に処理できるタスクの最大量は、<strong>ワーカーの最大タスク実行数<var>L^\\text{max}</var></strong>、と処理対象のジョブの<strong>天候依存度<var>d^\\text{weather}</var></strong>、<strong>天候</strong><var>w \\in \\{1,\\cdots,N_\\text{weather}\\}</var>により以下のように決定される:\n</p><p style=\"text-align:center;\">\n<var>\n\\begin{aligned}\nL^\\text{max}\\times (1-d^\\text{weather})^{c_w}\\end{aligned}\n</var>\n</p>\nただし、<var>c_w</var>は<a href=\"#input1\">入力1</a>で与えられた制限定数に対応する。また、ここでは<var>0^0=1</var>と定める。<p></p>\n<p><a id=\"testcase-generation-rules\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>テストケース生成規則</h3>\n<p></p><details><summary>地理情報(グラフ)</summary><p></p>\n<ul>\n<li>\n<p>用語</p>\n<ul>\n<li>矩形領域<var>[x_0,x_1]\\times[y_0,y_1]\\,\\,(x_0&lt;x_1,y_0&lt;y_1)</var>を中央を通る十字で4個の矩形に等分する操作をここでは<strong>分割</strong>と呼ぶ。</li>\n<li>具体的には<var>[x_0,x_1]\\times[y_0,y_1]</var>を以下の4つに細分する操作である。<ul>\n<li><var>[x_0,(x_1+x_0)/2]\\times[y_0,(y_0+y_1)/2]</var></li>\n<li><var>[x_0,(x_1+x_0)/2]\\times[(y_0+y_1)/2,y_1]</var></li>\n<li><var>[(x_1+x_0)/2,x_1]\\times[y_0,(y_0+y_1)/2]</var></li>\n<li><var>[(x_1+x_0)/2,x_1]\\times[(y_0+y_1)/2,y_1]</var></li>\n</ul>\n</li>\n<li>また、この操作(与えられた矩形領域から矩形領域の集合(上記4つ)を得る操作)を、関数<var>\\text{Split}(R)</var>として定めておく。</li>\n</ul>\n</li>\n<li>\n<p>パラメータ</p>\n<ul>\n<li>矩形領域サイズ:<var>L&gt;0</var></li>\n<li>最大分割深さ:<var>d_\\text{max} \\in \\mathbb{Z}_{\\geq 0}</var></li>\n<li>(最大)矩形個数:<var>M</var>(<var>0</var>以上<var>(4^{d_\\text{max}+1}-1)/3</var>以下の整数)</li>\n<li>距離最小スケール:<var>s&gt;0</var></li>\n<li>切断面積比:<var>C\\in (0,1]</var></li>\n</ul>\n</li>\n<li>\n<p><strong>生成手順1</strong>(グラフの生成)</p>\n<ol>\n<li>矩形領域の集合<var>U=\\{\\}</var>を用意する。</li>\n<li>矩形領域<var>R=[0,L]\\times[0,L]</var>を<var>U</var>に追加する。</li>\n<li><var>d_\\text{max}=0</var>の場合<code>8.</code>に進む。</li>\n<li><var>U</var>からランダムに1つ矩形領域を選び、それを<var>r</var>とする。</li>\n<li><var>r</var>の面積が<var>L^2/4^{d_\\text{max}}</var>である場合<code>4.</code>に戻る。</li>\n<li><var>\\text{Split}(r)</var>の要素全てを<var>U</var>に追加する。<ul>\n<li>既に<var>U</var>に同一の要素が存在する場合、その要素を追加しても<var>U</var>は変化しない。 </li>\n</ul>\n</li>\n<li><var>|U| &gt; M</var>を満たす場合、<code>8.</code>に進む。満たさない場合<code>4.</code>に戻る。</li>\n<li><var>U</var>に属する全ての矩形の<strong>辺の</strong>和集合<var>A</var>を重み付き無向グラフ<var>G=(V,E),W:E\\rightarrow \\mathbb{R}_{&gt; 0}</var>とみなす。<ul>\n<li>グラフの頂点集合<var>V</var>は辺の和集合<var>A</var>上において直交する線分が存在する点全て。</li>\n<li>グラフの辺集合<var>E</var>は頂点のペア<var>\\{a,b\\}</var>のうち、<var>a\\neq b</var>かつ辺の和集合<var>A</var>上において<var>a</var>から<var>b</var>へ他の頂点を経由せず到達できるもの全て。</li>\n<li>重み(関数)<var>W</var>は点同士のユークリッド距離で定める。</li>\n</ul>\n</li>\n<li>この<var>G=(V,E)</var>(重み<var>W</var>)を地理情報の生成に使用するグラフとして採用する。</li>\n</ol>\n</li>\n</ul>\n<p>(Reference:Eisenstat, D., Random road networks: the quadtree model, Proceeding of the 8th Workshop on Analytic Algorithms and Combinatorics (ANALCO), pp.76-84, 2011 (DOI:<a href=\"https://doi.org/10.1137/1.9781611973013.9\">https://doi.org/10.1137/1.9781611973013.9</a>))</p>\n<ul>\n<li><strong>生成手順2</strong>(標高の生成)<ol>\n<li>正方形領域<var>R=[0,1024]\\times[0,1024]</var>を用意する。</li>\n<li><var>R</var>を<var>x</var>方向<var>y</var>方向共に<var>128</var>分割する(=サイズ<var>8\\times8</var>の正方形領域<var>128\\times128</var>個に分割する。)</li>\n<li><var>R</var>からランダムな正方形領域を<var>20</var>個選びその和集合を<var>A</var>とする。</li>\n<li>再び<var>R</var>からランダムな正方形領域を<var>20</var>個選びその和集合を<var>B</var>とする。</li>\n<li>以下の偏微分方程式(を上記<code>2.</code>の分割により離散化したもの)を時刻<var>t=100000</var>まで解く(=<var>u(100000,x,y)</var>を計算する):\n<p style=\"text-align:center;\">\n<var>\\displaystyle\n\\frac{\\partial u}{\\partial t}=\\Delta u-b(x,y)u+a(x,y)\n</var>\n</p>\nただし、時刻<var>t=0</var>における初期値は<var>u(0,x,y)=u_0(x,y)\\equiv 0</var>, 境界条件はノイマン境界条件で、<br>\n<var>a(x,y)=\\begin{cases}\n1/8^2, &amp; \\text{if}\\ (x,y) \\in A, \\\\\n0, &amp; \\text{otherwise},\n\\end{cases}</var><br><var>b(x,y)=\\begin{cases}\n1/8^2, &amp; \\text{if}\\ (x,y) \\in B, \\\\\n0, &amp; \\text{otherwise}.\n\\end{cases}</var><br>である。</li>\n<li><var>u(100000,x,y)</var>を<var>[0,1]</var>の範囲に正規化し、それを標高<var>e(x,y)</var>として採用する。</li>\n</ol>\n</li>\n<li><strong>生成手順3</strong>(グラフの切断、距離スケーリング)<ol>\n<li>生成手順2で生成した標高<var>e(x,y)</var>のデータをグラフの空間サイズ<var>[0,L]\\times[0,L]</var>に合わせる。<br>すなわち、空間スケーリングされた標高<var>\\tilde e(x,y)</var>を<var>\\tilde e(x,y)= e(L\\times x/1024,L\\times y/1024)</var>と定める。</li>\n<li><var>\\tilde e(x,y)</var>がある実数<var>z</var>より大きい部分を返す関数<var>H(z)=\\{(x,y) \\in [0,L]\\times[0,L]|\\tilde e(x,y)&gt;z\\}</var>に対して、<var>H(z)</var>の面積が<var>C\\times L^2</var>以上となるような<var>z</var>のうち最大のものを<var>h</var>とする。</li>\n<li>生成手順1で生成したグラフの辺集合<var>E</var>について、辺の端点(2つある)の標高がどちらも<var>h</var>を下回るものを全て<var>E</var>から削除する。</li>\n<li>グラフ<var>G=(V,E)</var>の最大の連結成分を<var>G'=(V',E')</var>とする。</li>\n<li>重み<var>W':E' \\rightarrow \\mathbb{R}_{&gt; 0}:</var>を次のように定める:<var>W'(e)= s\\times W(e)/\\min_{e' \\in E'}W(e')</var></li>\n<li>グラフ<var>G'=(V',E')</var>(重み(距離)<var>W'</var>)を地理情報として採用する。\n</li></ol></li></ul></details>\n\n\n\n<p></p><details><summary>天候の遷移確率行列</summary>\nここでは天候の遷移に使用するサイズ<var>N^\\text{weather}\\times N^\\text{weather}</var>の遷移確率行列の生成規則について説明する。<p></p>\n<ul>\n<li>パラメータ<ul>\n<li>遷移確率行列に持たせたい定常分布:<var>\\bm{s}^\\text{sta}=(s^\\text{sta}_1,s^\\text{sta}_2,\\cdots,s^\\text{sta}_{N^\\text{weather}})</var></li>\n<li>(帯行列としての)行列幅:<var>d \\geq 1</var></li>\n<li>収束判定用の微小値:<var>\\epsilon &gt; 0</var></li>\n<li>ループ回数上限:<var>M\\geq 1</var></li>\n<li>対角成分強さ:<var>q &gt; 0</var></li>\n</ul>\n</li>\n</ul>\n<p><var>~</var></p>\n<ol>\n<li>サイズ<var>N^\\text{weather}\\times N^\\text{weather}</var>の行列<var>A</var>を次のように定める:\n<p style=\"text-align:center;\"> <var>i</var>行<var>j</var>列の要素を<var>a_{i,j}</var>として、<var>a_{i,j}=\\begin{cases}\n\\exp(-q|i-j|^2), &amp; \\text{if}\\ |i-j|\\leq d,\\\\\n0, &amp; \\text{otherwise.}\n\\end{cases}</var></p></li>\n<li><var>A</var>の各行を和が<var>1</var>になるように正規化する。</li>\n<li>ループカウンタを初期化:<var>l=0</var></li>\n<li><var>l\\leftarrow l + 1</var></li>\n<li><var>l&gt;M</var>なら<var>A</var>を遷移確率行列として採用し終了。</li>\n<li><var>A</var>の定常分布<var>\\bm{s}</var>を計算。</li>\n<li>行列<var>P</var>を次のように定める:<p style=\"text-align:center;\"> \n<var>i</var>行<var>j</var>列の要素を<var>p_{i,j}</var>として、<var>p_{i,j}=\\begin{cases}\nN^\\text{weather}||\\bm{s}^\\text{sta}-\\bm{s}||_\\infty\\max\\{\\epsilon,a_{i,j}\\}\\text{rand}(-1,1), &amp; \\text{if}\\ |i-j|\\leq d,\\\\\n0, &amp; \\text{otherwise.}\n\\end{cases}</var>\n</p>\nただし、<var>||\\cdot||_\\infty</var>は最大値ノルムで、各要素の絶対値のうち最大のものを表す。<var>\\text{rand}(a,b)</var>は<var>[a,b]</var>における一様分布に従う乱数を表す。乱数は各要素を計算する度に生成される。</li>\n<li>行列<var>A'</var>を<var>A'=A+P</var>と定める。</li>\n<li><var>A'</var>の各行に対して、次の更新操作を行う。その行を<var>i</var>行目として:<ol>\n<li>要素の最小値を計算し、それを<var>m_i</var>とする。</li>\n<li><var>m_i &lt; 0</var>ならば、<var>|i-j|\\leq d</var>を満たす列<var>j</var>の値に<var>-m_i</var>を加える。（条件を満たす列全てに対して行う。）</li>\n<li>行の和が<var>1</var>になるように正規化する。</li>\n</ol>\n</li>\n<li><var>A'</var>の各行に関して、対角成分が唯一の最大成分でなければ<code>4.</code>に戻る。</li>\n<li><var>A'</var>の定常分布<var>\\bm{s}'</var>を計算する。</li>\n<li><var>||\\bm{s}^\\text{sta}-\\bm{s}||_\\infty &gt; ||\\bm{s}^\\text{sta}-\\bm{s'}||_\\infty</var>なら<var>A</var>に<var>A'</var>を代入して<var>A</var>を更新する。</li>\n<li>「<var>||\\bm{s}^\\text{sta}-\\bm{s'}||_\\infty &lt; \\epsilon N^\\text{weather}</var>」かつ「<var>A</var>の<var>i</var>行<var>j</var>列の要素<var>a_{i,j}</var>について、<var>|i-j|\\leq d</var>を満たすものは全て正」である場合<var>A</var>を遷移確率行列として採用し終了。そうでなければ4.に戻る。\n</li></ol></details>\n\n<p></p><details><summary>報酬を表す区分線形関数</summary>\nこの問題では各時刻における報酬（正確にはタスク当たりの報酬値）を表す関数を有限個の点の線形補間で表現する。その点をここでは制御点と呼び、以下はその有限個の制御点の生成規則である。<p></p>\n<ul>\n<li>パラメータ<ul>\n<li>報酬が正である区間長:<var>L\\geq 1</var></li>\n<li>区間を細分する長さ:<var>l\\geq 1</var></li>\n<li>報酬基準値:<var>s &gt; 0</var></li>\n<li>制御点の値生成時に使用する標準偏差:<var>\\sigma' &gt; 0</var></li>\n<li>報酬上限値:<var>M &gt; 0</var></li>\n<li>報酬下限値:<var>m &gt; 0</var></li>\n</ul>\n</li>\n</ul>\n<p><var>~</var></p>\n<ol>\n<li>報酬開始時刻<var>b=\\text{randint}(1,T_\\text{max}-L)</var>、報酬終了時刻<var>e=b+L</var>、区間分割数<var>d=\\text{round}(L/l)</var>と定める。ただし、<var>\\text{randint}(m,n)</var>は<var>m</var>以上<var>n</var>以下の整数を一様にランダムに選ぶ関数、<var>\\text{round}(x)</var>は<var>x</var>を四捨五入により丸めた整数値を返す関数とする。</li>\n<li><var>\\mu=0,\\sigma=\\sigma'</var>である対数正規分布に従う乱数を独立に<var>d+1</var>個生成し<var>\\{c_i\\}_{i=1}^{d+1}</var>とおく。</li>\n<li><var>\\{v_i\\}_{i=1}^{d+1}</var>を <var>v_i=\\prod_{j=1}^{i}c_j</var>で定める。</li>\n<li><var>B=s\\sqrt{(d+1)/\\sum_{i=1}^{d+1}v_i^2}</var>として、<var>\\{r_i\\}_{i=1}^{d+1}</var>を <var>r_i=\\text{round}(Bv_i)</var>で定める。</li>\n<li><var>r_i &gt; M</var>または<var>r_i &lt; m</var>となるような<var>i</var>が存在すれば<code>2.</code>に戻る。</li>\n<li><var>t_i=\\text{round}(b+(i-1)L/d)</var>として、時刻と報酬値のペアの列<var>((b-1,0),(t_1,r_1),(t_2,r_2),\\cdots,(t_{d+1},r_{d+1}),(e+1,0))</var>を制御点の列として採用する。\n</li></ol></details>\n\n<p>その他特に指定がない限り一様乱数。</p>\n<p><a id=\"ranking-method\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>順位決定方法</h3>\n<h4>暫定テスト</h4>\n<p>暫定テストは、システムテストに用いられるテストケースからランダムに<var>50</var>個選択し実行する。ただし、同じパラメータパターンから生成されるテストケースが2つ以上選ばれることはない。</p>\n<p>評価方法はシステムテストと同様なのでそちらを参照せよ。</p>\n<style>\n.testpar{\nmargin:auto;\nborder-collapse:unset;\n}\n.testpar td,.testpar th{\npadding:5px;\n}\n</style>\n\n<h4>システムテスト</h4>\n<p>システムテストで用いるテストケースは、以下に示す一部の特徴的な要素に関して、備考欄に示す性質を満たすように選択して与えられる:</p>\n<table border=\"1\" class=\"testpar\">\n<thead>\n<tr>\n<th>要素</th><th>対応するパラメータ</th><th>種類数</th><th>備考</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>作業期間長さ</td><td><var>T_\\text{max}</var></td><td>3</td><td>短い(<var>300</var>)・中程度(<var>700</var>)・長い(<var>1000</var>)</td>\n</tr><tr>\n<td>空間(地理情報)広さ</td><td>地理情報生成規則内の<var>d_\\text{max}</var></td><td>3</td><td>狭い(<var>5</var>)・中程度(<var>6</var>)・広い(<var>7</var>)</td>\n</tr><tr>\n<td>ワーカー数</td><td><var>N_{\\text{worker}}</var></td><td>4</td><td>単一(<var>1</var>)・少(<var>2</var>)・中程度(<var>5</var>)・多い(<var>10</var>)</td>\n</tr><tr>\n<td>全ジョブの数</td><td><var>N_{\\text{job}}</var></td><td>3</td><td>少(<var>250 \\leq N_{\\text{job}} \\leq 253 </var>)・中程度(<var>500 \\leq N_{\\text{job}} \\leq 503</var>)・多い(<var>1000 \\leq N_{\\text{job}} \\leq 1003</var>)</td>\n</tr><tr>\n<td>ジョブ未完了ペナルティ</td><td><var>P^{\\text{job}}_i</var></td><td>2</td><td>ペナルティ小(<var>[0.98,1.0)</var>)・大(<var>[0.91,0.93)</var>)</td>\n</tr><tr>\n<td>天候変わりやすさ</td><td>遷移確率行列生成規則内の<var>q</var></td><td>3</td><td>変わりにくい(<var>2.0</var>)・中程度(<var>1.5</var>)・変わりやすい(<var>1.0</var>)</td>\n</tr><tr>\n<td></td><td></td><td>合計648パターン</td><td>各パターンに対し8個テストケース生成</td>\n</tr>\n</tbody>\n</table>\n\n<p>これらの各パターンについて、異なるシード値で<var>8</var>個テストケースを生成し、合計<var>3 \\times 3 \\times4\\times 3 \\times 2  \\times 3 \\times 8 = 5184</var>個のテストケースを実行する。</p>\n<p>これは上記表のパラメータのパターン生成のみであり、本処理とは別に、地理情報やジョブなどのデータはテストケースごとに生成処理が行われる。</p>\n<p>順位付けは相対評価による得点計算を採用する。テストケースごとに、<var>\\text{round}(10^{9} \\times \\frac{\\text{自身の得点}}{全参加者中の最高得点})</var>の<font color=\"red\"><strong>相対評価スコア</strong></font>が得られ、その和が提出した解答の得点となる。</p>\n<p>不正な出力や制限時間超過をした場合、そのテストケースのみ0点となる。</p>\n<p>システムテストは <font color=\"red\"><strong><code>CE</code>以外の結果を得た一番最後の提出</strong></font>に対してのみ行われるため、最終的に提出する解答を間違えないよう注意せよ。</p>\n<h4>相対評価システムについて</h4>\n<p>暫定テスト、システムテストともに、 <code>CE</code> 以外の結果を得た一番最後の提出のみが順位表に反映される。 相対評価スコアの計算に用いられる各テストケース毎の全参加者中の最高点の算出においても、順位表に反映されている最終提出のみが用いられる。</p>\n<p>順位表に表示されているスコアは相対評価スコアであり、新規提出があるたびに、相対評価スコアが再計算される。 一方、提出一覧から確認出来る各提出のスコアは各テストケース毎の得点をそのまま足し合わせた絶対評価スコアであり、相対評価スコアは表示されない。 最新以外の提出の、現在の順位表における相対評価スコアを知るためには、再提出が必要である。不正な出力や制限時間超過をした場合、提出一覧から確認出来る絶対スコアは0となっているが、順位表には正解したテストケースに対する相対スコアの和が表示されている。</p>\n<p><a id=\"constraints\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3>\n<ul>\n<li>文字コードはUTF-8(ただし今回はASCII文字のみ使用される)</li>\n<li>改行コードは<code>LF</code>(<code>0x0A</code>)</li>\n<li>区切り文字は半角スペース(<code>0x20</code>)</li>\n<li>末尾区切り文字は許容される。</li>\n</ul>\n<p>小数のものは<strong>[小数]</strong>と付記する。</p>\n<h4>入力1</h4>\n<ul>\n<li><var>300 \\leq T_\\text{max} \\leq 1000</var> かつ <var>T_\\text{max}</var>は<var>100</var>の倍数。</li>\n<li><var>150\\leq N_V\\leq 2000</var></li>\n<li><var>4N_V/3\\leq N_E\\leq 2 N_V</var></li>\n<li><var>1\\leq u_i,v_i\\leq N_V, u_i \\neq v_i (1 \\leq i \\leq N_E)</var></li>\n<li><var>1\\leq d_i \\leq 128 (1 \\leq i \\leq N_E)</var> </li>\n<li>与えられるグラフは自己ループ・多重辺が存在せず、連結であることが保証される。</li>\n<li><var> 1 \\leq N_\\text{worker} \\leq 10</var></li>\n<li><var>1\\leq v^\\text{init}_i \\leq N_V (1 \\leq i \\leq N_\\text{worker})</var></li>\n<li><var>30\\leq L^\\text{max}_i\\leq 100 (1 \\leq i \\leq N_\\text{worker})</var></li>\n<li><var>1 \\leq N^\\text{JobType}_i \\leq 3 (1 \\leq i \\leq N_\\text{worker})</var></li>\n<li><var>1\\leq \\text{Type}^i_j\\leq 3 (1 \\leq i \\leq N_\\text{worker},1 \\leq j \\leq N^\\text{JobType}_i)</var></li>\n<li><var>250 \\leq N_\\text{job} \\leq 1003</var></li>\n<li><var>\\text{ID}^\\text{job}_i=i (1 \\leq i \\leq N_\\text{job})</var></li>\n<li><var>1\\leq \\text{Type}_i\\leq 3</var> かつ、<var>\\text{Type}_i</var>は<var>1</var>つ以上のワーカーの処理可能ジョブタイプに含まれる。  <var>(1 \\leq i \\leq N_\\text{job})</var></li>\n<li><var>500 \\leq N^\\text{task}_i \\leq 1500(1 \\leq i \\leq N_\\text{job})</var></li>\n<li><var>1 \\leq v^\\text{job}_i \\leq N_V (1 \\leq i \\leq N_\\text{job})</var></li>\n<li><var>0.91\\leq P^\\text{job}_i&lt;1.0 (1 \\leq i \\leq N_\\text{job})</var> <strong>[小数]</strong></li>\n<li><var>f^\\text{mandatory}_i\\in\\{0,1\\}(1 \\leq i \\leq N_\\text{job})</var></li>\n<li><var>1 \\leq N^\\text{reward}_i \\leq 43 (1 \\leq i \\leq N_\\text{job})</var> </li>\n<li><var>0\\leq t^\\text{reward}_{i,1}&lt;t^\\text{reward}_{i,2}&lt;\\cdots&lt;t^\\text{reward}_{i,N^\\text{reward}_i}\\leq T_\\text{max}+1(1 \\leq i \\leq N_\\text{job})</var></li>\n<li><var>y^\\text{reward}_{i,1}=y^\\text{reward}_{i,N^\\text{reward}_i}=0,1 \\leq y^\\text{reward}_{i,j} \\leq 10^7 (1 \\leq i \\leq N_\\text{job},2 \\leq j \\leq N^\\text{reward}_i-1)</var></li>\n<li><var>0\\leq N^\\text{depend}_i\\leq 3(1 \\leq i \\leq N_\\text{job})</var></li>\n<li><var>1 \\leq \\text{id}^\\text{depend}_{i,j} \\leq N_\\text{job},\\text{id}^\\text{depend}_{i,j} \\neq \\text{id}^\\text{depend}_{i,k},\\text{id}^\\text{depend}_{i,j}\\neq i (1 \\leq i \\leq N_\\text{job},1\\leq j \\leq N^\\text{depend}_i,1\\leq k\\leq N^\\text{depend}_i,j\\neq k)</var></li>\n<li>ジョブの依存関係は、ジョブ全体で見ると各ジョブを頂点、ジョブの間の依存関係を有向辺とみなした有向非巡回グラフ（必ずしも連結でない）となり、各連結成分のサイズは<var>4</var>以下である。</li>\n<li><var>5 \\leq T^\\text{weather} \\leq 20</var> かつ <var>T^\\text{weather}</var> は <var>T_\\text{max}</var>を割り切る。</li>\n<li><var>N^\\text{weather}=7</var></li>\n<li><var>0.0 \\leq p^\\text{weather}_{i,j} \\leq 1.0,\\displaystyle\\sum_{k=1}^{N^\\text{weather}}p^\\text{weather}_{i,k}=1.0(1\\leq i \\leq N^\\text{weather},1 \\leq j \\leq N^\\text{weather}) </var> <strong>[小数]</strong></li>\n<li><var>(c_1,c_2,c_3,c_4,c_5,c_6,c_7) = (0,1,2,3,10,14,20)</var> </li>\n<li><var>0.005 \\leq P_m&lt; 0.025</var> <strong>[小数]</strong></li>\n<li><var>0.97&lt; R_m \\leq 0.999</var> <strong>[小数]</strong> (ただし、<var>R_m</var>の分布は<var>[0,1)</var>の一様分布に従う確率変数<var>X</var>に<var>f(x)=1.0-0.001*30^x</var>を適用して得られるものである。) </li>\n<li><var>0.2 \\leq \\alpha &lt; 5</var> <strong>[小数]</strong> (ただし、<var>\\alpha</var>の分布は<var>[0,1)</var>の一様分布に従う確率変数<var>X</var>に<var>f(x)=5^{-1+2x}</var>を適用して得られるものである。)</li>\n<li><var>0.0 \\leq d^\\text{weather}_i &lt; 0.15 (1 \\leq i \\leq N_\\text{job})</var> <strong>[小数]</strong> </li>\n</ul>\n<h4>入力2</h4>\n<ul>\n<li><var>1 \\leq \\text{id}_i^\\text{job} \\leq N_\\text{job} (1\\leq i\\leq N^\\text{selected})</var></li>\n<li><var>0 \\leq n^\\text{rest}_i \\leq N^\\text{task}_i (1\\leq i\\leq N^\\text{selected})</var></li>\n<li><var>0.0 \\leq L^\\text{weather}_i \\leq 1.0(1\\leq i\\leq N^\\text{selected})</var> <strong>[小数]</strong></li>\n<li><var>\\text{id}^\\text{worker}_i=i (1\\leq i\\leq N_\\text{worker})</var></li>\n<li><var>1\\leq u_i,v_i\\leq N_V (1\\leq i\\leq N_\\text{worker})</var></li>\n<li><var>0\\leq d^\\text{from\\_u}_i  \\leq </var> <var>\\text{対応する辺の長さ}</var> <var> (1\\leq i\\leq N_\\text{worker})</var></li>\n<li><var>d^\\text{from\\_u}_i=0</var>のとき、またその時に限り<var>u_i=v_i</var>となる。<var>(1\\leq i\\leq N_\\text{worker})</var></li>\n<li><a href=\"#input2\">入力2</a>を受け取った時刻を<var>t</var>とすると:<ul>\n<li><var>N'= (T_{\\text{max}}-(t-1))/T^{\\text{weather}}</var></li>\n<li><var>t_i=t+(i-1)\\times T^{\\text{weather}} (1\\leq i \\leq N')</var></li>\n<li><var>0.0 \\leq p^i_j \\leq 1.0,\\displaystyle\\sum_{k=1}^{N^\\text{weather}}p^i_k = 1.0 (1\\leq i \\leq N')</var> <strong>[小数]</strong></li>\n</ul>\n</li>\n</ul>\n<h4>入力3(採点)</h4>\n<ul>\n<li><var>0 \\leq S \\leq 2^{63}-1</var></li>\n</ul>\n<h4>地理情報</h4>\n<ul>\n<li><var>L=2048</var></li>\n<li><var>d_\\text{max}\\in\\{5,6,7\\}</var></li>\n<li><var>s=1</var></li>\n<li><var>0.3 \\leq C &lt; 0.4</var> <strong>[小数]</strong></li>\n<li><var>M=\\text{round}(0.45(4^{d_\\text{max}+1}-1)/(3\\times 2^{d_\\text{max}-5}))</var></li>\n</ul>\n<h4>遷移確率行列</h4>\n<ul>\n<li><var>\\bm{s}^\\text{sta}=(0.21,0.25,0.10,0.31,0.102,0.023,0.005)</var> <strong>[小数]</strong></li>\n<li><var>d=2</var></li>\n<li><var>\\epsilon = 1.0 \\times 10^{-8}</var> <strong>[小数]</strong></li>\n<li><var>M=10^6</var></li>\n<li><var>1 \\leq q \\leq 2</var> <strong>[小数]</strong></li>\n</ul>\n<h4>報酬を表す区分線形関数</h4>\n<ul>\n<li><var> 100 \\leq L \\leq T_\\text{max}</var></li>\n<li><var>l = 25</var></li>\n<li><var> 10^6 \\leq s \\leq 2\\times 10^6</var></li>\n<li><var> 0.3 \\leq \\sigma' &lt; 0.38 </var>  <strong>[小数]</strong></li>\n<li><var> M = 10^7 </var></li>\n<li><var> m = 1 </var></li>\n</ul>\n<h4>その他</h4>\n<ul>\n<li>天候用シード <var> \\in \\{0,1,\\cdots,2^{64}-1\\}</var></li>\n</ul>\n<p><a id=\"toolkit\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>ツールキット</h3>\n<p>この問題のツールキットは<a href=\"https://img.atcoder.jp/hokudai-hitachi2022/f3c44ba9531996b.zip\">ここ</a>からダウンロード可能です。以下のコンテンツが含まれています:</p>\n<ul>\n<li>ジャッジプログラム(A,B両用)</li>\n<li>テストケースジェネレータ(A,B両用)</li>\n<li>サンプルコード(C++,A問題用に1つ,B問題用に1つ)</li>\n<li>ビジュアライザ</li>\n</ul>\n<p><a id=\"visualizer\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>ビジュアライザ</h3>\n<p>ツールキット内のジャッジプログラムから生成されるログファイル(JSON形式)を利用して結果の可視化を行うことができます。</p>\n<p>ビジュアライザはツールキットに同梱されていますが、サーバー上のものも<a href=\"https://img.atcoder.jp/hokudai-hitachi2022/wVw8B4mE02x8rJNU.html\">こちら</a>から利用できます。</p>\n<p>詳細はツールキット内のREADMEやビジュアライザのページ下部の説明をお読みください。</p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p></p><details><summary>Contents</summary><p></p>\n<ol>\n<li><a href=\"#problem-overview-en\">Problem Overview</a></li>\n<li><a href=\"#input1-en\">Input 1</a><ol>\n<li><a href=\"#work-time-frame-en\">Work time frame</a></li>\n<li><a href=\"#geo-data-en\">Geographical data</a></li>\n<li><a href=\"#worker-en\">Workers</a></li>\n<li><a href=\"#job-en\">Jobs</a></li>\n<li><a href=\"#weather-en\">Weather</a></li>\n<li><a href=\"#schedule-en\">Schedule</a></li>\n</ol>\n</li>\n<li><a href=\"#output1-en\">Output 1</a></li>\n<li><a href=\"#input2-en\">Input 2 (for each time point)</a><ol>\n<li><a href=\"#current-weather-en\">Current weather</a></li>\n<li><a href=\"#job-state-en\">Job state</a></li>\n<li><a href=\"#worker-current-location-en\">Worker current location</a></li>\n<li><a href=\"#weather-forecast-en\">Weather forecasts</a></li>\n</ol>\n</li>\n<li><a href=\"#output2-en\">Output 2 (for each time point)</a><ol>\n<li><a href=\"#schedule-submission-en\">Schedule submission</a></li>\n<li><a href=\"#worker-action-en\">Worker actions</a></li>\n</ol>\n</li>\n<li><a href=\"#input3-en\">Input 3 (Scoring)</a><ol>\n<li><a href=\"#scoring-method-en\">Scoring method</a></li>\n<li><a href=\"#total-reward-amount-en\">Total reward amount</a></li>\n<li><a href=\"#unfinished-penalty-en\">Penalties for unfinished jobs</a></li>\n<li><a href=\"#schedule-added-point-en\">Schedule added points</a></li>\n</ol>\n</li>\n<li><a href=\"#task-limit-en\">Limits on tasks performed</a></li>\n<li><a href=\"#testcase-generation-rules-en\">Test case generation rules</a></li>\n<li><a href=\"#ranking-method-en\">Ranking mehod</a></li>\n<li><a href=\"#constraints-en\">Constraints</a></li>\n<li><a href=\"#toolkit-en\">Toolkit</a></li>\n<li><a href=\"#visualizer-en\">Visualizer</a>\n</li></ol></details>\n\n<p><a id=\"problem-overview-en\" class=\"anchor\"></a></p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Overview</h3>\n<p>This problem is to maximize utilization of available machinery and personnel (referred to as “workers” for simplicity) for an agricultural equipment sharing service, accepting agricultural work (referred to as “jobs”) while maximizing reward*. You will initially select the jobs to accept from among many that are distributed over a space, and then produce and update job performance schedules, outputting instructions to workers to process the jobs. Each job is composed of multiple “tasks” requiring a specified amount of processing and is considered complete when workers have processed these “tasks”. Basically all accepted jobs must be completed (otherwise penalties for unfinished jobs will be applied). Reward is obtained by completing jobs, but amount of reward depends on when tasks were completed, so the appropriate time-frame for handling each task must be considered. The number of tasks that can be handled at a particular time is also dependent on the capabilities of the workers and the weather. Weather forecasts are provided for set periods of time.</p>\n<p>*Reward: Assuming factors such as the harvest time for the crops and the rate of renewable energy supplied to agricultural equipment.</p>\n<p style=\"text-align:center;display:flex;justify-content: center; width:100%;aspect-ratio: 2.5;\" id=\"overview-img\">\n\n\n\n<img src=\"https://img.atcoder.jp/hokudai-hitachi2022/d1322d9e6b5804ee14b50150d0016990.png\">\n<img src=\"https://img.atcoder.jp/hokudai-hitachi2022/751c572a574f7439e188671d0fadd90d.png\">\n<img src=\"https://img.atcoder.jp/hokudai-hitachi2022/279b072d4bc44aac50b8e1b79bae7664.png\">\n\n\n</p>\n\n<p>The following data is given as the initial input.</p>\n<ol>\n<li>Work time frame</li>\n<li>Geographical data (graph)</li>\n<li>Worker data</li>\n<li>All job data</li>\n<li>Weather related data</li>\n<li>Schedule related data</li>\n</ol>\n<p>Given this data, you shall output:</p>\n<ol>\n<li>Which jobs you will accept.</li>\n</ol>\n<p>Then, at the start of each time point, the following data will be provided as input:</p>\n<ol>\n<li>Data regarding the accepted jobs.</li>\n<li>The current location of workers.</li>\n<li>Weather forecasts (for set intervals).</li>\n</ol>\n<p>Based on this data, you must output:</p>\n<ol>\n<li>A job performance schedule</li>\n<li>Actions for each worker</li>\n</ol>\n<p>This cycle is repeated until the specified work time frame ends.</p>\n<p>Your output will be scored based on:</p>\n<ol>\n<li>The reward earned.</li>\n<li>Penalties for not finishing jobs.</li>\n<li>Degree to which the schedule was followed and changed.</li>\n</ol>\n<p>More detailed description is given below.</p>\n<p><a id=\"input1-en\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Input 1</h3>\n<p>The initial input is:</p>\n<ol>\n<li>Work time frame</li>\n<li>Geographical data(graph)</li>\n<li>Worker data</li>\n<li>All job data</li>\n<li>Weather related data</li>\n<li>Schedule related data</li>\n</ol>\n<p>This data is given on standard input in the following format:</p>\n<div class=\"codehilite\"><pre><span></span><var>\nT_{\\rm{max}}\\\\\nN_V\\,\\,N_E\\\\\nu_1\\quad v_1\\quad d_1\\\\\n\\vdots\\\\\nu_{N_E}\\,\\, v_{N_E}\\,\\, d_{N_E}\\\\\nN_{\\rm{worker}}\\\\\nv^{\\rm{init}}_1\\,\\,L^\\text{max}_1\\,\\,N^{\\rm{JobType}}_1\\,\\,\\text{Type}^1_1\\,\\,\\text{Type}^1_2\\,\\,\\cdots \\text{Type}^1_{N^{\\rm{JobType}}_1}\\\\\n\\vdots\\\\\nv^{\\rm{init}}_{N_{\\rm{worker}}}\\,\\,L^\\text{max}_{N_{\\rm{worker}}}\\,\\,N^{\\rm{JobType}}_{N_{\\rm{worker}}}\\,\\,\\text{Type}^{N_{\\rm{worker}}}_1\\,\\,\\text{Type}^{N_{\\rm{worker}}}_2\\,\\,\\cdots \\text{Type}^{N_{\\rm{worker}}}_{N^{\\rm{JobType}}_1}\\\\\nN_{\\rm{job}}\\\\\n\\text{Job}_1\\\\\n\\vdots\\\\\n\\text{Job}_{N_{\\rm{job}}}\\\\\nT^{\\rm{weather}}\\,\\,N^{\\rm{weather}}\\\\\n\\begin{array}{llll}\np^{\\rm{weather}}_{1,1} &amp; p^{\\rm{weather}}_{1,2} &amp; \\cdots &amp; p^{\\rm{weather}}_{1,N^{\\rm{weather}}}\\\\\np^{\\rm{weather}}_{2,1} &amp; p^{\\rm{weather}}_{2,2} &amp; \\cdots &amp; p^{\\rm{weather}}_{2,N^{\\rm{weather}}}\\\\\n\\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots\\\\\np^{\\rm{weather}}_{N^{\\rm{weather}},1} &amp; p^{\\rm{weather}}_{N^{\\rm{weather}},2} &amp; \\cdots &amp; p^{\\rm{weather}}_{N^{\\rm{weather}},N^{\\rm{weather}}}\\\\\n\\end{array}\\\\\nc_1\\,\\,c_2\\,\\,\\cdots\\,\\,c_{N^{\\rm{weather}}}\\\\\nP_m\\,\\, R_m\\,\\, \\alpha\\\\\nt_1\\,\\, p^1_1\\,\\, p^1_2\\,\\, \\cdots \\,\\, p^1_{N^{\\rm{weather}}}\\\\\nt_2\\,\\, p^2_1\\,\\, p^2_2\\,\\, \\cdots \\,\\, p^2_{N^{\\rm{weather}}}\\\\\n\\vdots\\\\\nt_{N'}\\,\\, p^{N'}_1\\,\\, p^{N'}_2\\,\\, \\cdots \\,\\, p^{N'}_{N^{\\rm{weather}}}</var>\n</pre></div>\n\n\n<p>(The structure for <var>\\text{Job}_i</var> is described below)\n<a id=\"work-time-frame-en\" class=\"anchor\"></a></p>\n<h4>Work Time Frame</h4>\n<ul>\n<li><strong>Input</strong><ul>\n<li>The length of the work time frame,<var>T_\\text{max}</var>, is given in the first line.</li>\n</ul>\n</li>\n</ul>\n<p>For this problem, time values, <var>t</var>, will be integer values from <var>1</var> to <var>T_{\\text{max}}</var>.\n</p><details><summary>Input example</summary>\nThe following is an example with <var>T_\\text{max}=300</var><p></p>\n<div class=\"codehilite\"><pre><span></span>300\n</pre></div>\n\n\n<p>(the line ends with a line-feed character)</p>\n<ul>\n<li>Line1: Length of work time frame is <code>300</code> (<var>T_\\text{max}=300</var>).\n</li></ul></details>\n<a id=\"geo-data-en\" class=\"anchor\"></a>\n\n<h4>Geographical Data</h4>\n<ul>\n<li><strong>Input</strong><ul>\n<li>The next line gives the number of vertices, <var>N_V</var>, and edges, <var>N_E</var>, for a graph representing geographical data for the problem (a connected, non-directed graph with positive weightings). <ul>\n<li>The <var>N_V</var> individual vertices will be numbered from <var>1</var> to <var>N_V</var>. </li>\n</ul>\n</li>\n<li>The following <var>N_E</var> lines give data for each edge: vertices <var>u_i,v_i</var>, and weight <var>d_i</var> (distance).Note that <var>1\\leq i \\leq N_E</var>.</li>\n</ul>\n</li>\n</ul>\n<p>As described below, <a href=\"#job-en\">jobs</a> are located on vertices and <a href=\"#worker-en\">workers</a> move along edges of this graph.\n</p><details><summary>Input example</summary>\nThe following is an example with <var>N_V=14,N_E=19</var>:<p></p>\n<div class=\"codehilite\"><pre><span></span>14 19\n1 7 1\n1 2 1\n2 9 1\n2 3 1\n3 5 1\n3 7 1\n3 6 1\n4 13 2\n4 10 2\n4 6 1\n4 5 1\n6 8 1\n7 8 1\n8 14 2\n9 11 2\n10 12 2\n10 11 2\n12 13 2\n13 14 2\n</pre></div>\n\n\n<p>(The last line ends with a line-feed character)</p>\n<ul>\n<li>Line 1: The graph has <code>14</code> vertices and <code>19</code> edges(<var>N_V=14,N_E=19</var>).<ul>\n<li>Vertex indices from <var>1</var> to <code>14</code> are assigned to these <code>14</code> vertices.</li>\n<li>Below, the vertex corresponding to vertex indices <var>i</var> will be referred to simply as vertex <var>i</var>. </li>\n</ul>\n</li>\n<li>Line 2: There is an edge of length <code>1</code> between vertices <code>1</code> and <code>7</code>(<var>u_{1}=1,v_{1}=7,d_{1}=1</var>).</li>\n<li>Line 3: There is an edge of length <code>1</code> between vertices <code>1</code> and <code>2</code>(<var>u_{2}=1,v_{2}=2,d_{2}=1</var>).</li>\n<li>Line 4: There is an edge of length <code>1</code> between vertices <code>2</code> and <code>9</code>(<var>u_{3}=2,v_{3}=9,d_{3}=1</var>).</li>\n<li>Line 5: There is an edge of length <code>1</code> between vertices <code>2</code> and <code>3</code>(<var>u_{4}=2,v_{4}=3,d_{4}=1</var>).</li>\n<li>Line 6: There is an edge of length <code>1</code> between vertices <code>3</code> and <code>5</code>(<var>u_{5}=3,v_{5}=5,d_{5}=1</var>).</li>\n<li>Line 7: There is an edge of length <code>1</code> between vertices <code>3</code> and <code>7</code>(<var>u_{6}=3,v_{6}=7,d_{6}=1</var>).</li>\n<li>Line 8: There is an edge of length <code>1</code> between vertices <code>3</code> and <code>6</code>(<var>u_{7}=3,v_{7}=6,d_{7}=1</var>).</li>\n<li>Line 9: There is an edge of length <code>2</code> between vertices <code>4</code> and <code>13</code>(<var>u_{8}=4,v_{8}=13,d_{8}=2</var>).</li>\n<li>Line 10: There is an edge of length <code>2</code> between vertices <code>4</code> and <code>10</code>(<var>u_{9}=4,v_{9}=10,d_{9}=2</var>).</li>\n<li>Line 11: There is an edge of length <code>1</code> between vertices <code>4</code> and <code>6</code>(<var>u_{10}=4,v_{10}=6,d_{10}=1</var>).</li>\n<li>Line 12: There is an edge of length <code>1</code> between vertices <code>4</code> and <code>5</code>(<var>u_{11}=4,v_{11}=5,d_{11}=1</var>).</li>\n<li>Line 13: There is an edge of length <code>1</code> between vertices <code>6</code> and <code>8</code>(<var>u_{12}=6,v_{12}=8,d_{12}=1</var>).</li>\n<li>Line 14: There is an edge of length <code>1</code> between vertices <code>7</code> and <code>8</code>(<var>u_{13}=7,v_{13}=8,d_{13}=1</var>).</li>\n<li>Line 15: There is an edge of length <code>2</code> between vertices <code>8</code> and <code>14</code>(<var>u_{14}=8,v_{14}=14,d_{14}=2</var>).</li>\n<li>Line 16: There is an edge of length <code>2</code> between vertices <code>9</code> and <code>11</code>(<var>u_{15}=9,v_{15}=11,d_{15}=2</var>).</li>\n<li>Line 17: There is an edge of length <code>2</code> between vertices <code>10</code> and <code>12</code>(<var>u_{16}=10,v_{16}=12,d_{16}=2</var>).</li>\n<li>Line 18: There is an edge of length <code>2</code> between vertices <code>10</code> and <code>11</code>(<var>u_{17}=10,v_{17}=11,d_{17}=2</var>).</li>\n<li>Line 19: There is an edge of length <code>2</code> between vertices <code>12</code> and <code>13</code>(<var>u_{18}=12,v_{18}=13,d_{18}=2</var>).</li>\n<li>Line 20(<var>=1+N_E</var>): There is an edge of length <code>2</code> between vertices <code>13</code> and <code>14</code>(<var>u_{19}=13,v_{19}=14,d_{19}=2</var>).\n</li></ul></details>\n<a id=\"worker-en\" class=\"anchor\"></a>\n\n<h4>Workers</h4>\n<p>Workers are entities that process jobs, and have capabilities to move and to perform tasks. They operate according to input from the contestant (See <a href=\"#worker-action-en\">Worker actions</a>).</p>\n<ul>\n<li><strong>Input</strong><ul>\n<li>The number of workers, <var>N_{\\text{worker}}</var>, is given on the next line.</li>\n<li><p>\nThis is followed by <var>N_{\\text{worker}}</var> lines with worker configuration data:\n</p><ul>\n<li>Initial position (vertex index): <var>v^{\\text{init}}_i</var></li>\n<li>The maximum tasks the worker can perform per unit time: <var>L^{\\text{max}}_i</var></li>\n<li>Number of job types the worker can perform,  <var>N^{\\text{JobType}}_i</var> , and a list of the job types: <var>\\text{Type}^i_1\\,\\,\\text{Type}^i_2\\,\\,\\cdots\\,\\,\\text{Type}^i_{N^{\\text{JobType}}_i}</var></li>\n</ul>\n(<var>1\\leq i \\leq N_{\\text{worker}}</var>)\n<p></p></li>\n</ul>\n</li>\n</ul>\n<p>These inputs are given in order of worker ID.</p>\n<p>The upper limit for number of tasks performable per unit time and the types of jobs that can be done are different for each worker. The number of tasks that can actually be completed per unit time is also dependent on the weather.\n</p><details><summary>Input example</summary>\nThe following is an example for <var>N_{\\text{worker}}=5</var>:<p></p>\n<div class=\"codehilite\"><pre><span></span>5\n6 100 3 1 2 3\n13 59 1 3\n10 55 2 2 3\n9 47 3 1 2 3\n9 89 1 2\n</pre></div>\n\n\n<p>(The last line ends with a line-feed character)</p>\n<ul>\n<li>Line 1: There are <code>5</code> workers (<var>N_{\\text{worker}}=5</var>).</li>\n<li>Line 2: The descriptor for worker with ID=1.<ul>\n<li>The worker’s initial location is the vertex with vertex index <code>6</code> (<var>v^{\\text{init}}_1=6</var>).</li>\n<li>The maximum number of tasks this worker can perform per unit of time is <code>100</code> (<var>L^{\\text{max}}_1=100</var>).</li>\n<li>The worker can perform <code>3</code> types of job (<var>N^{\\text{JobType}}_1=3</var>), of types <code>1</code>, <code>2</code>, <code>3</code> (<var>\\text{Type}^1_1=1,\\text{Type}^1_2=2,\\text{Type}^1_3=3</var>).</li>\n</ul>\n</li>\n<li>Line 3: The descriptor for worker with ID=2.<ul>\n<li>The worker’s initial location is the vertex with vertex index <code>13</code> (<var>v^{\\text{init}}_2=13</var>).</li>\n<li>The maximum number of tasks this worker can perform per unit of time is <code>59</code> (<var>L^{\\text{max}}_2=59</var>).</li>\n<li>The worker can perform <code>1</code> types of job (<var>N^{\\text{JobType}}_2=1</var>), of type <code>3</code> (<var>\\text{Type}^2_1=3</var>).</li>\n</ul>\n</li>\n<li>Line 4: The descriptor for worker with ID=3.<ul>\n<li>The worker’s initial location is the vertex with vertex index <code>10</code> (<var>v^{\\text{init}}_3=10</var>).</li>\n<li>The maximum number of tasks this worker can perform per unit of time is <code>55</code> (<var>L^{\\text{max}}_3=55</var>).</li>\n<li>The worker can perform <code>2</code> types of job (<var>N^{\\text{JobType}}_3=2</var>), of types <code>2</code>, <code>3</code> (<var>\\text{Type}^3_1=2,\\text{Type}^3_2=3</var>).</li>\n</ul>\n</li>\n<li>Line 5: The descriptor for worker with ID=4.<ul>\n<li>The worker’s initial location is the vertex with vertex index <code>9</code> (<var>v^{\\text{init}}_4=9</var>).</li>\n<li>The maximum number of tasks this worker can perform per unit of time is <code>47</code> (<var>L^{\\text{max}}_4=47</var>).</li>\n<li>The worker can perform <code>3</code> types of job (<var>N^{\\text{JobType}}_4=3</var>), of types <code>1</code>, <code>2</code>, <code>3</code> (<var>\\text{Type}^4_1=1,\\text{Type}^4_2=2,\\text{Type}^4_3=3</var>).</li>\n</ul>\n</li>\n<li>Line 6(<var>=1+N_{\\text{worker}}</var>): The descriptor for worker with ID=5.<ul>\n<li>The worker’s initial location is the vertex with vertex index <code>9</code> (<var>v^{\\text{init}}_5=9</var>).</li>\n<li>The maximum number of tasks this worker can perform per unit of time is <code>89</code> (<var>L^{\\text{max}}_5=89</var>).</li>\n<li>The worker can perform <code>1</code> types of job (<var>N^{\\text{JobType}}_5=1</var>), of type <code>2</code> (<var>\\text{Type}^5_1=2</var>).\n</li></ul></li></ul></details>\n<a id=\"job-en\" class=\"anchor\"></a>\n\n\n\n<h4>Jobs</h4>\n<p>A job is work that workers perform at one of the vertices.</p>\n<ul>\n<li><strong>A job:</strong><ul>\n<li>Is a unit of work in the real world, such as harvesting a crop or applying agricultural chemicals.</li>\n<li>Is composed of multiple smaller work tasks. For example, picking a single piece of fruit, harvesting a set area of rice plants, or spreading a chemical over a set area. These smaller amounts of work comprising a job will be called “tasks”.</li>\n<li>A job is completed by completing the set number of tasks that comprise the job.</li>\n<li>In reality, a job could consist of multiple types of task, but in this case, we focus on just the number of tasks. Thus, <strong>a job is completed by just processing a set number of a task</strong>. </li>\n<li>The location of a job is different for each job. For this problem, <strong>this is represented by locating each job on a vertex of the <a href=\"#geo-data-en\">geographical data</a> graph</strong> given with the problem.</li>\n</ul>\n</li>\n<li><strong>Task processing and reward</strong><ul>\n<li>The tasks for each job are processed by <a href=\"#worker-en\">workers</a>.</li>\n<li>The contestant shall output instructions for each worker to <strong>move</strong> and <strong>perform work</strong>, to move them to the vertex of a job and to perform the job’s tasks.</li>\n<li>The contestant will receive reward by <strong><font color=\"#DC143C\">completing jobs (processing the set number of tasks)</font></strong>.</li>\n<li>Each worker has an upper limit to the number of tasks they can process per unit time (<a href=\"#task-limit-en\">Limits on tasks performed</a>), so completion of a job will take a certain amount of time. Typically, a set number of tasks are processed during each set time interval from a set time.</li>\n<li><strong>The amount of reward received when completing a job will depend on the time when tasks were processed</strong>. More specifically, it is the sum for all time intervals (<var>t=1,2,\\cdots,T_\\text{max}</var>), of <p style=\"text-align:center;\">the product of the reward rate per task processed at that time point <var>r(t)</var> <var>\\times</var> the number of that task processed at that time point</p></li>\n<li>The reward rate, <var>r(t)</var> for processing the task at each time point <strong>is different for each job</strong>.</li>\n<li>The total reward collected by all workers will be the main constituent of the score for this problem (<a href=\"#scoring-method-en\">Scoring method</a>). Contestants need to decide worker actions to maximize this total reward, while also considering the other elements.</li>\n</ul>\n</li>\n<li><strong>Dependencies between jobs</strong><ul>\n<li>Some jobs are dependent on other jobs. That is, if a job is dependent on another job, its tasks cannot be processed until the tasks of the other job have been completed. </li>\n<li>If a job is not dependent on another job, there are no such constraints.</li>\n</ul>\n</li>\n<li><strong>Accepting jobs</strong><ul>\n<li>The contestant must <strong>select jobs to accept at the beginning of the problem</strong> (<a href=\"#output1-en\">Output 1</a>).</li>\n<li><strong>There are jobs that are mandatory</strong>, so the selected jobs must include all mandatory jobs.</li>\n<li>If all of the selected jobs are not completed by the end of the work time frame, an <strong>unfinished-job penalty</strong> specified per-job <strong>will be incurred</strong>. </li>\n</ul>\n</li>\n</ul>\n<p></p><details open=\"\"><summary>Various constraints</summary>\n<ul>\n<li>Tasks cannot be processed during time intervals when reward is not available (when the reward per unit task is zero).</li>\n<li>The number of tasks that a worker is able to perform per unit time is affected by the weather (<a href=\"#task-limit-en\">Constraints on tasks performed</a>)</li>\n<li>Jobs that have not been accepted cannot be performed.</li>\n</ul></details>\n<br>\n<br><p></p>\n<ul>\n<li><strong>Input</strong><ul>\n<li>The next line gives <var>N_{\\text{job}}</var>, the number of jobs.</li>\n<li>This is followed by lines indicating the composition of each job, <var>\\text{Job}_i</var>, for the <var>N_{\\text{job}}</var> jobs(<var>N_{\\text{job}}\\times 3</var> lines).</li>\n</ul>\n</li>\n</ul>\n<p>The composition of <var>\\text{Job}_i</var> is given in the following format:</p>\n<div class=\"codehilite\"><pre><span></span><var>\n\\text{ID}^{\\rm{job}}_i\\,\\,\\text{Type}_i\\,\\,N^{\\rm{task}}_i\\,\\,v^{\\rm{job}}_i\\,\\, P^{\\rm{job}}_i\\,\\,d^\\text{weather}_i\\,\\, f^{\\rm{mandatory}}_i\\\\\nN^{\\rm{reward}}_i\\,\\, t^{\\rm{reward}}_{i,1}\\,\\, y^{\\rm{reward}}_{i,1}\\cdots t^{\\rm{reward}}_{i,N^{\\rm{reward}}_i}\\,\\, y^{\\rm{reward}}_{i,N^{\\rm{reward}}_i}\\\\\nN^{\\rm{depend}}_i\\,\\, {\\rm{id}}^{\\rm{depend}}_{i,1}\\,\\, \\cdots \\,\\,{\\rm{id}}^{\\rm{depend}}_{i,N^{\\rm{depend}}_i}</var>\n</pre></div>\n\n\n<ul>\n<li>Line 1<ul>\n<li>Job ID: <var>\\text{ID}^{\\text{job}}_i</var></li>\n<li>Job type: <var>\\text{Type}_i</var></li>\n<li>No. of tasks to complete: <var>N^{\\text{task}}_i</var></li>\n<li>Job location (vertex index): <var>v^{\\text{job}}_i</var></li>\n<li>The penalty factor for jobs accepted but not finished: <var>P^{\\text{job}}_i</var></li>\n<li>Dependency on weather: <var>d^\\text{weather}_i</var></li>\n<li>Mandatory job flag: <var>f^{\\text{mandatory}}_i</var> (<var>0</var>: optional, <var>1</var>: mandatory)</li>\n</ul>\n</li>\n<li>Line 2 (definition of reward function, <var>r(t)</var>)<ul>\n<li>Number of control points in reward function:<var>N^{\\text{reward}}_i</var></li>\n<li>Control point list:<var>t^{\\rm{reward}}_{i,1}\\,\\,y^{\\rm{reward}}_{i,1}\\,\\,t^{\\rm{reward}}_{i,2}\\,\\,y^{\\rm{reward}}_{i,2}\\,\\,\\cdots\\,\\,t^{\\rm{reward}}_{i,N^{\\text{reward}}_i}\\,\\,y^{\\rm{reward}}_{i,N^{\\text{reward}}_i}</var></li>\n</ul>\n</li>\n<li>Line 3 (job dependencies)<ul>\n<li>Number of job dependencies: <var>N^{\\text{depend}}_i</var></li>\n<li>Dependency job IDs: <var>{\\rm{id}}^{\\rm{depend}}_{i,1}\\,\\,{\\rm{id}}^{\\rm{depend}}_{i,2}\\,\\, \\cdots \\,\\,{\\rm{id}}^{\\rm{depend}}_{i,N^{\\rm{depend}}_i}</var></li>\n</ul>\n</li>\n</ul>\n<p></p><details><summary>Reward function <var>r(t)</var> details</summary>\nThe per-task reward at time <var>t</var> function <var>r(t)</var> is defined by one or more control points (time and value pairs) and linear interpolation between those points.<p></p>\n<p>In other words, given a list of control points, <var>p=((t_i,y_i))_{i=1,\\cdots,n}</var>  (<var>t_i,y_i\\in \\mathbb{Z},t_1 &lt; t_2 &lt; \\cdots &lt; t_n,n\\geq 1</var>), the per-task reward at time <var>t</var> function <var>r(t)</var> (actually <var>r(t;p)</var>), is defined as:</p>\n<p></p><p><var>\nr(t)=\\begin{cases}\ny_1, &amp; \\text{if}\\,\\, t &lt; t_1, \\\\\ny_n, &amp; \\text{if}\\,\\, t \\geq t_n, \\\\\n(y_\\text{next}-y_\\text{prev})(t-t_\\text{prev})/(t_\\text{next}-t_\\text{prev})+y_\\text{prev}, &amp; \\text{otherwise}.\n\\end{cases}</var></p><p></p>\n<p>Here, <var>(t_\\text{prev},y_\\text{prev})</var> is the pair with the largest time that does not exceed <var>t</var>, and <var>(t_\\text{next},y_\\text{next})</var> is the pair with the smallest time that exceeds <var>t</var>.</p>\n<p><var>r(t)</var>, integral multiples of <var>r(t)</var> and their sum are computed in decimals.</p>\n<p></p></details><p></p>\n<p></p><details><summary>Input example</summary>\nThe following is an example with <var>N_{\\text{job}}=6</var> (Note that this is a very small number of jobs):<p></p>\n<div class=\"codehilite\"><pre><span></span>6\n1 1 906 10 0.94469412898840599 0.07857326752336613 0\n13 11 0 12 1212810 37 1849941 63 2266874 88 1944271 113 1207029 139 768959 164 808665 189 992126 214 1137116 240 907954 265 903397 266 0\n0\n2 3 905 2 0.96478158647239831 0.056877102556647817 0\n7 92 0 93 1280499 121 1553205 149 1429506 176 1419189 204 1731967 205 0\n0\n3 1 1052 4 0.94436951517275258 0.071240847781028308 0\n7 191 0 192 1914094 218 1735762 244 1444725 270 1275768 296 975408 297 0\n0\n4 3 653 4 0.95274950239675604 0.14137003825803521 0\n10 70 0 71 1319303 94 1329844 118 1503315 141 1161131 165 1294526 188 849137 212 1953166 235 2087503 236 0\n1 2\n5 1 1452 12 0.95747093286627682 0.076042573628832266 0\n8 122 0 123 1667665 149 911519 174 1511934 200 1967913 225 1633211 251 1589845 252 0\n2 6 4\n6 2 737 6 0.95812926774107732 0.049371044631834608 1\n11 82 0 83 1431723 108 1475010 133 1032345 158 1012865 183 1593586 207 1923638 232 1956884 257 2797127 282 2877123 283 0\n0\n</pre></div>\n\n\n<ul>\n<li>Line 1: The total number of jobs is <code>6</code>. (<var>N_{\\text{job}}=6</var>)<ul>\n<li>The actual problem given will consist of several hundreds of jobs.</li>\n</ul>\n</li>\n<li>Line 2: Start of description for job with ID=1.<ul>\n<li>The job ID is <code>1</code> (<var>\\text{ID}^{\\text{job}}_1=1</var>).</li>\n<li>The job type is <code>1</code> (<var>\\text{Type}_1=1</var>).</li>\n<li>The number of tasks required to complete this job is <code>906</code> (<var>N^{\\text{task}}_1=906</var>).</li>\n<li>The job is located at vertex <code>10</code> (<var>v^{\\text{job}}_1=10</var>).</li>\n<li>If this job is accepted, but not finished by the end of the work time frame (<var>T_\\text{max}</var>), an unfinished-job penalty of <code>0.94469412898840599</code> will be applied (<a href=\"#scoring-method-en\">Scoring method</a>) (<var>P^{\\text{job}}_1=0.94469412898840599</var>).</li>\n<li>Dependency of this job on weather is <code>0.07857326752336613</code> (<a href=\"#task-limit-en\">Limits on tasks performed</a>) (<var>d^\\text{weather}_1=0.07857326752336613</var>).</li>\n<li>This job is not mandatory (<var>f^{\\text{mandatory}}_1=0</var>).</li>\n</ul>\n</li>\n<li>Line 3: Definition of reward function for the job with ID=1.<ul>\n<li>There are <code>13</code> control points (<var>N^{\\text{reward}}_1=13</var>).</li>\n<li>The list of control points is: ((<code>11</code>,<code>0</code>), (<code>12</code>,<code>1212810</code>), (<code>37</code>,<code>1849941</code>), (<code>63</code>,<code>2266874</code>), (<code>88</code>,<code>1944271</code>), (<code>113</code>,<code>1207029</code>), (<code>139</code>,<code>768959</code>), (<code>164</code>,<code>808665</code>), (<code>189</code>,<code>992126</code>), (<code>214</code>,<code>1137116</code>), (<code>240</code>,<code>907954</code>), (<code>265</code>,<code>903397</code>), (<code>266</code>,<code>0</code>)).<ul>\n<li>The times for which reward can be obtained are <var>12,13,\\cdots,265</var>.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Line 4: The jobs that the job with ID=1 depends on. This completes the description of the job with ID=1.<ul>\n<li>The number of jobs this job depends on is <code>0</code>(<var>N^{\\text{depend}}_1=0</var>).</li>\n<li>(Since the number of jobs it depends on is <code>0</code>, no job IDs are given.)</li>\n</ul>\n</li>\n<li>Line 5: Start of description for job with ID=2.<ul>\n<li>The job ID is <code>2</code> (<var>\\text{ID}^{\\text{job}}_2=2</var>).</li>\n<li>The job type is <code>3</code> (<var>\\text{Type}_2=3</var>).</li>\n<li>The number of tasks required to complete this job is <code>905</code> (<var>N^{\\text{task}}_2=905</var>).</li>\n<li>The job is located at vertex <code>2</code> (<var>v^{\\text{job}}_2=2</var>).</li>\n<li>If this job is accepted, but not finished by the end of the work time frame (<var>T_\\text{max}</var>), an unfinished-job penalty of <code>0.96478158647239831</code> will be applied (<a href=\"#scoring-method-en\">Scoring method</a>) (<var>P^{\\text{job}}_2=0.96478158647239831</var>).</li>\n<li>Dependency of this job on weather is <code>0.056877102556647817</code> (<a href=\"#task-limit-en\">Limits on tasks performed</a>) (<var>d^\\text{weather}_2=0.056877102556647817</var>).</li>\n<li>This job is not mandatory (<var>f^{\\text{mandatory}}_2=0</var>).</li>\n</ul>\n</li>\n<li>Line 6: Definition of reward function for the job with ID=2.<ul>\n<li>There are <code>7</code> control points (<var>N^{\\text{reward}}_2=7</var>).</li>\n<li>The list of control points is: ((<code>92</code>,<code>0</code>), (<code>93</code>,<code>1280499</code>), (<code>121</code>,<code>1553205</code>), (<code>149</code>,<code>1429506</code>), (<code>176</code>,<code>1419189</code>), (<code>204</code>,<code>1731967</code>), (<code>205</code>,<code>0</code>)).<ul>\n<li>The times for which reward can be obtained are <var>93,94,\\cdots,204</var>.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Line 7: The jobs that the job with ID=2 depends on. This completes the description of the job with ID=2.<ul>\n<li>The number of jobs this job depends on is <code>0</code>(<var>N^{\\text{depend}}_2=0</var>).</li>\n<li>(Since the number of jobs it depends on is <code>0</code>, no job IDs are given.)</li>\n</ul>\n</li>\n<li>Line 8: Start of description for job with ID=3.<ul>\n<li>The job ID is <code>3</code> (<var>\\text{ID}^{\\text{job}}_3=3</var>).</li>\n<li>The job type is <code>1</code> (<var>\\text{Type}_3=1</var>).</li>\n<li>The number of tasks required to complete this job is <code>1052</code> (<var>N^{\\text{task}}_3=1052</var>).</li>\n<li>The job is located at vertex <code>4</code> (<var>v^{\\text{job}}_3=4</var>).</li>\n<li>If this job is accepted, but not finished by the end of the work time frame (<var>T_\\text{max}</var>), an unfinished-job penalty of <code>0.94436951517275258</code> will be applied (<a href=\"#scoring-method-en\">Scoring method</a>) (<var>P^{\\text{job}}_3=0.94436951517275258</var>).</li>\n<li>Dependency of this job on weather is <code>0.071240847781028308</code> (<a href=\"#task-limit-en\">Limits on tasks performed</a>) (<var>d^\\text{weather}_3=0.071240847781028308</var>).</li>\n<li>This job is not mandatory (<var>f^{\\text{mandatory}}_3=0</var>).</li>\n</ul>\n</li>\n<li>Line 9: Definition of reward function for the job with ID=3.<ul>\n<li>There are <code>7</code> control points (<var>N^{\\text{reward}}_3=7</var>).</li>\n<li>The list of control points is: ((<code>191</code>,<code>0</code>), (<code>192</code>,<code>1914094</code>), (<code>218</code>,<code>1735762</code>), (<code>244</code>,<code>1444725</code>), (<code>270</code>,<code>1275768</code>), (<code>296</code>,<code>975408</code>), (<code>297</code>,<code>0</code>)).<ul>\n<li>The times for which reward can be obtained are <var>192,193,\\cdots,296</var>.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Line 10: The jobs that the job with ID=3 depends on. This completes the description of the job with ID=3.<ul>\n<li>The number of jobs this job depends on is <code>0</code>(<var>N^{\\text{depend}}_3=0</var>).</li>\n<li>(Since the number of jobs it depends on is <code>0</code>, no job IDs are given.)</li>\n</ul>\n</li>\n<li>Line 11: Start of description for job with ID=4.<ul>\n<li>The job ID is <code>4</code> (<var>\\text{ID}^{\\text{job}}_4=4</var>).</li>\n<li>The job type is <code>3</code> (<var>\\text{Type}_4=3</var>).</li>\n<li>The number of tasks required to complete this job is <code>653</code> (<var>N^{\\text{task}}_4=653</var>).</li>\n<li>The job is located at vertex <code>4</code> (<var>v^{\\text{job}}_4=4</var>).</li>\n<li>If this job is accepted, but not finished by the end of the work time frame (<var>T_\\text{max}</var>), an unfinished-job penalty of <code>0.95274950239675604</code> will be applied (<a href=\"#scoring-method-en\">Scoring method</a>) (<var>P^{\\text{job}}_4=0.95274950239675604</var>).</li>\n<li>Dependency of this job on weather is <code>0.14137003825803521</code> (<a href=\"#task-limit-en\">Limits on tasks performed</a>) (<var>d^\\text{weather}_4=0.14137003825803521</var>).</li>\n<li>This job is not mandatory (<var>f^{\\text{mandatory}}_4=0</var>).</li>\n</ul>\n</li>\n<li>Line 12: Definition of reward function for the job with ID=4.<ul>\n<li>There are <code>10</code> control points (<var>N^{\\text{reward}}_4=10</var>).</li>\n<li>The list of control points is: ((<code>70</code>,<code>0</code>), (<code>71</code>,<code>1319303</code>), (<code>94</code>,<code>1329844</code>), (<code>118</code>,<code>1503315</code>), (<code>141</code>,<code>1161131</code>), (<code>165</code>,<code>1294526</code>), (<code>188</code>,<code>849137</code>), (<code>212</code>,<code>1953166</code>), (<code>235</code>,<code>2087503</code>), (<code>236</code>,<code>0</code>)).<ul>\n<li>The times for which reward can be obtained are <var>71,72,\\cdots,235</var>.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Line 13: The jobs that the job with ID=4 depends on. This completes the description of the job with ID=4.<ul>\n<li>The number of jobs this job depends on is <code>1</code>(<var>N^{\\text{depend}}_4=1</var>).</li>\n<li>This job depends on the job with ID=<code>2</code>(<var>\\text{id}^\\text{depend}_{4,1}=2</var>).</li>\n</ul>\n</li>\n<li>Line 14: Start of description for job with ID=5.<ul>\n<li>The job ID is <code>5</code> (<var>\\text{ID}^{\\text{job}}_5=5</var>).</li>\n<li>The job type is <code>1</code> (<var>\\text{Type}_5=1</var>).</li>\n<li>The number of tasks required to complete this job is <code>1452</code> (<var>N^{\\text{task}}_5=1452</var>).</li>\n<li>The job is located at vertex <code>12</code> (<var>v^{\\text{job}}_5=12</var>).</li>\n<li>If this job is accepted, but not finished by the end of the work time frame (<var>T_\\text{max}</var>), an unfinished-job penalty of <code>0.95747093286627682</code> will be applied (<a href=\"#scoring-method-en\">Scoring method</a>) (<var>P^{\\text{job}}_5=0.95747093286627682</var>).</li>\n<li>Dependency of this job on weather is <code>0.076042573628832266</code> (<a href=\"#task-limit-en\">Limits on tasks performed</a>) (<var>d^\\text{weather}_5=0.076042573628832266</var>).</li>\n<li>This job is not mandatory (<var>f^{\\text{mandatory}}_5=0</var>).</li>\n</ul>\n</li>\n<li>Line 15: Definition of reward function for the job with ID=5.<ul>\n<li>There are <code>8</code> control points (<var>N^{\\text{reward}}_5=8</var>).</li>\n<li>The list of control points is: ((<code>122</code>,<code>0</code>), (<code>123</code>,<code>1667665</code>), (<code>149</code>,<code>911519</code>), (<code>174</code>,<code>1511934</code>), (<code>200</code>,<code>1967913</code>), (<code>225</code>,<code>1633211</code>), (<code>251</code>,<code>1589845</code>), (<code>252</code>,<code>0</code>)).<ul>\n<li>The times for which reward can be obtained are <var>123,124,\\cdots,251</var>.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Line 16: The jobs that the job with ID=5 depends on. This completes the description of the job with ID=5.<ul>\n<li>The number of jobs this job depends on is <code>2</code>(<var>N^{\\text{depend}}_5=2</var>).</li>\n<li>This job depends on the jobs with ID=<code>6</code>,<code>4</code>(<var>\\text{id}^\\text{depend}_{5,1}=6,\\text{id}^\\text{depend}_{5,2}=4</var>).</li>\n</ul>\n</li>\n<li>Line 17: Start of description for job with ID=6.<ul>\n<li>The job ID is <code>6</code> (<var>\\text{ID}^{\\text{job}}_6=6</var>).</li>\n<li>The job type is <code>2</code> (<var>\\text{Type}_6=2</var>).</li>\n<li>The number of tasks required to complete this job is <code>737</code> (<var>N^{\\text{task}}_6=737</var>).</li>\n<li>The job is located at vertex <code>6</code> (<var>v^{\\text{job}}_6=6</var>).</li>\n<li>If this job is accepted, but not finished by the end of the work time frame (<var>T_\\text{max}</var>), an unfinished-job penalty of <code>0.95812926774107732</code> will be applied (<a href=\"#scoring-method-en\">Scoring method</a>) (<var>P^{\\text{job}}_6=0.95812926774107732</var>).</li>\n<li>Dependency of this job on weather is <code>0.049371044631834608</code> (<a href=\"#task-limit-en\">Limits on tasks performed</a>) (<var>d^\\text{weather}_6=0.049371044631834608</var>).</li>\n<li><strong>This job is mandatory </strong>(<var>f^{\\text{mandatory}}_6=1</var>).</li>\n</ul>\n</li>\n<li>Line 18: Definition of reward function for the job with ID=6.<ul>\n<li>There are <code>11</code> control points (<var>N^{\\text{reward}}_6=11</var>).</li>\n<li>The list of control points is: ((<code>82</code>,<code>0</code>), (<code>83</code>,<code>1431723</code>), (<code>108</code>,<code>1475010</code>), (<code>133</code>,<code>1032345</code>), (<code>158</code>,<code>1012865</code>), (<code>183</code>,<code>1593586</code>), (<code>207</code>,<code>1923638</code>), (<code>232</code>,<code>1956884</code>), (<code>257</code>,<code>2797127</code>), (<code>282</code>,<code>2877123</code>), (<code>283</code>,<code>0</code>)).<ul>\n<li>The times for which reward can be obtained are <var>83,84,\\cdots,282</var>.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Line 19(<var>=1+3\\times N_{\\text{job}}</var>): The jobs that the job with ID=6 depends on. This completes the description of the job with ID=6.<ul>\n<li>The number of jobs this job depends on is <code>0</code>(<var>N^{\\text{depend}}_6=0</var>).</li>\n<li>(Since the number of jobs it depends on is <code>0</code>, no job IDs are given.)\n</li></ul></li></ul></details>\n\n\n\n<p><a id=\"weather-en\" class=\"anchor\"></a></p>\n<h4>Weather</h4>\n<p>Weather is a value that affects the number of tasks that can be performed, and this state changes probabilistically at each time point.</p>\n<ul>\n<li><strong>Input</strong><ul>\n<li>In the next line, the length of a fundamental weather segment, <var>T^\\text{weather}</var>, and the number of weather states, <var>N^\\text{weather}</var>, is given.</li>\n<li>On each of the next <var>N^\\text{weather}</var> lines, the probabilities for transitioning from state <var>i</var>to the other states, <var>p^{\\text{weather}}_{i,1} \\,\\, p^{\\text{weather}}_{i,2} \\,\\,\\cdots \\,\\, p^{\\text{weather}}_{i,N^{\\text{weather}}}</var>, are given (transition probability matrix).</li>\n<li>The next line gives constants, <var>c_1\\,\\,c_2\\,\\,\\cdots\\,\\,c_{N_\\text{weather}}</var>, for calculating <a href=\"#task-limit\">limits on tasks performed</a> for each weather state. </li>\n</ul>\n</li>\n</ul>\n<p><strong>For this problem the value is fixed to <var>N^\\text{weather}=7</var> and the weather states are:<font color=\"#DC143C\">Sunny (1), mostly sunny (2), lightly cloudy (3), cloudy (4), light rain (5), medium rain (6), and heavy rain (7)</font></strong></p>\n<p></p><details><summary>Weather behavior and updating</summary>\nFundamental weather and actual weather states are maintained internally, and the actual weather state is what directly affects the number of tasks that can be performed.<p></p>\n<h4>Fundamental Weather</h4>\n<p>The total length of work time frame is divided equally into fundamental weather segments, <var>b_i (i=1,\\cdots,n(=T_\\text{max}/T^\\text{weather}))</var>, of length <var>T^\\text{weather}</var>.</p>\n<p>Each <var>b_i</var> has an independent weather state, <var>w_i</var>, which is called the fundamental weather state.</p>\n<p>At time point <var>t=1</var>, all <var>w_i</var> are determined probabilistically and independently according to the stationary distribution of the transition probability matrix.\nThereafter, every time <var>T^\\text{weather}</var> time elapses, <var>w_i</var> in each segment is updated independently according to the transition probability matrix.</p>\n<h4>Actual Weather State</h4>\n<p>Here we call the actual weather state <var>w</var>. <var>w</var> is updated as follows:</p>\n<p>At the beginning of time <var>t</var>,</p>\n<ul>\n<li>if <var>t</var> equals the start time of weather segment <var>b_i</var> :<var>w \\leftarrow w_i</var> (set <var>w</var> to <var>w_i</var>)</li>\n<li>In other cases:update <var>w</var> according to the transition probability matrix.</li>\n</ul>\n<p>Note that updating of fundamental weather state is performed before updating the actual weather state.</p>\n<p>When weather (value or state) is mentioned  in other sections, it refers to the actual weather state, <var>w</var>.</p>\n<p>The seed value used to determine the weather is given a different value for each test case.</p>\n<p></p></details><p></p>\n<p>In <a href=\"#input2-en\">Input 2</a>, the probabilities for each weather state in each <var>T^\\text{weather}</var> interval in the future are given each time <var>T^\\text{weather}</var> elapses, starting at time <var>t=1</var> (including the probability data at time <var>t=1</var>).</p>\n<p></p><details><summary>Input example</summary>\nThe following is an example with <var>T^\\text{weather}=10</var> and <var>N^\\text{weather}=7</var>.<p></p>\n<div class=\"codehilite\"><pre><span></span>10 7\n0.65038945819291316 0.3456395688250497 0.0039709729820371371 0 0 0 0\n0.29367291714300126 0.57978625074387669 0.11253142456916906 0.014009407543952863 0 0 0\n1.4131189430426344e-09 0.18905960051799561 0.44909739165434842 0.32239542530231813 0.039447581112218938 0 0\n0 0.043752041690362654 0.079271361143687852 0.87011603340370036 0.0033077052290538069 0.0035528585331954204 0\n0 0 0.015190350742277408 0.044334491311077411 0.90080171493640016 0.039640375730251982 3.3067279992976463e-05\n0 0 0 2.9123680876183852e-09 0.21976983161374733 0.68711791872304939 0.093112246750835195\n0 0 0 0 0.018677162951541051 0.41030647336908055 0.57101636367937847\n0 1 2 3 10 14 20\n</pre></div>\n\n\n<ul>\n<li>Line 1: The fundamental weather segment length is <code>10</code>, and there are <code>7</code> weather states in total(<var>T^\\text{weather}=10,N^\\text{weather}=7</var>).</li>\n<li>Line 2: The (fundamental) transition probabilities from state <var>1</var> to states <var>1,2,3,4,5,6,7</var> are:<code>0.65038945819291316</code>,<code>0.3456395688250497</code>,<code>0.0039709729820371371</code>,<code>0</code>,<code>0</code>,<code>0</code>,<code>0</code>, respectively.</li>\n<li>Line 3: The (fundamental) transition probabilities from state <var>2</var> to states <var>1,2,3,4,5,6,7</var> are:<code>0.29367291714300126</code>,<code>0.57978625074387669</code>,<code>0.11253142456916906</code>,<code>0.014009407543952863</code>,<code>0</code>,<code>0</code>,<code>0</code>, respectively.</li>\n<li>Line 4: The (fundamental) transition probabilities from state <var>3</var> to states <var>1,2,3,4,5,6,7</var> are:<code>1.4131189430426344e-09</code>,<code>0.18905960051799561</code>,<code>0.44909739165434842</code>,<code>0.32239542530231813</code>,<code>0.039447581112218938</code>,<code>0</code>,<code>0</code>, respectively.</li>\n<li>Line 5: The (fundamental) transition probabilities from state <var>4</var> to states <var>1,2,3,4,5,6,7</var> are:<code>0</code>,<code>0.043752041690362654</code>,<code>0.079271361143687852</code>,<code>0.87011603340370036</code>,<code>0.0033077052290538069</code>,<code>0.0035528585331954204</code>,<code>0</code>, respectively.</li>\n<li>Line 6: The (fundamental) transition probabilities from state <var>5</var> to states <var>1,2,3,4,5,6,7</var> are:<code>0</code>,<code>0</code>,<code>0.015190350742277408</code>,<code>0.044334491311077411</code>,<code>0.90080171493640016</code>,<code>0.039640375730251982</code>,<code>3.3067279992976463e-05</code>, respectively.</li>\n<li>Line 7: The (fundamental) transition probabilities from state <var>6</var> to states <var>1,2,3,4,5,6,7</var> are:<code>0</code>,<code>0</code>,<code>0</code>,<code>2.9123680876183852e-09</code>,<code>0.21976983161374733</code>,<code>0.68711791872304939</code>,<code>0.093112246750835195</code>, respectively.</li>\n<li>Line 8: The (fundamental) transition probabilities from state <var>7</var> to states <var>1,2,3,4,5,6,7</var> are:<code>0</code>,<code>0</code>,<code>0</code>,<code>0</code>,<code>0.018677162951541051</code>,<code>0.41030647336908055</code>,<code>0.57101636367937847</code>, respectively.</li>\n<li>Line 9: The limit constants for states <var>1,2,3,4,5,6,7</var> are:<code>0</code>,<code>1</code>,<code>2</code>,<code>3</code>,<code>10</code>,<code>14</code>,<code>20</code>, respectively.\n</li></ul></details>\n\n<p><a id=\"schedule-en\" class=\"anchor\"></a></p>\n<h4>Schedule</h4>\n<p>Contestants must produce a schedule of jobs to perform for each worker (when, which job, how much), and will gain additional points for performance according to the schedule. The added points will be less for not performing on schedule. The schedule can be changed during execution, but the additional points awarded will decrease more for changes made close to the time. Conversely, changing the schedule farther in the future will reduce added points less.</p>\n<p>See <a href=\"#output2-en\">Output 2</a> for detail regarding schedule evaluation.</p>\n<p>If not intending to submit a schedule, any schedule can be submitted.</p>\n<ul>\n<li><strong>Input</strong><ul>\n<li>The next line provides the maximum schedule change penalty  <var>P_m</var>, the schedule change penalty decay rate <var>R_m</var>, and the schedule additional point coefficient <var>\\alpha</var>.</li>\n</ul>\n</li>\n</ul>\n<p></p><details><summary>Input example</summary><p></p>\n<div class=\"codehilite\"><pre><span></span>0.029878077064496654 0.99054720249346828 0.87563809736779619\n</pre></div>\n\n\n<ul>\n<li>Line 1: The maximum schedule change penalty is <code>0.029878077064496654</code>, the schedule change penalty decay rate is <code>0.99054720249346828</code>, and the schedule additional point coefficient is <code>0.87563809736779619</code>.(<var>P_m=0.029878077064496654,R_m=0.99054720249346828,\\alpha=0.87563809736779619</var>)\n</li></ul></details>\n\n<h4>Weather Forecasts</h4>\n<p>To decide which jobs to accept, weather forecast data is provided as input at the start time (<var>t=1</var>). The structure is the same as <a href=\"#weather-forecast-en\">Weather forecast</a> for Input 2, so refer to that section for detail.</p>\n<p></p><details><summary>Full Input 1 example</summary><p></p>\n<div class=\"codehilite\"><pre><span></span>300\n14 19\n1 7 1\n1 2 1\n2 9 1\n2 3 1\n3 5 1\n3 7 1\n3 6 1\n4 13 2\n4 10 2\n4 6 1\n4 5 1\n6 8 1\n7 8 1\n8 14 2\n9 11 2\n10 12 2\n10 11 2\n12 13 2\n13 14 2\n5\n6 100 3 1 2 3\n13 59 1 3\n10 55 2 2 3\n9 47 3 1 2 3\n9 89 1 2\n6\n1 1 906 10 0.94469412898840599 0.07857326752336613 0\n13 11 0 12 1212810 37 1849941 63 2266874 88 1944271 113 1207029 139 768959 164 808665 189 992126 214 1137116 240 907954 265 903397 266 0\n0\n2 3 905 2 0.96478158647239831 0.056877102556647817 0\n7 92 0 93 1280499 121 1553205 149 1429506 176 1419189 204 1731967 205 0\n0\n3 1 1052 4 0.94436951517275258 0.071240847781028308 0\n7 191 0 192 1914094 218 1735762 244 1444725 270 1275768 296 975408 297 0\n0\n4 3 653 4 0.95274950239675604 0.14137003825803521 0\n10 70 0 71 1319303 94 1329844 118 1503315 141 1161131 165 1294526 188 849137 212 1953166 235 2087503 236 0\n1 2\n5 1 1452 12 0.95747093286627682 0.076042573628832266 0\n8 122 0 123 1667665 149 911519 174 1511934 200 1967913 225 1633211 251 1589845 252 0\n2 6 4\n6 2 737 6 0.95812926774107732 0.049371044631834608 1\n11 82 0 83 1431723 108 1475010 133 1032345 158 1012865 183 1593586 207 1923638 232 1956884 257 2797127 282 2877123 283 0\n0\n10 7\n0.65038945819291316 0.3456395688250497 0.0039709729820371371 0 0 0 0\n0.29367291714300126 0.57978625074387669 0.11253142456916906 0.014009407543952863 0 0 0\n1.4131189430426344e-09 0.18905960051799561 0.44909739165434842 0.32239542530231813 0.039447581112218938 0 0\n0 0.043752041690362654 0.079271361143687852 0.87011603340370036 0.0033077052290538069 0.0035528585331954204 0\n0 0 0.015190350742277408 0.044334491311077411 0.90080171493640016 0.039640375730251982 3.3067279992976463e-05\n0 0 0 2.9123680876183852e-09 0.21976983161374733 0.68711791872304939 0.093112246750835195\n0 0 0 0 0.018677162951541051 0.41030647336908055 0.57101636367937847\n0 1 2 3 10 14 20\n0.029878077064496654 0.99054720249346828 0.87563809736779619\n1 0 0 0 0 1 0 0\n11 0.32997661987364896 0.35720093880279286 0.10144180605929307 0.18397452127884667 0.023582674286464638 0.0033945272798704107 0.00042891241908338078\n21 0.26146895868607978 0.29829553702903927 0.10367350846525671 0.27413103299772817 0.050432669277988201 0.010115966874572493 0.0018823266693354056\n31 0.20903275687358913 0.2506351074109075 0.10197621041600768 0.32306215864825039 0.090561788952494518 0.020385340563280511 0.0043466371354700514\n41 0.16453280991499084 0.20329129777873356 0.091390970778385427 0.30920472674724836 0.18000987309438846 0.041926491747270762 0.0096438299389825944\n51 0.21773018584216544 0.25781470723187322 0.10129611879665416 0.30911960619088807 0.089756375035668315 0.020014729744938529 0.0042682771578124723\n61 0.18695780159879197 0.22637031212950884 0.095692191594510659 0.30993166346993428 0.14119172380160475 0.032519854076175789 0.0073364533294737588\n71 0.19978365794228928 0.23953773160128791 0.098109392505800377 0.31008680745444389 0.11925953673379487 0.027193693951331609 0.0060291798110520588\n81 0.20381180897940113 0.24366400563862556 0.098856417213860404 0.3100620551039589 0.11244486750690874 0.02553797224640603 0.0056228733108393747\n91 0.21098420754865557 0.2510068631469719 0.10018090439250056 0.30998380940692433 0.10034511870194431 0.02259771906125015 0.0049013777417531382\n101 0.21017332149772244 0.25017760625955138 0.10003235653165234 0.30999988763169445 0.10170583135583394 0.022928465225827428 0.0049825314977181429\n111 0.21035975914577648 0.25036818399930888 0.10006639945926016 0.30999551883837906 0.10139365148795368 0.02285257565351554 0.0049639114158061791\n121 0.21006375850103443 0.25006523326156821 0.10001185087147714 0.3099994276865809 0.10189232028110375 0.022973761374232418 0.0049936480240032411\n131 0.21003860874539299 0.25003947404099974 0.1000071910191422 0.30999960764692047 0.10193484214518268 0.022984093048729243 0.0049961833536327927\n141 0.21002336947231043 0.25002386973415752 0.10000437307823702 0.30999975094869503 0.1019605735904045 0.022990345532450621 0.0049977176437451558\n151 0.21001036314333912 0.25001055377029446 0.10000197057271488 0.30999988860662192 0.1019825193444605 0.022995678324735189 0.0049990262378340521\n161 0.2098468891366603 0.24984320350327363 0.099971794472248382 0.31000174310451423 0.10225822676243579 0.023062676470061792 0.0050154665508059335\n171 0.21001766063059757 0.25001802405322704 0.10000331731605842 0.30999980388842874 0.10197021368851594 0.022992687970461667 0.0049982924527108988\n181 0.21000312608202204 0.25000314492830189 0.10000063442967058 0.30999996928440271 0.10199472644850339 0.022998644688091742 0.0049997541390076946\n191 0.21000646152716931 0.25000655944481537 0.10000125010448897 0.30999993130167014 0.10198910119136487 0.022997277723427214 0.0049994187070641306\n201 0.21000390597655963 0.25000394330415704 0.10000077837739391 0.30999996034571875 0.10199341120724155 0.022998325077383485 0.0049996757115455511\n211 0.21000068372351638 0.25000064465305499 0.10000018358284854 0.30999999695861213 0.10199884564588058 0.022999645671209767 0.004999999764877615\n221 0.21000123276535285 0.25000120671230119 0.10000028493014526 0.3099999907192631 0.10199791966912596 0.022999420654547454 0.0049999445492642201\n231 0.2100001748189628 0.25000012368230085 0.10000008964391316 0.31000000273847578 0.10199970393318095 0.022999854238977081 0.0050000509441893055\n241 0.21000051371752923 0.25000047061605735 0.10000015220117091 0.30999999888829144 0.10199913236874111 0.022999715346170929 0.0050000168620389848\n251 0.21000030618472809 0.25000025816270716 0.10000011389270266 0.31000000124600918 0.10199948238020001 0.022999800400576097 0.0050000377330769279\n261 0.2100000445095816 0.2499999902833088 0.1000000655900994 0.31000000421880708 0.10199992370466664 0.022999907644464797 0.0050000640490715734\n271 0.21000008909654816 0.25000003592742104 0.10000007382040528 0.31000000371226893 0.10199984850715899 0.022999889371122236 0.0050000595650754173\n281 0.21000000318197135 0.24999994797583083 0.10000005796143702 0.31000000468831079 0.10199999340515975 0.02299992458200726 0.005000068205283017\n291 0.21000003070352388 0.24999997614991259 0.10000006304163929 0.31000000437564929 0.10199994698907894 0.022999913302684732 0.0050000654375114001\n</pre></div>\n\n\n<ul>\n<li>Line 1: See <a href=\"#work-time-frame-en\">Work time frame</a></li>\n<li>Lines 2-21: See <a href=\"#geo-data-en\">Geographic data</a></li>\n<li>Lines 22-27: See <a href=\"#worker-en\">Workers</a></li>\n<li>Lines 28-46: See <a href=\"#job-en\">Jobs</a></li>\n<li>Lines 47-55: See <a href=\"#weather-en\">Weather</a></li>\n<li>Line 56: See <a href=\"#schedule-en\">Schedule</a></li>\n<li>Lines 57-86: Weather forecast data at beginning (<var>t=1</var>) (See <a href=\"#weather-forecast-en\">Weather forecasts</a> in Input 2).\n</li></ul></details>\n\n<p><a id=\"output1-en\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Output 1</h3>\n<p>After receiving this data, the contestant must select the jobs they will accept and produce output in the following format:</p>\n<div class=\"codehilite\"><pre><span></span><var>\nN^{\\text{selected}}\\,\\, \\text{id}_1\\,\\, \\text{id}_2\\,\\,\\cdots \\,\\,\\text{id}_{N^{\\text{selected}}}\n</var>\n</pre></div>\n\n\n<p>(Insert a line-break after the last line)</p>\n<p><a id=\"accepting-jobs-en\" class=\"anchor\"></a></p>\n<h4>Accepting Jobs</h4>\n<ul>\n<li><strong>Output</strong><ul>\n<li>On the first line, output the number of jobs accepted, <var>N^{\\text{selected}}</var>, and a list of IDs for the jobs accepted, <var>\\text{id}_1\\,\\, \\text{id}_2\\,\\,\\cdots \\,\\,\\text{id}_{N^{\\text{selected}}}</var>.</li>\n</ul>\n</li>\n</ul>\n<p>Not meeting the following conditions will result in <code>WA</code> (Wrong Answer).</p>\n<ul>\n<li><var>N^{\\text{selected}} \\geq 0</var></li>\n<li>The length of the job ID list must be <var>N^{\\text{selected}}</var>.</li>\n<li>All job IDs specified must correspond to jobs that exist.</li>\n<li>There is no duplicate in the job IDs specified.</li>\n<li>All mandatory jobs (having <var>f^\\text{mandatory}=1</var>) must be included.</li>\n<li>For all selected jobs, if they are dependent on 1 or more jobs, those jobs must also be selected.</li>\n</ul>\n<p></p><details><summary>Output example</summary><p></p>\n<div class=\"codehilite\"><pre><span></span>4 6 2 3 4\n</pre></div>\n\n\n<ul>\n<li>The contestant accepted <code>4</code> jobs. The IDs of the accepted jobs are <code>6</code>,<code>2</code>,<code>3</code>,<code>4</code>(<var>N^{\\text{selected}}=4,\\text{id}_1=6,\\text{id}_2=2,\\text{id}_3=3,\\text{id}_4=4</var>).\n</li></ul></details>\n\n<p><a id=\"input2-en\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Input 2 (for each time point)</h3>\n<p>If output 1 is completed correctly, input and output for each time point begins. It begins with time <var>t=1</var>, and time advances by <var>1</var> each time the process of this problem reaches Input 2 thereafter.</p>\n<p>For each time point, the following input is given in the format indicated below:</p>\n<ol>\n<li>Current weather</li>\n<li>Accepted job data</li>\n<li>Worker current location</li>\n<li>Weather forecasts(for each <var>T^\\text{weather}</var> time period)</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><var>\nw\\\\\nN^\\text{selected}\\\\\n{\\rm{id}}^{\\rm{job}}_1\\,\\, n^{\\rm{rest}}_1\\\\\n\\vdots\\\\\n{\\rm{id}}^{\\rm{job}}_{N^\\text{selected}}\\,\\, n^{\\rm{rest}}_{N^\\text{selected}}\\\\\n{\\rm{id}}^{\\rm{worker}}_1\\,\\, u_1\\,\\, v_1\\,\\, d^{\\rm{from\\_u}}_1\\\\\n\\vdots\\\\\n{\\rm{id}}^{\\rm{worker}}_{N_{\\rm{worker}}}\\,\\, u_{N_{\\rm{worker}}}\\,\\, v_{N_{\\rm{worker}}}\\,\\, d^{\\rm{from\\_u}}_{N_{\\rm{worker}}}\n</var>\n</pre></div>\n\n\n<p>Weather forecasts are given on standard input in the following format, <strong><font color=\"#DC143C\">for each <var>T^\\text{weather}</var> time period (in other words, only when time <var>t</var> satisfies <var>(t-1) \\mod T^\\text{weather} = 0</var>)</font></strong>.</p>\n<div class=\"codehilite\"><pre><span></span><var>\nt_1\\,\\, p^1_1\\,\\, p^1_2\\,\\, \\cdots \\,\\, p^1_{N^{\\rm{weather}}}\\\\\nt_2\\,\\, p^2_1\\,\\, p^2_2\\,\\, \\cdots \\,\\, p^2_{N^{\\rm{weather}}}\\\\\n\\vdots\\\\\nt_{N'}\\,\\, p^{N'}_1\\,\\, p^{N'}_2\\,\\, \\cdots \\,\\, p^{N'}_{N^{\\rm{weather}}}</var>\n</pre></div>\n\n\n<p><a id=\"current-weather-en\" class=\"anchor\"></a></p>\n<h4>Current Weather</h4>\n<ul>\n<li><strong>Input</strong><ul>\n<li>The current weather, <var>w \\in \\{1,\\cdots,N_\\text{weather}\\}</var>is given on the first line.</li>\n</ul>\n</li>\n</ul>\n<p></p><details><summary>Input example</summary><p></p>\n<div class=\"codehilite\"><pre><span></span>4\n</pre></div>\n\n\n<ul>\n<li>Line 1: The weather state at time <var>t</var> is <code>4</code>(<var>w=4</var>).\n</li></ul></details>\n\n<p><a id=\"job-state-en\" class=\"anchor\"></a></p>\n<h4>Job State</h4>\n<p>The following input data is given regarding accepted jobs.</p>\n<ul>\n<li><strong>Input</strong><ul>\n<li>The number of jobs accepted, <var>N^\\text{selected}</var>, is given on the next line.</li>\n<li>The state of each job is given on the next <var>N^\\text{selected}</var> lines. This includes:<ul>\n<li>Job ID:<var>{\\text{id}}^{\\text{job}}_i</var></li>\n<li>The number of tasks remaining:<var>n^{\\text{rest}}_i</var></li>\n</ul>\n</li>\n<li>for <var>1 \\leq i \\leq N^\\text{selected}</var>.</li>\n</ul>\n</li>\n</ul>\n<p></p><details><summary>Input example</summary><p></p>\n<div class=\"codehilite\"><pre><span></span>4\n2 905\n3 1052\n4 653\n6 737\n</pre></div>\n\n\n<ul>\n<li>Line 1: The number of jobs the contestant accepted is <code>4</code> (<var>N^\\text{selected}=4</var>).</li>\n<li>Line 2: The contestant accepted the job with ID=<code>2</code>, which has <code>905</code> tasks remaining.</li>\n<li>Line 3: The contestant accepted the job with ID=<code>3</code>, which has <code>1052</code> tasks remaining.</li>\n<li>Line 4: The contestant accepted the job with ID=<code>4</code>, which has <code>653</code> tasks remaining.</li>\n<li>Line 5: The contestant accepted the job with ID=<code>6</code>, which has <code>737</code> tasks remaining.\n</li></ul></details>\n\n<p><a id=\"worker-current-location-en\" class=\"anchor\"></a></p>\n<h4>Worker Current Locations</h4>\n<ul>\n<li><strong>Input</strong><ul>\n<li>The following <var>N_\\text{worker}</var> lines give worker data:<ul>\n<li>Worker ID:<var>\\text{id}^\\text{worker}</var></li>\n<li>The vertex indices for the both ends of the edge that the worker is on: <var>u,v</var></li>\n<li>The worker’s distance from vertex <var>u</var>: <var>d^\\text{from\\_u}</var></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Note that when the worker is not on an edge but a vertex, supposing that the vertex is <var>w</var>, then <var>u=v=w</var> and <var>d^\\text{from\\_u}=0</var> will be satisified.</p>\n<p></p><details><summary>Input example</summary><p></p>\n<div class=\"codehilite\"><pre><span></span>1 6 6 0\n2 13 4 1\n3 10 4 1\n4 9 9 0\n5 9 9 0\n</pre></div>\n\n\n<ul>\n<li>Line 1: The worker with ID=<code>1</code> is at vertex <code>6</code>(<var>\\text{id}^\\text{worker}_1=1,u_1=6,v_1=6,d_1=0</var>).</li>\n<li>Line 2: The worker with ID=<code>2</code> is on the edge connecting vertices <code>13</code> and <code>4</code>, and is <code>1</code> unit distance away from vertex <code>13</code>(<var>\\text{id}^\\text{worker}_2=2,u_2=13,v_2=4,d_2=1</var>)</li>\n<li>Line 3: The worker with ID=<code>3</code> is on the edge connecting vertices <code>10</code> and <code>4</code>, and is <code>1</code> unit distance away from vertex <code>10</code>(<var>\\text{id}^\\text{worker}_3=3,u_3=10,v_3=4,d_3=1</var>)</li>\n<li>Line 4: The worker with ID=<code>4</code> is at vertex <code>9</code>(<var>\\text{id}^\\text{worker}_4=4,u_4=9,v_4=9,d_4=0</var>).</li>\n<li>Line 5: The worker with ID=<code>5</code> is at vertex <code>9</code>(<var>\\text{id}^\\text{worker}_5=5,u_5=9,v_5=9,d_5=0</var>).\n</li></ul></details>\n\n<p><a id=\"weather-forecast-en\" class=\"anchor\"></a></p>\n<h4>Weather Forecasts</h4>\n<p><strong><font color=\"#DC143C\">Only when time <var>t</var> satisfies <var>(t-1) \\mod T^\\text{weather} = 0</var></font></strong>, weather forecast data is provided at <var>T^\\text{weather}</var> intervals until the end of the work time frame. </p>\n<ul>\n<li><strong>Input</strong><ul>\n<li>Let the integer <var>N'</var> be the number of forecasts after the current time <var>t</var>. The next <var>N'</var> lines give data as follows:<ul>\n<li>The time <var>t_i</var>  and the probabilities for each weather state <var>p^i_1\\,\\, p^i_2\\,\\, \\cdots \\,\\, p^i_{N^{\\text{weather}}}</var> at time <var>t_i</var> , as of the current time (<var>1\\leq i \\leq N'</var>). </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Note that <var>t_i=t+(i-1)\\times T^{\\text{weather}},N'= (T_{\\text{max}}-(t-1))/T^{\\text{weather}}</var>.</p>\n<p></p><details><summary>Input example</summary>\nThe following is an example of weather forecast data for <var>T_\\text{max}=300,T^{\\text{weather}}=10,N^{\\text{weather}}=7</var>, at time <code>231</code>.<p></p>\n<div class=\"codehilite\"><pre><span></span>231 0 0 0 1 0 0 0\n241 0.14018451203740215 0.1989275695057979 0.11416680823055275 0.47491922909498718 0.055436150269510279 0.013776723318683931 0.0025890075430656636\n251 0.09280720088264463 0.12786225388899222 0.075541159856700776 0.2940084286639329 0.3187308679757298 0.073782875285869701 0.017267213446130077\n261 0.13618507866780669 0.1738477285644548 0.085600288742176719 0.30613029252196533 0.23136324103370096 0.054225695397813925 0.012647675072081671\n271 0.22147567372764859 0.26151152419242735 0.10180524115884333 0.30797314144503296 0.084544670039893785 0.018734568743877168 0.0039551806922769701\n281 0.21773018584216544 0.25781470723187322 0.10129611879665416 0.30911960619088807 0.089756375035668315 0.020014729744938529 0.0042682771578124723\n291 0.21391908801649892 0.25399316678508993 0.10069857638866596 0.30980462878477455 0.095541376935105796 0.021428548707005373 0.0046146143828596133\n</pre></div>\n\n\n<ul>\n<li>Line 1: At time <code>231</code>, the probability that the weather state is <var>1</var> is <code>0</code>, for <var>2</var> it is <code>0</code>, for <var>3</var> it is <code>0</code>, for <var>4</var> it is <code>1</code>, for <var>5</var> it is <code>0</code>, for <var>6</var> it is <code>0</code>, and for <var>7</var> it is <code>0</code>.</li>\n<li>Line 2: At time <code>241</code>, the probability that the weather state is <var>1</var> is <code>0.14018451203740215</code>, for <var>2</var> it is <code>0.1989275695057979</code>, for <var>3</var> it is <code>0.11416680823055275</code>, for <var>4</var> it is <code>0.47491922909498718</code>, for <var>5</var> it is <code>0.055436150269510279</code>, for <var>6</var> it is <code>0.013776723318683931</code>, and for <var>7</var> it is <code>0.0025890075430656636</code>.</li>\n<li>Line 3: At time <code>251</code>, the probability that the weather state is <var>1</var> is <code>0.09280720088264463</code>, for <var>2</var> it is <code>0.12786225388899222</code>, for <var>3</var> it is <code>0.075541159856700776</code>, for <var>4</var> it is <code>0.2940084286639329</code>, for <var>5</var> it is <code>0.3187308679757298</code>, for <var>6</var> it is <code>0.073782875285869701</code>, and for <var>7</var> it is <code>0.017267213446130077</code>.</li>\n<li>Line 4: At time <code>261</code>, the probability that the weather state is <var>1</var> is <code>0.13618507866780669</code>, for <var>2</var> it is <code>0.1738477285644548</code>, for <var>3</var> it is <code>0.085600288742176719</code>, for <var>4</var> it is <code>0.30613029252196533</code>, for <var>5</var> it is <code>0.23136324103370096</code>, for <var>6</var> it is <code>0.054225695397813925</code>, and for <var>7</var> it is <code>0.012647675072081671</code>.</li>\n<li>Line 5: At time <code>271</code>, the probability that the weather state is <var>1</var> is <code>0.22147567372764859</code>, for <var>2</var> it is <code>0.26151152419242735</code>, for <var>3</var> it is <code>0.10180524115884333</code>, for <var>4</var> it is <code>0.30797314144503296</code>, for <var>5</var> it is <code>0.084544670039893785</code>, for <var>6</var> it is <code>0.018734568743877168</code>, and for <var>7</var> it is <code>0.0039551806922769701</code>.</li>\n<li>Line 6: At time <code>281</code>, the probability that the weather state is <var>1</var> is <code>0.21773018584216544</code>, for <var>2</var> it is <code>0.25781470723187322</code>, for <var>3</var> it is <code>0.10129611879665416</code>, for <var>4</var> it is <code>0.30911960619088807</code>, for <var>5</var> it is <code>0.089756375035668315</code>, for <var>6</var> it is <code>0.020014729744938529</code>, and for <var>7</var> it is <code>0.0042682771578124723</code>.</li>\n<li>Line 7: At time <code>291</code>, the probability that the weather state is <var>1</var> is <code>0.21391908801649892</code>, for <var>2</var> it is <code>0.25399316678508993</code>, for <var>3</var> it is <code>0.10069857638866596</code>, for <var>4</var> it is <code>0.30980462878477455</code>, for <var>5</var> it is <code>0.095541376935105796</code>, for <var>6</var> it is <code>0.021428548707005373</code>, and for <var>7</var> it is <code>0.0046146143828596133</code>.\n</li></ul></details>\n\n<p><a id=\"output2-en\" class=\"anchor\"></a></p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Output 2 (for each time point)</h3>\n<p>For the above, the contestant must produce the following on standard output:</p>\n<ol>\n<li>A schedule for each worker</li>\n<li>An action for each worker</li>\n</ol>\n<p>Data must be output in the following format.</p>\n<div class=\"codehilite\"><pre><span></span><var>\nN_\\text{schedule}\\\\\n\\text{id}_1\\,\\,\\text{id}_2\\,\\,\\cdots\\,\\,\\text{id}_{N_\\text{schedule}}\\\\\n\\text{job}^{\\text{id}_1}_t\\,\\,\\text{job}^{\\text{id}_1}_{t+1}\\,\\,\\cdots\\,\\,\\text{job}^{\\text{id}_1}_{T_\\text{max}}\\\\\n\\vdots\\\\\n\\text{job}^{\\text{id}_{N_\\text{schedule}}}_t\\,\\,\\text{job}^{\\text{id}_{N_\\text{schedule}}}_{t+1}\\,\\,\\cdots\\,\\,\\text{job}^{\\text{id}_{N_\\text{schedule}}}_{T_\\text{max}}\\\\\n{\\rm{action}}_1\\\\\n{\\rm{action}}_2\\\\\n\\vdots\\\\\n{\\rm{action}}_{N_{\\rm{worker}}}</var>\n</pre></div>\n\n\n<p>(Insert a line-break after the last line)</p>\n<p><a id=\"schedule-submission-en\" class=\"anchor\"></a></p>\n<h4>Schedule submission</h4>\n<p>The job performance schedule for each worker is maintained in the form of a job ID for each time point.</p>\n<p>The contestant must submit schedules for all workers at time <var>t=1</var>. At any time after that, schedules for only the workers that require changes can be resubmitted.</p>\n<ul>\n<li>\n<p><strong>Output</strong></p>\n<ul>\n<li>On the first line, output the number of workers requiring schedule changes, <var>N_\\text{schedule}</var>.</li>\n<li>On the next line, output the IDs of the workers, <var>\\text{id}_1\\,\\,\\text{id}_2\\,\\,\\cdots\\,\\,\\text{id}_{N_\\text{schedule}}</var>.</li>\n<li>On the next <var>N_\\text{schedule}</var> lines, output the schedule (the ID of the job to be performed on each time point) for the worker with ID=<var>\\text{id}_i</var>, from the current time <var>t</var> till <var>T_\\text{max}</var>, <var>\\text{job}^{\\text{id}_i}_t\\,\\,\\text{job}^{\\text{id}_i}_{t+1}\\,\\,\\cdots\\,\\,\\text{job}^{\\text{id}_i}_{T_\\text{max}}</var>(<var>1\\leq i \\leq N_\\text{schedule}</var>).</li>\n</ul>\n</li>\n<li>\n<p>Not meeting the following conditions will result in <code>WA</code> (Wrong Answer).</p>\n<ul>\n<li><var>N_\\text{schedule} \\geq 0</var></li>\n<li>The length of the worker ID list must be <var>N_\\text{schedule} </var></li>\n<li>There must be a corresponding worker for every worker ID specified.</li>\n<li>Worker IDs must not be duplicated.</li>\n<li>Suppose that the submission time is <var>t</var>, the number of job IDs specified in the schedules must be <var>T_\\text{max}-t+1</var>. </li>\n<li>Only if time <var>t=1</var>: <var>N_\\text{schedule} = N_\\text{worker}</var></li>\n</ul>\n</li>\n</ul>\n<p>When a schedule is resubmitted, the amount of scheduling additional points will be reduced by an amount dependent on the degree of the change (See <a href=\"#schedule-added-point-en\">Schedule added points</a>).</p>\n<p><a id=\"worker-action-en\" class=\"anchor\"></a></p>\n<h4>Worker Actions</h4>\n<p>The contestant must specify <var>\\text{action}</var>s for all workers at every time point. <var>\\text{action}</var>s are represented in the form of text strings, and there are three types.</p>\n<ul>\n<li><code>stay</code>:Neither move, nor perform a job, staying at the current location.</li>\n<li><code>move w</code>:Move a distance of <var>1</var> along the shortest path from the current position to the vertex which corresponds to vertex index <code>w</code>. If the following constraints are not satisfied, it will result in <code>WA</code>(Wrong Answer). <ul>\n<li>A vertex corresponding to vertex index <code>w</code> must exist.</li>\n<li>The current position must not be vertex <code>w</code>.</li>\n</ul>\n</li>\n<li><code>execute i a</code>:Perform the task for the job with ID=<code>i</code>, <code>a</code> times. If the following constraints are not satisfied, it will result in <code>WA</code>(Wrong Answer).<ul>\n<li>The job with ID=<code>i</code> must be among the jobs accepted.</li>\n<li>The worker’s current position must be the same as the location of the job with ID=<code>i</code>.</li>\n<li>The type of the job with ID=<code>i</code> must be included in the job types that the worker can perform.</li>\n<li><code>a</code> must be an integer greater than or equal to 1.</li>\n<li><code>a</code> must not exceed the amount of remaining tasks for the job with ID=<code>i</code>. </li>\n<li><code>a</code> must not exceed limits on the number of tasks performed (See <a href=\"#task-limit-en\">Limits on tasks performed</a> for details).</li>\n<li>The jobs on which the job with ID=<code>i</code> depends must have been completed.</li>\n<li>The reward value must be positive.</li>\n</ul>\n</li>\n</ul>\n<p>For <code>move w</code>, if there are 2 or more different shortest paths between the current location and vertex <code>w</code>, how to select one is not specified. In such cases, the contestant can choose the desired path by repeatedly selecting and moving to points along the path.</p>\n<p>Specifying an <var>\\text{action}</var> string that does not match any of the patterns above will result in <code>WA</code>(Wrong Answer).</p>\n<p>Also, if there exist some jobs whose total task amount processed exceeds its No. of tasks to complete <var>N^{\\text{task}}_i</var>, it will result in <code>WA</code> or <code>RE</code>.</p>\n<ul>\n<li><strong>Output</strong><ul>\n<li>For the following <var>N_\\text{worker}</var> lines, output the actions, <var>\\text{action}_i</var>, for each worker, where <var>1 \\leq i \\leq N_\\text{worker}</var>. </li>\n</ul>\n</li>\n</ul>\n<p></p><details><summary>Output example</summary>\nThe following is an example for <var>N_\\text{worker}=3,T_\\text{max}=10</var><p></p>\n<h4>Example 1:Actions + Initial schedule submission (<var>t=1</var>)</h4>\n<div class=\"codehilite\"><pre><span></span>3\n1 2 3\n85 85 85 85 431 431 431 431 431 431\n65 65 65 65 65 65 65 65 65 65\n730 730 639 639 639 639 4 4 4 4\nexecute 85 135\nmove 12\nmove 98\n</pre></div>\n\n\n<ul>\n<li>Line 1: Contestant is submitting schedules for <code>3</code> workers. </li>\n<li>Line 2: The applicable workers have ID=<code>1</code>,<code>2</code>,<code>3</code>. </li>\n<li>Line 3: This is the schedule for the first worker specified on Line 2 (ID=<code>1</code>), as follows:<ul>\n<li>At time <var>1</var> perform job with ID=<code>85</code>. Similarly at time <var>2</var> ID=<code>85</code>, at time <var>3</var> ID=<code>85</code>, at time <var>4</var> ID=<code>85</code>, at time <var>5</var> ID=<code>431</code>, at time <var>6</var> ID=<code>431</code>, at time <var>7</var> ID=<code>431</code>, at time <var>8</var> ID=<code>431</code>, at time <var>9</var> ID=<code>431</code>, and at time <var>10</var> ID=<code>431</code>.</li>\n</ul>\n</li>\n<li>Line 4: This is the schedule for the first worker specified on Line 2 (ID=<code>2</code>), as follows:<ul>\n<li>At time <var> 1 </var> perform job with ID=<code>65</code>. Similarly at time <var> 2 </var> ID=<code>65</code>, at time <var> 3 </var> ID=<code>65</code>, at time <var> 4 </var> ID=<code>65</code>, at time <var> 5 </var> ID=<code>65</code>, at time <var> 6 </var> ID=<code>65</code>, at time <var> 7 </var> ID=<code>65</code>, at time <var> 8 </var> ID=<code>65</code>, at time <var> 9 </var> ID=<code>65</code>, and at time <var> 10 </var> ID=<code>65</code>.</li>\n</ul>\n</li>\n<li>Line 5: This is the schedule for the first worker specified on Line 2 (ID=<code>3</code>), as follows:<ul>\n<li>At time <var> 1 </var> perform job with ID=<code>730</code>. Similarly at time <var> 2 </var> ID=<code>730</code>, at time <var> 3 </var> ID=<code>639</code>, at time <var> 4 </var> ID=<code>639</code>, at time <var> 5 </var> ID=<code>639</code>, at time <var> 6 </var> ID=<code>639</code>, at time <var> 7 </var> ID=<code>4</code>, at time <var> 8 </var> ID=<code>4</code>, at time <var> 9 </var> ID=<code>4</code>, and at time <var> 10 </var> ID=<code>4</code>.</li>\n</ul>\n</li>\n<li>Line 6: Specify the action for the worker with ID=1 for the current time: Perform <code>135</code> tasks of the job with ID=<code>85</code>.</li>\n<li>Line 7: Specify the action for the worker with ID=2 for the current time: Move toward vertex <code>12</code>.</li>\n<li>Line 8: Specify the action for the worker with ID=3 for the current time: Move toward vertex <code>98</code>.</li>\n</ul>\n<h4>Example 2: Actions + no schedule changes</h4>\n<div class=\"codehilite\"><pre><span></span>0\n\nstay\nmove 87\nexecute 670 40\n</pre></div>\n\n\n<ul>\n<li>Line 1: Contestant is submitting schedules for 0 workers (i.e., no schedule changes).</li>\n<li>Line 2: There are no applicable workers, so this line has 0 worker IDs (it is a blank line).</li>\n<li>(Missing lines: No worker schedules are output, so no lines are output.)</li>\n<li>Line 3: Specify the action for the worker with ID=1 for the current time: Do nothing.</li>\n<li>Line 4: Specify the action for the worker with ID=2 for the current time: Move toward vertex <code>87</code>.</li>\n<li>Line 5: Specify the action for the worker with ID=3 for the current time: Perform <code>40</code> tasks of the job with ID=<code>670</code>.</li>\n</ul>\n<h4>Example 3: Actions + schedule changes (<var>t=6</var>)</h4>\n<div class=\"codehilite\"><pre><span></span>2\n2 3\n65 65 65 65 223\n639 4 4 91 91\nexecute 431 80\nexecute 65 40\nmove 9\n</pre></div>\n\n\n<ul>\n<li>Line 1: Contestant is submitting schedule changes for <code>2</code> workers.</li>\n<li>Line 2: The applicable workers have ID=<code>2</code>,<code>3</code>.</li>\n<li>Line 3: This is the schedule for the first worker specified on Line 2 (ID=<code>2</code>), as follows:<ul>\n<li>At time <var> 6 </var> perform job with ID=<code>65</code>. Similarly at time <var> 7 </var> ID=<code>65</code>, at time <var> 8 </var> ID=<code>65</code>, at time <var> 9 </var> ID=<code>65</code>, and at time <var> 10 </var> ID=<code>431</code>.</li>\n</ul>\n</li>\n<li>Line 4: This is the schedule for the second worker specified on Line 2 (ID=<code>3</code>), as follows:<ul>\n<li>At time <var> 6 </var> perform job with ID=<code>639</code>. Similarly at time <var> 7 </var> ID=<code>4</code>, at time <var> 8 </var> ID=<code>4</code>, at time <var> 9 </var> ID=<code>91</code>, and at time <var> 10 </var> ID=<code>91</code>.</li>\n</ul>\n</li>\n<li>Line 5: Specify the action for the worker with ID=1 for the current time. Perform <code>80</code> tasks of the job with ID=<code>431</code>.</li>\n<li>Line 6: Specify the action for the worker with ID=2 for the current time. Perform <code>40</code> tasks of the job with ID=<code>65</code>.</li>\n<li>Line 7: Specify the action for the worker with ID=3 for the current time. Move toward vertex <code>9</code>.\n</li></ul></details>\n\n<p><a id=\"input3-en\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Input 3 (Scoring)</h3>\n<p>After completing <a href=\"#output2-en\">Output 2</a> at time <var>t=T_\\text{max}</var>, if the output is valid, the score <var>S</var> is given on standard input in the following format.</p>\n<div class=\"codehilite\"><pre><span></span><var>\nS\n</var>\n</pre></div>\n\n\n<p>If the contestant does not read this value from standard input, it may result in <code>TLE</code>.</p>\n<p>For details on ranking method, see <a href=\"#ranking-method-en\">Ranking method</a></p>\n<p><a id=\"scoring-method-en\" class=\"anchor\"></a></p>\n<h4>Scoring Method</h4>\n<p>The score <var>S</var> is derived from the total reward <var>R</var>, the unfinished penalty <var>U</var>, and the scheduling added points <var>A</var> according to the following formula.\n</p><p style=\"text-align:center;\">\n<var>\nS=\\left\\lfloor R \\times U \\times (1+\\alpha A) \\right\\rfloor\n</var>\n</p><p></p>\n<p>Note that <var>\\left\\lfloor x \\right\\rfloor</var> represents the floor function, which returns the greatest integer less than or equal to <var>x</var>.</p>\n<p><var>~</var></p>\n<p>Definitions of <var>R</var>, <var>U</var> and <var>A</var> are as follows.</p>\n<p><a id=\"total-reward-amount-en\" class=\"anchor\"></a></p>\n<p><strong>Total reward amount</strong>:\n</p><p style=\"text-align:center;\">\n<var>\n\\begin{aligned}\nR=\\sum_{j\\in J_\\text{finished}}\\sum_{w \\in W}\\sum_{t=1}^{T_\\text{max}}a^w_j(t)r_j(t)\n\\end{aligned}\n</var>\n</p><p></p>\n<ul>\n<li>Set of completed jobs:<var>J_\\text{finished}</var></li>\n<li>Set of all workers:<var>W</var></li>\n<li>Number of job <var>j</var> tasks performed by worker <var>w</var> at time <var>t</var>:<var>a^w_j(t)</var></li>\n<li>The per-task reward for job <var>j</var> at time <var>t</var>:<var>r_j(t)</var></li>\n</ul>\n<p><a id=\"unfinished-penalty-en\" class=\"anchor\"></a></p>\n<p><strong>Penalty for not finishing jobs</strong>:\n</p><p style=\"text-align:center;\">\n<var>\n\\begin{aligned}\nU=\\prod_{j \\in J_{\\text{unfinished}}} P^{\\text{job}}_j\n\\end{aligned}\n</var>\n</p><p></p>\n<ul>\n<li>The set of accepted but not finished jobs:<var>J_\\text{unfinished}</var></li>\n<li>Unfinished penalty factor for Job <var>j</var>:<var>P_j^\\text{job}</var></li>\n</ul>\n<p><a id=\"schedule-added-point-en\" class=\"anchor\"></a></p>\n<p><strong>Schedule added points</strong>:</p>\n<p>The initial value of <var>A</var> is <var>1.0</var> and it is updated in each time interval according to the following rules:</p>\n<ul>\n<li>\n<p>For each worker:</p>\n<ul>\n<li>If the worker performs a job that differs from the schedule: <p style=\"text-align:center;\">\n<var>\n\\begin{aligned}A\\leftarrow 0\\end{aligned}\n</var></p></li>\n<li>If the worker performs the same job as scheduled: <p style=\"text-align:center;\">\n<var>\n\\begin{aligned}A\\leftarrow A\\end{aligned}\n</var></p></li>\n<li>If the worker does not perform a job: <p style=\"text-align:center;\">\n<var>\n\\begin{aligned}A\\leftarrow A\\end{aligned}\n</var>\n</p></li>\n</ul>\n</li>\n<li>\n<p>If a worker’s schedule is resubmitted at time <var>t</var>:</p>\n<ul>\n<li>For the job ID at time <var>s(\\geq t)</var>:<ul>\n<li>If it is changed, <p style=\"text-align:center;\">\n<var>\n\\begin{aligned}A\\leftarrow A\\times \\left(1.0-P_m \\times (R_m)^{s-t}\\right)\\end{aligned}\n</var></p></li>\n<li>If it is not changed, <p style=\"text-align:center;\">\n<var>\n\\begin{aligned}A\\leftarrow A\\end{aligned}\n</var></p></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Note that <var>A</var> is not updated when the initial schedule is submitted.</p>\n<p>For an empty set a total sum <var>\\sum</var> is <var>0</var>, and a total product <var>\\prod</var> is <var>1</var>.</p>\n<p><a id=\"task-limit-en\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Limits on tasks performed</h3>\n<p>The number of tasks that a worker can perform on one time point is determined by the following, dependent on the <strong>worker’s maximum performable number of tasks <var>L^\\text{max}</var></strong>, <strong>the dependency of the job on the weather <var>d^\\text{weather}</var></strong>, and <strong>the weather state <var>w \\in \\{1,\\cdots,N_\\text{weather}\\}</var></strong>.:\n</p><p style=\"text-align:center;\">\n<var>\n\\begin{aligned}\nL^\\text{max}\\times (1-d^\\text{weather})^{c_w}\\end{aligned}\n</var>\n</p>\nHere, <var>c_w</var> are the limit factors given in <a href=\"#input1-en\">Input 1</a>. Note that <var>0^0=1</var>.<p></p>\n<p><a id=\"testcase-generation-rules-en\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Test Case Generation Rules</h3>\n<p></p><details><summary>Geographical data (graph)</summary><p></p>\n<ul>\n<li>\n<p>Terminology</p>\n<ul>\n<li>Here, we use the term <strong>partition</strong> for the operation of partitioning a rectangular area, <var>[x_0,x_1]\\times[y_0,y_1]\\,\\,(x_0&lt;x_1,y_0&lt;y_1)</var>, in half both vertically and horizontally, into four smaller rectangles.</li>\n<li>Specifically, the operation divides the area <var>[x_0,x_1]\\times[y_0,y_1]</var> into the following four pieces.<ul>\n<li><var>[x_0,(x_1+x_0)/2]\\times[y_0,(y_0+y_1)/2]</var></li>\n<li><var>[x_0,(x_1+x_0)/2]\\times[(y_0+y_1)/2,y_1]</var></li>\n<li><var>[(x_1+x_0)/2,x_1]\\times[y_0,(y_0+y_1)/2]</var></li>\n<li><var>[(x_1+x_0)/2,x_1]\\times[(y_0+y_1)/2,y_1]</var></li>\n</ul>\n</li>\n<li>We also define a function, <var>\\text{Split}(R)</var>, which performs this operation (giving the above set of regions from a received rectangular region).</li>\n</ul>\n</li>\n<li>\n<p>Parameters</p>\n<ul>\n<li>Rectangular region size:<var>L&gt;0</var></li>\n<li>Maximum partition depth:<var>d_\\text{max} \\in \\mathbb{Z}_{\\geq 0}</var></li>\n<li>(Max) number of rectangles:<var>M</var>(integer <var>0</var> or greater, <var>(4^{d_\\text{max}+1}-1)/3</var> or less)</li>\n<li>Distance minimum scale:<var>s&gt;0</var></li>\n<li>Cut area ratio:<var>C\\in (0,1]</var></li>\n</ul>\n</li>\n<li>\n<p><strong>Generation procedure 1 </strong>(generate graph)</p>\n<ol>\n<li>Prepare a set of rectangular regions, <var>U=\\{\\}</var>.</li>\n<li>Add rectangular region <var>R=[0,L]\\times[0,L]</var> to <var>U</var>. </li>\n<li>If <var>d_\\text{max}=0</var>, proceed to <code>8.</code></li>\n<li>Select a rectangle from <var>U</var> at random and call that rectangle <var>r</var>.</li>\n<li>If the area of <var>r</var> is <var>L^2/4^{d_\\text{max}}</var>, return to <code>4.</code></li>\n<li>Add all elements from <var>\\text{Split}(R)</var> to <var>U</var>. <ul>\n<li>If these elements are already in <var>U</var>, <var>U</var> does not change even if they are added. </li>\n</ul>\n</li>\n<li>If <var>|U| &gt; M</var>is satisfied, proceed to <code>8.</code> If not, return to <code>4.</code></li>\n<li>Create a weighted, non-directional graph, <var>G=(V,E),W:E\\rightarrow \\mathbb{R}_{&gt; 0}</var>, from set <var>A</var>, the union of edges of all rectangles in <var>U</var>.<ul>\n<li>The set <var>V</var> of vertices in the graph consists of all points where line segments intersect in set <var>A</var>, the union of all edges.  </li>\n<li>The set of edges <var>E</var> in the graph consists of all pairs of vertices <var>\\{a,b\\}</var>, where <var>a\\neq b</var> and it is possible to reach <var>b</var> from <var>a</var> on set <var>A</var>, the union of all edges, without passing through any other vertex. </li>\n<li>The weight <var>W</var> is derived from the Euclidean distances between the points.</li>\n</ul>\n</li>\n<li>This graph, <var>G=(V,E)</var> (with weight <var>W</var>), is used to generate the geographical data.</li>\n</ol>\n</li>\n</ul>\n<p>(Reference:Eisenstat, D., Random road networks: the quadtree model, Proceeding of the 8th Workshop on Analytic Algorithms and Combinatorics (ANALCO), pp.76-84, 2011 (DOI:<a href=\"https://doi.org/10.1137/1.9781611973013.9\">https://doi.org/10.1137/1.9781611973013.9</a>))</p>\n<ul>\n<li><strong>Generation procedure 2 </strong>(generate elevations)<ol>\n<li>Prepare a square region, <var>R=[0,1024]\\times[0,1024]</var>.</li>\n<li>Divide <var>R</var> by <var>128</var> in both <var>x</var> and <var>y</var> directions (creating <var>128\\times128</var> square regions of size <var>8\\times8</var>). </li>\n<li>Randomly select <var>20</var> of these square regions from <var>R</var> and call the union of them <var>A</var>.</li>\n<li>Again, randomly select <var>20</var> of these square regions from <var>R</var> and call the union of them <var>B</var>.</li>\n<li>Solve the following partial differential equation discretized by the above dividing operation <code>2</code> to time <var>t=100000</var> (in other words, compute <var>u(100000,x,y)</var>):\n<p style=\"text-align:center;\">\n<var>\\displaystyle\n\\frac{\\partial u}{\\partial t}=\\Delta u-b(x,y)u+a(x,y)\n</var>\n</p>\nThe initial value at time <var>t=0</var> is <var>u(0,x,y)=u_0(x,y)\\equiv 0</var>, and we use Neumann boundary conditions. <var>a(x,y)</var> and <var>b(x,y)</var> are defined as follows:<br>\n<var>a(x,y)=\\begin{cases}\n1/8^2, &amp; \\text{if}\\ (x,y) \\in A, \\\\\n0, &amp; \\text{otherwise},\n\\end{cases}</var><br><var>b(x,y)=\\begin{cases}\n1/8^2, &amp; \\text{if}\\ (x,y) \\in B, \\\\\n0, &amp; \\text{otherwise}.\n\\end{cases}</var><br></li>\n<li>Normalize <var>u(100000,x,y)</var> to the range <var>[0,1]</var>, and use it as the elevation, <var>e(x,y)</var>.</li>\n</ol>\n</li>\n<li>\n<p><strong>Generation procedure 3</strong>(cut the graph, distance scaling)</p>\n<ol>\n<li>\n<p>Match the elevation data <var>e(x,y)</var> generated in procedure 2 to the size of the graph space, <var>[0,L]\\times[0,L]</var>.\nIn other words, define space-scaled elevation <var>\\tilde e(x,y)</var>, as <var>\\tilde e(x,y)= e(L\\times x/1024,L\\times y/1024)</var>.</p>\n</li>\n<li>\n<p>For function <var>H(z)=\\{(x,y) \\in [0,L]\\times[0,L]|\\tilde e(x,y)&gt;z\\}</var>, which returns the parts where <var>\\tilde e(x,y)</var> is larger than real value <var>z</var>, call the largest value of <var>z</var> for which the area of <var>H(z)</var> is <var>C\\times L^2</var> or greater, <var>h</var>. </p>\n</li>\n<li>For the set of graph edges <var>E</var> generated in generation procedure 1, delete all edges from <var>E</var> where the two vertices on the both ends are below <var>h</var>.</li>\n<li>Let the graph <var>G'=(V',E')</var> be the largest connected component of graph <var>G=(V,E)</var>.</li>\n<li>Define weight <var>W':E' \\rightarrow \\mathbb{R}_{&gt; 0}:</var> as follows:<var>W'(e)= s\\times W(e)/\\min_{e' \\in E'}W(e')</var></li>\n<li>Use the graph <var>G'=(V',E')</var> (with weight <var>W'</var>) as the geographical data.\n</li></ol></li></ul></details>\n\n\n\n<p></p><details><summary>Weather transition probability matrix</summary>\nHere we describe rules for generating the transition probability matrix with the size of <var>N^\\text{weather}\\times N^\\text{weather}</var> used for weather transitions.<p></p>\n<ul>\n<li>Parameters<ul>\n<li>The desired stationary distribution for the transition probability matrix:<var>\\bm{s}^\\text{sta}=(s^\\text{sta}_1,s^\\text{sta}_2,\\cdots,s^\\text{sta}_{N^\\text{weather}})</var></li>\n<li>Bandwidth of the matrix (as a band matrix):<var>d \\geq 1</var></li>\n<li>Small value for convergence test:<var>\\epsilon &gt; 0</var></li>\n<li>Maximum loop iterations:<var>M\\geq 1</var></li>\n<li>Intensity of diagonal component:<var>q &gt; 0</var></li>\n</ul>\n</li>\n</ul>\n<p><var>~</var></p>\n<ol>\n<li>The <var>N^\\text{weather}\\times N^\\text{weather}</var> matrix <var>A</var> is determined as follows:\n<p style=\"text-align:center;\"> Set the element <var>a_{i,j}</var> at row <var>i</var> and column <var>j</var>, to <var>a_{i,j}=\\begin{cases}\n\\exp(-q|i-j|^2), &amp; \\text{if}\\ |i-j|\\leq d,\\\\\n0, &amp; \\text{otherwise.}\n\\end{cases}</var></p></li>\n<li>Normalize each row of <var>A</var> so that the sum is <var>1</var>.</li>\n<li>Initialize the loop counter:<var>l=0</var></li>\n<li><var>l\\leftarrow l + 1</var></li>\n<li>If <var>l&gt;M</var>, use <var>A</var> as the transition probability matrix and exit.</li>\n<li>Compute the stationary distribution <var>\\bm{s}</var> of <var>A</var>.</li>\n<li>Set matrix <var>P</var> as follows.:<p style=\"text-align:center;\"> \nSet element <var>p_{i,j}</var> at row <var>i</var> and column <var>j</var> to <var>p_{i,j}=\\begin{cases}\nN^\\text{weather}||\\bm{s}^\\text{sta}-\\bm{s}||_\\infty\\max\\{\\epsilon,a_{i,j}\\}\\text{rand}(-1,1), &amp; \\text{if}\\ |i-j|\\leq d,\\\\\n0, &amp; \\text{otherwise.}\n\\end{cases}</var>\n</p>\nHere, <var>||\\cdot||_\\infty</var> is the maximum norm, representing the maximum absolute value of the elements. <var>\\text{rand}(a,b)</var> represents a random number from the uniform distribution on <var>[a,b]</var>. Random numbers are generated when each element is computed.</li>\n<li>Let the matrix <var>A'=A+P</var></li>\n<li>Perform the following update on all rows of <var>A'</var>. For the <var>i</var>-th row:<ol>\n<li>Compute <var>m_i</var>, the value of the smallest element. </li>\n<li>If <var>m_i &lt; 0</var>, add <var>-m_i</var> to the value of all elements in columns <var>j</var> which satisfy <var>|i-j|\\leq d</var>. </li>\n<li>Normalize the row so that the sum equals <var>1</var>. </li>\n</ol>\n</li>\n<li>For each row in <var>A'</var>, if the diagonal component is not the unique maximum component, return to <code>4.</code> </li>\n<li>Compute <var>\\bm{s}'</var>, the stationary distribution of <var>A'</var>. </li>\n<li>If <var>||\\bm{s}^\\text{sta}-\\bm{s}||_\\infty &gt; ||\\bm{s}^\\text{sta}-\\bm{s'}||_\\infty</var>, update <var>A</var> by substituting <var>A</var> with <var>A'</var>.</li>\n<li>If the both conditions, \"<var>||\\bm{s}^\\text{sta}-\\bm{s'}||_\\infty &lt; \\epsilon N^\\text{weather}</var>\" and \"Every element <var>a_{i,j}</var> of <var>A</var> at row <var>i</var> and column <var>j</var> which satisfies <var>|i-j|\\leq d</var>, is positive.\", are satisified, use <var>A</var> as the transition probability matrix and exit. If this is not the case, return to <code>4.</code>\n</li></ol></details>\n\n<p></p><details><summary>Segmented linear function representing reward</summary>\nFor this problem, the function representing reward for each time (more accurately, the reward value per task) is expressed using linear interpolation between a finite number of points. We refer to these points as control points, and the rules for generating this finite number of control points are as follows.<p></p>\n<ul>\n<li>Parameters<ul>\n<li>Length of section with positive reward:<var>L\\geq 1</var></li>\n<li>Length for partitioning the interval:<var>l\\geq 1</var></li>\n<li>Reward standard value:<var>s &gt; 0</var></li>\n<li>Standard deviation used when generating control point value:<var>\\sigma' &gt; 0</var></li>\n<li>Reward upper limit:<var>M &gt; 0</var></li>\n<li>Reward lower limit:<var>m &gt; 0</var></li>\n</ul>\n</li>\n</ul>\n<p><var>~</var></p>\n<ol>\n<li>Let the reward start time be <var>b=\\text{randint}(1,T_\\text{max}-L)</var>, the reward end time be <var>e=b+L</var>, and the number of segments be <var>d=\\text{round}(L/l)</var>. Here, <var>\\text{randint}(m,n)</var> is a function that uniformly selects a random integer between m and n inclusive, and <var>\\text{round}(x)</var> is a function that returns the value <var>x</var> rounded to the nearest integer. </li>\n<li>Generate <var>d+1</var> independent random values which follow a log-normal distribution with <var>\\mu=0</var> and <var>\\sigma=\\sigma'</var>, and let them be <var>\\{c_i\\}_{i=1}^{d+1}</var>. </li>\n<li>Define <var>\\{v_i\\}_{i=1}^{d+1}</var> by <var>v_i=\\prod_{j=1}^{i}c_j</var>. </li>\n<li>Let <var>B=s\\sqrt{(d+1)/\\sum_{i=1}^{d+1}v_i^2}</var>, and define <var>\\{r_i\\}_{i=1}^{d+1}</var> by <var>r_i=\\text{round}(Bv_i)</var>.</li>\n<li>If there exists <var>i</var> such that <var>r_i &gt; M</var> or <var>r_i &lt; m</var>, return to <code>2.</code></li>\n<li>Let <var>t_i=\\text{round}(b+(i-1)L/d)</var>, and use the list of time and reward value pairs <var>((b-1,0),(t_1,r_1),(t_2,r_2),\\cdots,(t_{d+1},r_{d+1}),(e+1,0))</var> as the list of control points. \n</li></ol></details>\n\n<p>If not otherwise specified, uniform random distributions are used.</p>\n<p><a id=\"ranking-method-en\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Ranking method</h3>\n<h4>Provisional test</h4>\n<p>For the provisional test, <var>50</var> test cases are randomly selected from the ones used for the system test and executed. However, only one test case is selected for one parameter pattern.</p>\n<p>The evaluation method is the same as for the system test. See the System test section below.</p>\n<style>\n.testpar{\nmargin:auto;\nborder-collapse:unset;\n}\n.testpar td,.testpar th{\npadding:5px;\n}\n</style>\n\n<h4>System test</h4>\n<p>For the system test, some of the following characteristic parameters are given to satisfy the properties listed in the Remarks column:</p>\n<table border=\"1\" class=\"testpar\">\n<thead>\n<tr>\n<th>Factor</th><th>Corresponding parameter</th><th>No. of types</th><th>Remarks</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Length of work time frame</td><td><var>T_\\text{max}</var></td><td>3</td><td>short(<var>300</var>), medium(<var>700</var>), long(<var>1000</var>)</td>\n</tr><tr>\n<td>Space(Geographical data) size</td><td><var>d_\\text{max}</var> in the Test Case Generation Rules <br>for Geographical data</td><td>3</td><td>small(<var>5</var>), medium(<var>6</var>), large(<var>7</var>)</td>\n</tr><tr>\n<td>Number of workers</td><td><var>N_{\\text{worker}}</var></td><td>4</td><td>single(<var>1</var>), few(<var>2</var>), moderate(<var>5</var>), many(<var>10</var>)</td>\n</tr><tr>\n<td>Number of all jobs</td><td><var>N_{\\text{job}}</var></td><td>3</td><td>few(<var>250 \\leq N_{\\text{job}} \\leq 253 </var>), moderate(<var>500 \\leq N_{\\text{job}} \\leq 503</var>), many(<var>1000 \\leq N_{\\text{job}} \\leq 1003</var>)</td>\n</tr><tr>\n<td>Penalties for not finishing accepted jobs</td><td><var>P^{\\text{job}}_i</var></td><td>2</td><td>small(<var>[0.98,1.0)</var>), large(<var>[0.91,0.93)</var>)</td>\n</tr><tr>\n<td>Weather volatility</td><td><var>q</var> in the Test Case Generation Rules <br>for Weather transition probability matrix </td><td>3</td><td>less(<var>2.0</var>), moderately(<var>1.5</var>), highly volatile(<var>1.0</var>)</td>\n</tr><tr>\n<td></td><td></td><td>Total:648 patterns</td><td>8 test cases are generated for each pattern</td>\n</tr>\n</tbody>\n</table>\n\n<p>For each pattern of these, <var>8</var> test cases with different seed values are generated, for a total of <var>3 \\times 3 \\times4\\times 3 \\times 2  \\times 3 \\times 8 = 5184</var> test cases.</p>\n<p>This is only pattern generation of the parameters in the above table. Apart from this process, data such as geographic information, jobs, etc. are generated for each test case.</p>\n<p>Relative evaluation system is used for rankings. For each test case, we compute the relative score <var>\\text{round}(10^{9} \\times \\frac{\\text{YOUR\\_SCORE}}{\\text{MAX\\_SCORE}})</var>, where <var>\\text{YOUR\\_SCORE}</var> is your <a href=\"#input3-en\">Score</a> and <var>\\text{MAX\\_SCORE}</var> is the highest score among all competitors obtained on that test case. The score of the submission is the sum of the relative scores.</p>\n<p>If your submission produces invalid output or exceeds the time limit for some test cases, only the score for those test cases will be zero.</p>\n<p>The system test will be performed only for <font color=\"red\"><strong>the last submission which received a result other than <code>CE</code></strong></font>. Be careful not to make a mistake in the final submission.</p>\n<h4>About Relative Evaluation System</h4>\n<p>In both the provisional/system test, the standings will be calculated using only the last submission which received a result other than <code>CE</code> . Only the last submissions are used to calculate the highest score among all competitors for each test case in calculating the relative scores.</p>\n<p>The scores shown in the standings are relative, and whenever a new submission arrives, all relative scores are recalculated. On the other hand, the score for each submission shown on the submissions page is an absolute score obtained by summing up the scores for each test case, and the relative scores are not shown. In order to know the relative score of submission other than the latest one in the current standings, you need to resubmit it. If your submission produces invalid output or exceeds the time limit for some test cases, the absolute score shown in the submissions page becomes 0, but the standings show the sum of the relative scores for the test cases that were answered correctly.</p>\n<p><a id=\"constraints-en\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3>\n<ul>\n<li>Character encoding is UTF-8 (although only ASCII characters are used).</li>\n<li>End-of-line code is <code>LF</code>(<code>0x0A</code>).</li>\n<li>Delimiter is the half-width space (<code>0x20</code>)</li>\n<li>Trailing delimiter characters are permitted.</li>\n</ul>\n<p>For decimal values, <strong>[Decimal]</strong> is appended.</p>\n<h4>Input 1</h4>\n<ul>\n<li><var>300 \\leq T_\\text{max} \\leq 1000</var>  and <var>T_\\text{max}</var> is a multiple of <var>100</var></li>\n<li><var>150\\leq N_V\\leq 2000</var></li>\n<li><var>4N_V/3\\leq N_E\\leq 2 N_V</var></li>\n<li><var>1\\leq u_i,v_i\\leq N_V, u_i \\neq v_i (1 \\leq i \\leq N_E)</var></li>\n<li><var>1\\leq d_i \\leq 128 (1 \\leq i \\leq N_E)</var> </li>\n<li>The graph given is guaranteed to be connected and not contain self-loops or multiple edges.</li>\n<li><var> 1 \\leq N_\\text{worker} \\leq 10</var></li>\n<li><var>1\\leq v^\\text{init}_i \\leq N_V (1 \\leq i \\leq N_\\text{worker})</var></li>\n<li><var>30\\leq L^\\text{max}_i\\leq 100 (1 \\leq i \\leq N_\\text{worker})</var></li>\n<li><var>1 \\leq N^\\text{JobType}_i \\leq 3 (1 \\leq i \\leq N_\\text{worker})</var></li>\n<li><var>1\\leq \\text{Type}^i_j\\leq 3 (1 \\leq i \\leq N_\\text{worker},1 \\leq j \\leq N^\\text{JobType}_i)</var></li>\n<li><var>250 \\leq N_\\text{job} \\leq 1003</var></li>\n<li><var>\\text{ID}^\\text{job}_i=i (1 \\leq i \\leq N_\\text{job})</var></li>\n<li><var>1\\leq \\text{Type}_i\\leq 3</var> and <var>\\text{Type}_i</var> is included in the processable job types of <var>1</var> or more workers.  <var>(1 \\leq i \\leq N_\\text{job})</var></li>\n<li><var>500 \\leq N^\\text{task}_i \\leq 1500(1 \\leq i \\leq N_\\text{job})</var></li>\n<li><var>1 \\leq v^\\text{job}_i \\leq N_V (1 \\leq i \\leq N_\\text{job})</var></li>\n<li><var>0.91\\leq P^\\text{job}_i&lt;1.0 (1 \\leq i \\leq N_\\text{job})</var> <strong>[Decimal]</strong></li>\n<li><var>f^\\text{mandatory}_i\\in\\{0,1\\}(1 \\leq i \\leq N_\\text{job})</var></li>\n<li><var>1 \\leq N^\\text{reward}_i \\leq 43 (1 \\leq i \\leq N_\\text{job})</var> </li>\n<li><var>0\\leq t^\\text{reward}_{i,1}&lt;t^\\text{reward}_{i,2}&lt;\\cdots&lt;t^\\text{reward}_{i,N^\\text{reward}_i}\\leq T_\\text{max}+1(1 \\leq i \\leq N_\\text{job})</var></li>\n<li><var>y^\\text{reward}_{i,1}=y^\\text{reward}_{i,N^\\text{reward}_i}=0,1 \\leq y^\\text{reward}_{i,j} \\leq 10^7 (1 \\leq i \\leq N_\\text{job},2 \\leq j \\leq N^\\text{reward}_i-1)</var></li>\n<li><var>0\\leq N^\\text{depend}_i\\leq 3(1 \\leq i \\leq N_\\text{job})</var></li>\n<li><var>1 \\leq \\text{id}^\\text{depend}_{i,j} \\leq N_\\text{job},\\text{id}^\\text{depend}_{i,j} \\neq \\text{id}^\\text{depend}_{i,k},\\text{id}^\\text{depend}_{i,j}\\neq i (1 \\leq i \\leq N_\\text{job},1\\leq j \\leq N^\\text{depend}_i,1\\leq k\\leq N^\\text{depend}_i,j\\neq k)</var></li>\n<li>Job dependency relationships can be viewed as a directed acyclic graph (which will not necessarily be connected) with each job as a vertex and dependencies between jobs as directed edges, and each connected component having size of <var>4</var> or less. </li>\n<li><var>5 \\leq T^\\text{weather} \\leq 20</var>  and <var>T^\\text{weather}</var> divides <var>T_\\text{max}</var>.</li>\n<li><var>N^\\text{weather}=7</var></li>\n<li><var>0.0 \\leq p^\\text{weather}_{i,j} \\leq 1.0,\\displaystyle\\sum_{k=1}^{N^\\text{weather}}p^\\text{weather}_{i,k}=1.0(1\\leq i \\leq N^\\text{weather},1 \\leq j \\leq N^\\text{weather}) </var> <strong>[Decimal]</strong></li>\n<li><var>(c_1,c_2,c_3,c_4,c_5,c_6,c_7) = (0,1,2,3,10,14,20)</var> </li>\n<li><var>0.005 \\leq P_m&lt; 0.025</var> <strong>[Decimal]</strong></li>\n<li><var>0.97&lt; R_m \\leq 0.999</var> <strong>[Decimal]</strong> (Note that the distribution of <var>R_m</var> is obtained by applying <var>f(x)=1.0-0.001 \\cdot 30^x</var> to random variable <var>X</var> that follows the uniform distribution on <var>[0,1)</var>.)</li>\n<li><var>0.2 \\leq \\alpha &lt; 5</var> <strong>[Decimal]</strong>  (Note that the distribution of <var>\\alpha</var> is obtained by applying <var>f(x)=5^{-1+2x}</var> to random variable <var>X</var> that follows the uniform distribution on <var>[0,1)</var>.)</li>\n<li><var>0.0 \\leq d^\\text{weather}_i &lt; 0.15 (1 \\leq i \\leq N_\\text{job})</var> <strong>[Decimal]</strong> </li>\n</ul>\n<h4>Input 2</h4>\n<ul>\n<li><var>1 \\leq \\text{id}_i^\\text{job} \\leq N_\\text{job} (1\\leq i\\leq N^\\text{selected})</var></li>\n<li><var>0 \\leq n^\\text{rest}_i \\leq N^\\text{task}_i (1\\leq i\\leq N^\\text{selected})</var></li>\n<li><var>0.0 \\leq L^\\text{weather}_i \\leq 1.0(1\\leq i\\leq N^\\text{selected})</var> <strong>[Decimal]</strong></li>\n<li><var>\\text{id}^\\text{worker}_i=i (1\\leq i\\leq N_\\text{worker})</var></li>\n<li><var>1\\leq u_i,v_i\\leq N_V (1\\leq i\\leq N_\\text{worker})</var></li>\n<li><var>0\\leq d^\\text{from\\_u}_i  \\leq </var> <var>\\text{Length of the corresponding edge}</var> <var> (1\\leq i\\leq N_\\text{worker})</var></li>\n<li><var>u_i=v_i</var> if and only if <var>d^\\text{from\\_u}_i=0</var>. <var>(1\\leq i\\leq N_\\text{worker})</var></li>\n<li>Suppose that the time <a href=\"#input2-en\">Input 2</a> is given at is <var>t</var>:<ul>\n<li><var>N'= (T_{\\text{max}}-(t-1))/T^{\\text{weather}}</var></li>\n<li><var>t_i=t+(i-1)\\times T^{\\text{weather}} (1\\leq i \\leq N')</var></li>\n<li><var>0.0 \\leq p^i_j \\leq 1.0,\\displaystyle\\sum_{k=1}^{N^\\text{weather}}p^i_k = 1.0 (1\\leq i \\leq N')</var> <strong>[Decimal]</strong></li>\n</ul>\n</li>\n</ul>\n<h4>Input 3 (Scoring)</h4>\n<ul>\n<li><var>0 \\leq S \\leq 2^{63}-1</var></li>\n</ul>\n<h4>Geographical data</h4>\n<ul>\n<li><var>L=2048</var></li>\n<li><var>d_\\text{max}\\in\\{5,6,7\\}</var></li>\n<li><var>s=1</var></li>\n<li><var>0.3 \\leq C &lt; 0.4</var> <strong>[Decimal]</strong></li>\n<li><var>M=\\text{round}(0.45(4^{d_\\text{max}+1}-1)/(3\\times 2^{d_\\text{max}-5}))</var></li>\n</ul>\n<h4>Transition probability matrix</h4>\n<ul>\n<li><var>\\bm{s}^\\text{sta}=(0.21,0.25,0.10,0.31,0.102,0.023,0.005)</var> <strong>[Decimal]</strong></li>\n<li><var>d=2</var></li>\n<li><var>\\epsilon = 1.0 \\times 10^{-8}</var> <strong>[Decimal]</strong></li>\n<li><var>M=10^6</var></li>\n<li><var>1 \\leq q \\leq 2</var> <strong>[Decimal]</strong></li>\n</ul>\n<h4>Segmented linear reward function</h4>\n<ul>\n<li><var> 100 \\leq L \\leq T_\\text{max}</var></li>\n<li><var>l = 25</var></li>\n<li><var> 10^6 \\leq s \\leq 2\\times 10^6</var></li>\n<li><var> 0.3 \\leq \\sigma' &lt; 0.38 </var>  <strong>[Decimal]</strong></li>\n<li><var> M = 10^7 </var></li>\n<li><var> m = 1 </var></li>\n</ul>\n<h4>Others</h4>\n<ul>\n<li>Seed value for weathers <var> \\in \\{0,1,\\cdots,2^{64}-1\\}</var></li>\n</ul>\n<p><a id=\"toolkit-en\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Toolkit</h3>\n<p>A toolkit for this problem can be downloaded from <a href=\"https://img.atcoder.jp/hokudai-hitachi2022/f3c44ba9531996b.zip\">here</a>. It includes the following:</p>\n<ul>\n<li>Judge program (for both A, B)</li>\n<li>Test case generator (both A and B)</li>\n<li>Sample codes (In C++, one each for problems A and B)</li>\n<li>Visualizer</li>\n</ul>\n<p><a id=\"visualizer-en\" class=\"anchor\"></a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Visualizer</h3>\n<p>Log files (in JSON format) generated from the judge program in the toolkit can be used to visualize the results.</p>\n<p>The visualizer is included in the toolkit, but is also available <a href=\"https://img.atcoder.jp/hokudai-hitachi2022/wVw8B4mE02x8rJNU.html?en\">here</a> on the server.</p>\n<p>For details, please read the README in the toolkit and the description at the bottom of the visualizer page.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/hokudai-hitachi2022/tasks/hokudai_hitachi2022_b"}