{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>400</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>自己ループと二重辺を含まない <var>N</var> 頂点 <var>M</var> 辺の重み付き無向連結グラフが与えられます。<br>\n<var>i (1≦i≦M)</var> 番目の辺は頂点 <var>a_i</var> と頂点 <var>b_i</var> を距離 <var>c_i</var> で結びます。 <br>\nここで、自己ループは <var>a_i = b_i (1≦i≦M)</var> となる辺のことを表します。 <br>\nまた、二重辺は <var>(a_i,b_i)=(a_j,b_j)</var> または <var>(a_i,b_i)=(b_j,a_j) (1≦i&lt;j≦M)</var> となる辺のことを表します。 <br>\n連結グラフは、どの異なる <var>2</var> 頂点間にも経路が存在するグラフのことを表します。   <br>\nどの異なる <var>2</var> 頂点間の、どの最短経路にも含まれない辺の数を求めてください。  </p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2≦N≦100</var>  </li>\n<li><var>N-1≦M≦min(N(N-1)/2,1000)</var>  </li>\n<li><var>1≦a_i,b_i≦N</var>  </li>\n<li><var>1≦c_i≦1000</var></li>\n<li><var>c_i</var> は整数である。</li>\n<li>与えられるグラフは自己ループと二重辺を含まない。</li>\n<li>与えられるグラフは連結である。  </li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>  \n<var>a_1</var> <var>b_1</var> <var>c_1</var>  \n<var>a_2</var> <var>b_2</var> <var>c_2</var>\n<var>:</var>  \n<var>a_M</var> <var>b_M</var> <var>c_M</var>  \n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>グラフ上の、どの異なる <var>2</var> 頂点間の、どの最短経路にも含まれない辺の数を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 3\n1 2 1\n1 3 1\n2 3 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1\n</pre>\n\n<p>この入力例で与えられるグラフにおける、全ての異なる <var>2</var> 頂点間の最短経路は以下の通りです。  </p>\n<ul>\n<li>頂点 <var>1</var> から頂点 <var>2</var> への最短経路は、頂点 <var>1</var> → 頂点 <var>2</var> で経路長は <var>1</var>  </li>\n<li>頂点 <var>1</var> から頂点 <var>3</var> への最短経路は、頂点 <var>1</var> → 頂点 <var>3</var> で経路長は <var>1</var>  </li>\n<li>頂点 <var>2</var> から頂点 <var>1</var> への最短経路は、頂点 <var>2</var> → 頂点 <var>1</var> で経路長は <var>1</var>  </li>\n<li>頂点 <var>2</var> から頂点 <var>3</var> への最短経路は、頂点 <var>2</var> → 頂点 <var>1</var> → 頂点 <var>3</var> で経路長は <var>2</var>  </li>\n<li>頂点 <var>3</var> から頂点 <var>1</var> への最短経路は、頂点 <var>3</var> → 頂点 <var>1</var> で経路長は <var>1</var>  </li>\n<li>頂点 <var>3</var> から頂点 <var>2</var> への最短経路は、頂点 <var>3</var> → 頂点 <var>1</var> → 頂点 <var>2</var> で経路長は <var>2</var>  </li>\n</ul>\n<p>したがって、一度も最短経路として使用されていない辺は、頂点 <var>2</var> と頂点 <var>3</var> を結ぶ長さ <var>3</var> の辺のみであるため、<var>1</var> を出力します。  </p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>3 2\n1 2 1\n2 3 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>0\n</pre>\n\n<p>全ての辺が異なる <var>2</var> 頂点間のある最短経路で使用されます。</p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>400</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given an undirected connected weighted graph with <var>N</var> vertices and <var>M</var> edges that contains neither self-loops nor double edges.<br>\nThe <var>i</var>-th <var>(1≤i≤M)</var> edge connects vertex <var>a_i</var> and vertex <var>b_i</var> with a distance of <var>c_i</var>.<br>\nHere, a <em>self-loop</em> is an edge where <var>a_i = b_i (1≤i≤M)</var>, and <em>double edges</em> are two edges where <var>(a_i,b_i)=(a_j,b_j)</var> or <var>(a_i,b_i)=(b_j,a_j) (1≤i&lt;j≤M)</var>.<br>\nA <em>connected graph</em> is a graph where there is a path between every pair of different vertices.<br>\nFind the number of the edges that are not contained in any shortest path between any pair of different vertices.  </p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2≤N≤100</var>  </li>\n<li><var>N-1≤M≤min(N(N-1)/2,1000)</var>  </li>\n<li><var>1≤a_i,b_i≤N</var>  </li>\n<li><var>1≤c_i≤1000</var></li>\n<li><var>c_i</var> is an integer.</li>\n<li>The given graph contains neither self-loops nor double edges.</li>\n<li>The given graph is connected.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>  \n<var>a_1</var> <var>b_1</var> <var>c_1</var>  \n<var>a_2</var> <var>b_2</var> <var>c_2</var>\n<var>:</var>  \n<var>a_M</var> <var>b_M</var> <var>c_M</var>  \n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the number of the edges in the graph that are not contained in any shortest path between any pair of different vertices.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 3\n1 2 1\n1 3 1\n2 3 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1\n</pre>\n\n<p>In the given graph, the shortest paths between all pairs of different vertices are as follows:</p>\n<ul>\n<li>The shortest path from vertex <var>1</var> to vertex <var>2</var> is: vertex <var>1</var> → vertex <var>2</var>, with the length of <var>1</var>.</li>\n<li>The shortest path from vertex <var>1</var> to vertex <var>3</var> is: vertex <var>1</var> → vertex <var>3</var>, with the length of <var>1</var>.</li>\n<li>The shortest path from vertex <var>2</var> to vertex <var>1</var> is: vertex <var>2</var> → vertex <var>1</var>, with the length of <var>1</var>.</li>\n<li>The shortest path from vertex <var>2</var> to vertex <var>3</var> is: vertex <var>2</var> → vertex <var>1</var> → vertex <var>3</var>, with the length of <var>2</var>.</li>\n<li>The shortest path from vertex <var>3</var> to vertex <var>1</var> is: vertex <var>3</var> → vertex <var>1</var>, with the length of <var>1</var>.</li>\n<li>The shortest path from vertex <var>3</var> to vertex <var>2</var> is: vertex <var>3</var> → vertex <var>1</var> → vertex <var>2</var>, with the length of <var>2</var>.</li>\n</ul>\n<p>Thus, the only edge that is not contained in any shortest path, is the edge of length <var>3</var> connecting vertex <var>2</var> and vertex <var>3</var>, hence the output should be <var>1</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>3 2\n1 2 1\n2 3 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>0\n</pre>\n\n<p>Every edge is contained in some shortest path between some pair of different vertices.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc051/tasks/abc051_d"}