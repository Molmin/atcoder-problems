{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>150</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3>\n<p>\n  京都大学のとある教室には縦に2行、横に <var>N</var> 列の黒板が設置されている。\n  あまりに長く連なっているため、どの黒板がすでに使用されていて、\n  どの黒板が未使用なのかを人間が全て把握するのは困難である。\n</p>\n<p>\n  そこで最近、黒板検索装置が導入された。\n  <var>W</var> を任意の整数として、\n  この装置に縦2行、横 <var>W</var> 列の黒板の使用状況を検索クエリとして入力すると、\n  そのような使用状況が部分黒板列として黒板の中に存在しているかが判定される。\n  ここで、使用状況に対して、ある <var>i &lt; j</var> が存在して\n  黒板の <var>i</var> 列から <var>j</var> 列までが使用状況と一致するとき。\n  その使用状況は、その黒板の部分黒板列であるという。\n</p>\n<p>\n  この教室での発表を控えたあなたは滞りなく発表が進むよう、\n  この黒板検索装置を使って黒板全体の使用状況を特定するプログラムを書くことにした。\n  黒板検索装置の検索には多少時間がかかるので検索回数はなるべく少なくしたい。\n</p>\n<p>\n  黒板全体の使用状況は最初に決まっており、途中で変化することはない。\n</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入出力</h3>\n<p>初めの入力は以下で与えられる。</p>\n<pre><var>N</var>\n</pre>\n<p> <var>N</var> <var>(1 \\leq N \\leq 100)</var> は黒板の長さを表す整数である。</p>\n<p>\n  この入力の後に、解答プログラムは黒板検索装置への検索クエリを出力せよ。\n  検索クエリは次の形式で表される。\n</p>\n<pre><var>s_1</var>\n<var>s_2</var>\n</pre>\n<p>ここで <var>s_1</var> は部分黒板列の上の段、\n<var>s_2</var> は部分黒板列の下の段を表す文字列である。\nただし <var>s_1,s_2</var> は、すでに使われている黒板を <code>#</code> 、未使用の黒板を <code>.</code> で表した文字列である。\n文字列 <var>s_1,s_2</var> の長さは任意だが一致していなければならない。\n末尾には改行を出力せよ。\n</p>\n\n<p>\n  次に、黒板検索装置の検索結果を表す文字列が以下の形式で与えられる。\n</p>\n<pre><var>r</var>\n</pre>\n<p>\n  <var>r</var> は <code>T</code> または <code>F</code> である。\n  意味は次の通りである。\n</p>\n  <ul>\n    <li> <code>T</code> のとき、直前の検索クエリの部分黒板列が黒板に存在する。</li>\n    <li> <code>F</code> のとき、直前の検索クエリの部分黒板列が黒板に存在しない。</li>\n  </ul>\n<p>\n  直前の検索クエリが黒板全体となっていた場合や\n  検索回数の上限を超えた場合は\n  <var>r</var> の代わりに文字列 <code>end</code> が与えられる。\n  この文字列を受け取った場合，即座に解答プログラムを終了せよ。\n  検索回数の上限以内で，黒板全体を検索クエリとして出力した場合， <em>Accepted</em> と判定される．\n  ただし，そのときの検索クエリも検索回数に含めて数える．\n</p>\n</section>\n</div>\n</div>\n\n<p>各出力の後には，出力をフラッシュする必要があることに注意せよ。例えば C/C++ では\n  検索クエリ <code>s1</code>, <code>s2</code> を\n</p>\n\n<pre class=\"prettyprint\">printf(\"%s\\n%s\\n\", s1, s2); fflush(stdout);</pre>\n<p>\n  と出力すればよい。\n  黒板検索装置から与えられる入力は最後まで受け取ること。受け取らなかった場合、<em>Time Limit Exceeded</em> の結果が得られることがあるため、注意すること。\n</p>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>検索回数の上限</h3>\n<p>\n  検索回数の上限は <var>420</var> 回である。\n  <var>420</var> 回以内に黒板全体となる検索クエリが与えられなかった場合は <em>Query Limit Exceeded</em> となる。\n</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入出力例</h3>\n<p>以下では <var>N=3</var> で黒板が</p>\n<pre>.#.\n...\n</pre>\n<p>である場合を示している。実際には黒板の状態は解答プログラム側からは分からないことに注意せよ。</p>\n<pre><table class=\"table table-striped table-bordered table-condensed\">\n  <tbody><tr>\n    <th>解答プログラムの出力</th>\n    <th>解答プログラムへの入力</th>\n    <th>説明</th>\n  </tr>\n  <tr>\n    <td></td>\n    <td>3</td>\n    <td>黒板の長さが与えられる</td>\n  </tr>\n  <tr>\n    <td>..<br>##</td>\n    <td></td>\n    <td>検索クエリを出力</td>\n  </tr>\n  <tr>\n    <td></td>\n    <td>F</td>\n    <td>先ほどの部分黒板列は黒板の中に存在しない</td>\n  </tr>\n  <tr>\n    <td>.<br>.</td>\n    <td></td>\n    <td>検索クエリを出力</td>\n  </tr>\n  <tr>\n    <td></td>\n    <td>T</td>\n    <td>先ほどの部分黒板列は黒板の中に存在する</td>\n  </tr>\n  <tr>\n    <td>..<br>..</td>\n    <td></td>\n    <td>検索クエリを出力</td>\n  </tr>\n  <tr>\n    <td></td>\n    <td>F</td>\n    <td>先ほどの部分黒板列は黒板の中に存在しない</td>\n  </tr>\n  <tr>\n    <td>.#<br>..</td>\n    <td></td>\n    <td>検索クエリを出力</td>\n  </tr>\n  <tr>\n    <td></td>\n    <td>T</td>\n    <td>先ほどの部分黒板列は黒板の中に存在する</td>\n  </tr>\n  <tr>\n    <td>.#.<br>...</td>\n    <td></td>\n    <td>検索クエリを出力</td>\n  </tr>\n  <tr>\n    <td></td>\n    <td>end</td>\n    <td>先ほどの部分黒板列は黒板全体となっていたので終了</td>\n  </tr>\n</tbody></table>\n</pre>\n\n</section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>150</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3>\n<p>\n  There is a long blackboard with <var>2</var> rows and <var>N</var> columns in a classroom of Kyoto University. \n  This blackboard is so long that it is impossible to tell which cells are already used and which unused. \n</p>\n<p>\n  Recently, a blackboard retrieval device was installed at the classroom. \n  To use this device, you type a search query that forms a rectangle with 2 rows and any length of columns, where each cell is used or unused. \n  When you input a query, the decive answers whether the rectangle that corresponds to the query exists in the blackboard. \n  Here, for a rectangle that corresponds to a search query, if two integer <var>i, j</var> ( <var>i &lt; j</var> ) exist\n  and the rectangle equals to the partial blackboard between column <var>i</var> and <var>j</var> ,\n  the rectangle is called a sub-blackboard of the blackboard. \n</p>\n<p>\n  You are currently preparing for a presentation at this classroom.\n  To make the presentation go well, you decided to write a program to detect the status of the whole blackboard using the retrieval device. \n  Since it takes time to use the device, you want to use it as few times as possible. \n</p>\n<p>\n  The status of the whole blackboard is already determined at the beginning and does not change while you are using the device. \n</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3>\n<p>The first input is given in the following format:</p>\n<pre><var>N</var>\n</pre>\n<p> <var>N</var> <var>(1 \\leq N \\leq 100)</var> is an integer that represents the length of the blackboard. </p>\n<p>\n  After this input value, your program must print search queries. \n  A search query has the following format. \n</p>\n<pre><var>s_1</var>\n<var>s_2</var>\n</pre>\n<p>\n  Here, <var>s_1</var> represents the upper part of the blackboard and <var>s_2</var> represents the lower. \n  <code>#</code> in <var>s_1</var> and <var>s_2</var> represents the cell is already used and <code>.</code> represents the cell is still unused. \n  The lengths of <var>s_1</var> and <var>s_2</var> are arbitrary, but they must be the same. \n  Make sure to insert a line break at the end of the lines. \n</p>\n<p>\n  Every time your program prints a search query, a string that represents the search result of the device is returned in the followin format. \n</p>\n<pre><var>r</var>\n</pre>\n<p>\n  <var>r</var> is either <code>T</code> or <code>F</code> . \n  The meaning of each character is as follows. \n</p>\n  <ul>\n    <li> <code>T</code> represents that the sub-blackboard that corresponds to the search query exists in the blackboard. </li>\n    <li> <code>F</code> represents that the sub-blackboard that corresponds to the search query does not exist in the blackboard. </li>\n  </ul>\n<p>\n  If the search query equals to the whole blackboard or the number of the search queries exceeds the limit, string <code>end</code> is given instead of <var>r</var> .\n  Once you receive this string, exit your program immediately. \n  If your program prints the whole blackboard as a search query before exceedin the limit, it is judged as <em>Accepted</em>. Note that the search query that represents the whole blackboard is also counted as the number of search queries. \n</p>\n</section>\n</div>\n</div>\n\n<p>\n  Note that the output needs to be flushed every time the output is printed. \n  For example, In C/C++, search query <code>s1</code>, <code>s2</code> can be printed as follows. \n</p>\n  <pre class=\"prettyprint\">printf(\"%s\\n%s\\n\", s1, s2); fflush(stdout);</pre>\n<p>\n  Make sure your program receive all the input from the device. Otherwise, the result may be <em>Time Limit Exceeded</em> . \n</p>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Query Limit</h3>\n<p>\n  The maximun number of search queries is <var>420</var>.\n  If the number of queries exceeds the limit, the result will be <em>Query Limit Exceeded</em> . \n</p>\n<hr>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input and Output</h3>\n<p>The following is an example where <var>N=3</var> and the blackboard is as follows. </p>\n<pre>.#.\n...\n</pre>\n<p>Note that your program does not know the state of the blackboard. </p>\n<pre><table class=\"table table-striped table-bordered table-condensed\">\n  <tbody><tr>\n    <th>Output of your program</th>\n    <th>Input to your program</th>\n    <th>Explanation</th>\n  </tr>\n  <tr>\n    <td></td>\n    <td>3</td>\n    <td>The length of the blackboard is given</td>\n  </tr>\n  <tr>\n    <td>..<br>##</td>\n    <td></td>\n    <td>Output a search query</td>\n  </tr>\n  <tr>\n    <td></td>\n    <td>F</td>\n    <td>The sub-blackboard does not exist</td>\n  </tr>\n  <tr>\n    <td>.<br>.</td>\n    <td></td>\n    <td>Output a search query</td>\n  </tr>\n  <tr>\n    <td></td>\n    <td>T</td>\n    <td>The sub-blackboard exists</td>\n  </tr>\n  <tr>\n    <td>..<br>..</td>\n    <td></td>\n    <td>Output a search query</td>\n  </tr>\n  <tr>\n    <td></td>\n    <td>F</td>\n    <td>The sub-blackboard does not exist</td>\n  </tr>\n  <tr>\n    <td>.#<br>..</td>\n    <td></td>\n    <td>Output a search query</td>\n  </tr>\n  <tr>\n    <td></td>\n    <td>T</td>\n    <td>The sub-blackboard exists</td>\n  </tr>\n  <tr>\n    <td>.#.<br>...</td>\n    <td></td>\n    <td>Output a search query</td>\n  </tr>\n  <tr>\n    <td></td>\n    <td>end</td>\n    <td>Exit your program because the above sub-blackboard equals to the whole blackboard. </td>\n  </tr>\n</tbody></table>\n</pre>\n</section>\n</div>\n\n</span>"},"endpoint":"https://atcoder.jp/contests/kupc2016/tasks/kupc2016_d"}