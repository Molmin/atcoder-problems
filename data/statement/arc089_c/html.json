{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>900</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>シカのAtCoDeerくんは次のような条件を満たす有向グラフを欲しがっています。</p>\n<ul>\n<li>頂点数<var>N</var>は <var>300</var> 以下</li>\n<li>自己ループや多重辺があってはいけない</li>\n<li>頂点には <var>1</var> から <var>N</var> の番号が付けられている</li>\n<li>各辺には <var>0</var> 以上 <var>100</var> 以下の整数値の重み、もしくは、<code>X</code> または <code>Y</code> というラベルが付けられている</li>\n<li>全ての <var>1 ≤ x ≤ A</var>, <var>1 ≤ y ≤ B</var>, を満たす整数の組 <var>(x,y)</var> に対し、\n    ラベル <code>X</code> が付けられた辺の重みを <var>x</var> に、 <code>Y</code> が付けられた辺の重みを <var>y</var> に書き換えたグラフの 頂点 <var>S</var> から <var>T</var> への最短距離は <var>d_{x,y}</var></li>\n</ul>\n<p>AtCoDeerくんのためにこのようなグラフ(と <var>S</var> と <var>T</var> の組)をひとつ構成してください。条件を満たすグラフが存在しない場合はそれを指摘してください。\n出力の方法については出力の欄を参照してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1</var> <var>≤</var> <var>A,B</var> <var>≤</var> <var>10</var></li>\n<li><var>1</var> <var>≤</var> <var>d_{x,y}</var> <var>≤</var> <var>100</var> (<var>1</var> <var>≤</var> <var>x</var> <var>≤</var> <var>A</var>, <var>1</var> <var>≤</var> <var>y</var> <var>≤</var> <var>B</var>)</li>\n<li>入力は全て整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>A</var> <var>B</var>\n<var>d_{1,1}</var> <var>d_{1,2}</var> <var>..</var> <var>d_{1,B}</var>\n<var>d_{2,1}</var> <var>d_{2,2}</var> <var>..</var> <var>d_{2,B}</var>\n<var>:</var>\n<var>d_{A,1}</var> <var>d_{A,2}</var> <var>..</var> <var>d_{A,B}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>条件を満たすグラフが存在しない場合は <code>Impossible</code> と出力せよ。</p>\n<p>条件を満たすグラフが存在する場合、 <var>1</var> 行目に <code>Possible</code> と出力せよ。\n<var>2</var>行目以降に 構成したグラフを以下の形式で標準出力に出力せよ。</p>\n<pre><var>N</var> <var>M</var>\n<var>u_1</var> <var>v_1</var> <var>c_1</var>\n<var>u_2</var> <var>v_2</var> <var>c_2</var>\n:\n<var>u_M</var> <var>v_M</var> <var>c_M</var>\n<var>S</var> <var>T</var>\n</pre>\n\n<p>ただし、 <var>M</var> は出力するグラフの辺数、 <var>u_i,v_i,c_i</var> はグラフの辺を表す。\nこれは頂点 <var>u_i</var> から 頂点 <var>v_i</var> に 重み、あるいはラベル <var>c_i</var> の有向辺があることを意味する。\n入出力例も参考にせよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>2 3\n1 2 2\n1 2 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>Possible\n3 4\n1 2 X\n2 3 1\n3 2 Y\n1 3 Y\n1 3\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>1 3\n100 50 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>Impossible\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>900</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>AtCoDeer the deer wants a directed graph that satisfies the following conditions:</p>\n<ul>\n<li>The number of vertices, <var>N</var>, is at most <var>300</var>.</li>\n<li>There must not be self-loops or multiple edges.</li>\n<li>The vertices are numbered from <var>1</var> through <var>N</var>.</li>\n<li>Each edge has either an integer weight between <var>0</var> and <var>100</var> (inclusive), or a label <code>X</code> or <code>Y</code>.</li>\n<li>For every pair of two integers <var>(x,y)</var> such that <var>1 ≤ x ≤ A</var>, <var>1 ≤ y ≤ B</var>,\n    the shortest distance from Vertex <var>S</var> to Vertex <var>T</var> in the graph where the edges labeled <code>X</code> have the weight <var>x</var> and the edges labeled <code>Y</code> have the weight <var>y</var>, is <var>d_{x,y}</var>.</li>\n</ul>\n<p>Construct such a graph (and a pair of <var>S</var> and <var>T</var>) for him, or report that it does not exist.\nRefer to Output section for output format.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1</var> <var>≤</var> <var>A,B</var> <var>≤</var> <var>10</var></li>\n<li><var>1</var> <var>≤</var> <var>d_{x,y}</var> <var>≤</var> <var>100</var> (<var>1</var> <var>≤</var> <var>x</var> <var>≤</var> <var>A</var>, <var>1</var> <var>≤</var> <var>y</var> <var>≤</var> <var>B</var>)</li>\n<li>All input values are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>A</var> <var>B</var>\n<var>d_{1,1}</var> <var>d_{1,2}</var> <var>..</var> <var>d_{1,B}</var>\n<var>d_{2,1}</var> <var>d_{2,2}</var> <var>..</var> <var>d_{2,B}</var>\n<var>:</var>\n<var>d_{A,1}</var> <var>d_{A,2}</var> <var>..</var> <var>d_{A,B}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If no graph satisfies the condition, print <code>Impossible</code>.</p>\n<p>If there exists a graph that satisfies the condition, print <code>Possible</code> in the first line.\nThen, in the subsequent lines, print the constructed graph in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>u_1</var> <var>v_1</var> <var>c_1</var>\n<var>u_2</var> <var>v_2</var> <var>c_2</var>\n:\n<var>u_M</var> <var>v_M</var> <var>c_M</var>\n<var>S</var> <var>T</var>\n</pre>\n\n<p>Here, <var>M</var> is the number of the edges, and <var>u_i</var>, <var>v_i</var>, <var>c_i</var> represent edges as follows: there is an edge from Vertex <var>u_i</var> to Vertex <var>v_i</var> whose weight or label is <var>c_i</var>.</p>\n<p>Also refer to Sample Outputs.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>2 3\n1 2 2\n1 2 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>Possible\n3 4\n1 2 X\n2 3 1\n3 2 Y\n1 3 Y\n1 3\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>1 3\n100 50 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>Impossible\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc089/tasks/arc089_c"}