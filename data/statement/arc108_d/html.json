{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>600</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>整数 <var>N</var> と <var>4</var> つの文字 <var>c_{\\mathrm{AA}},c_{\\mathrm{AB}},c_{\\mathrm{BA}},c_{\\mathrm{BB}}</var> が与えられます。\nここで、与えられる <var>4</var> つの文字はいずれも <code>A</code> か <code>B</code> であることが保証されます。</p>\n<p>すぬけ君は文字列 <var>s</var> を持っています。\n<var>s</var> ははじめ <code>AB</code> です。</p>\n<p><var>s</var> の長さを <var>|s|</var> と書くことにします。\nすぬけ君は以下の <var>4</var> 種類の操作を任意の順序で <var>0</var> 回以上行うことができます。</p>\n<ol>\n<li><var>1 \\leq i &lt; |s|, s_{i}</var> = <code>A</code>, <var>s_{i+1}</var> = <code>A</code> なる <var>i</var> を選んで、<var>s</var> の <var>i</var> 文字目と <var>i+1</var> 文字目の間に <var>c_{\\mathrm{AA}}</var> を挿入する。</li>\n<li><var>1 \\leq i &lt; |s|,s_{i}</var> = <code>A</code>, <var>s_{i+1}</var> = <code>B</code> なる <var>i</var> を選んで、<var>s</var> の <var>i</var> 文字目と <var>i+1</var> 文字目の間に <var>c_{\\mathrm{AB}}</var> を挿入する。</li>\n<li><var>1 \\leq i &lt; |s|,s_{i}</var> = <code>B</code>, <var>s_{i+1}</var> = <code>A</code> なる <var>i</var> を選んで、<var>s</var> の <var>i</var> 文字目と <var>i+1</var> 文字目の間に <var>c_{\\mathrm{BA}}</var> を挿入する。</li>\n<li><var>1 \\leq i &lt; |s|,s_{i}</var> = <code>B</code>, <var>s_{i+1}</var> = <code>B</code> なる <var>i</var> を選んで、<var>s</var> の  <var>i</var> 文字目と <var>i+1</var> 文字目の間に <var>c_{\\mathrm{BB}}</var> を挿入する。</li>\n</ol>\n<p><var>s</var> の長さが <var>N</var> になるまで操作を行ったあとの <var>s</var> としてありうる文字列の個数を <var>10^9+7</var> で割ったあまりを求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 1000</var></li>\n<li><var>c_{\\mathrm{AA}},c_{\\mathrm{AB}},c_{\\mathrm{BA}},c_{\\mathrm{BB}}</var> は <code>A</code> か <code>B</code></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>c_{\\mathrm{AA}}</var>\n<var>c_{\\mathrm{AB}}</var>\n<var>c_{\\mathrm{BA}}</var>\n<var>c_{\\mathrm{BB}}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>s</var> の長さが <var>N</var> になるまで操作を行ったあとの <var>s</var> としてありうる文字列の個数を <var>10^9+7</var> で割ったあまりを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>4\nA\nB\nB\nA\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>2\n</pre>\n\n<ul>\n<li><var>s</var> としてありうる文字列は <code>ABAB</code> と <code>ABBB</code> の <var>2</var> 通りです。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>1000\nB\nB\nB\nB\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>1\n</pre>\n\n<ul>\n<li><var>s</var> としてありうる文字列は <var>1</var> 通りです。</li>\n</ul></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>600</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Given are an integer <var>N</var> and four characters <var>c_{\\mathrm{AA}}</var>, <var>c_{\\mathrm{AB}}</var>, <var>c_{\\mathrm{BA}}</var>, and <var>c_{\\mathrm{BB}}</var>.\nHere, it is guaranteed that each of those four characters is <code>A</code> or <code>B</code>.</p>\n<p>Snuke has a string <var>s</var>, which is initially <code>AB</code>.</p>\n<p>Let <var>|s|</var> denote the length of <var>s</var>.\nSnuke can do the four kinds of operations below zero or more times in any order:</p>\n<ol>\n<li>Choose <var>i</var> such that <var>1 \\leq i &lt; |s|</var>, <var>s_{i}</var> = <code>A</code>, <var>s_{i+1}</var> = <code>A</code> and insert <var>c_{\\mathrm{AA}}</var> between the <var>i</var>-th and <var>(i+1)</var>-th characters of <var>s</var>.</li>\n<li>Choose <var>i</var> such that <var>1 \\leq i &lt; |s|</var>, <var>s_{i}</var> = <code>A</code>, <var>s_{i+1}</var> = <code>B</code> and insert <var>c_{\\mathrm{AB}}</var> between the <var>i</var>-th and <var>(i+1)</var>-th characters of <var>s</var>.</li>\n<li>Choose <var>i</var> such that <var>1 \\leq i &lt; |s|</var>, <var>s_{i}</var> = <code>B</code>, <var>s_{i+1}</var> = <code>A</code> and insert <var>c_{\\mathrm{BA}}</var> between the <var>i</var>-th and <var>(i+1)</var>-th characters of <var>s</var>.</li>\n<li>Choose <var>i</var> such that <var>1 \\leq i &lt; |s|</var>, <var>s_{i}</var> = <code>B</code>, <var>s_{i+1}</var> = <code>B</code> and insert <var>c_{\\mathrm{BB}}</var> between the <var>i</var>-th and <var>(i+1)</var>-th characters of <var>s</var>.</li>\n</ol>\n<p>Find the number, modulo <var>(10^9+7)</var>, of strings that can be <var>s</var> when Snuke has done the operations so that the length of <var>s</var> becomes <var>N</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 1000</var></li>\n<li>Each of <var>c_{\\mathrm{AA}}</var>, <var>c_{\\mathrm{AB}}</var>, <var>c_{\\mathrm{BA}}</var>, and <var>c_{\\mathrm{BB}}</var> is <code>A</code> or <code>B</code>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>c_{\\mathrm{AA}}</var>\n<var>c_{\\mathrm{AB}}</var>\n<var>c_{\\mathrm{BA}}</var>\n<var>c_{\\mathrm{BB}}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the number, modulo <var>(10^9+7)</var>, of strings that can be <var>s</var> when Snuke has done the operations so that the length of <var>s</var> becomes <var>N</var>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>4\nA\nB\nB\nA\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>2\n</pre>\n\n<ul>\n<li>There are two strings that can be <var>s</var> when Snuke is done: <code>ABAB</code> and <code>ABBB</code>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>1000\nB\nB\nB\nB\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>1\n</pre>\n\n<ul>\n<li>There is just one string that can be <var>s</var> when Snuke is done.</li>\n</ul></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc108/tasks/arc108_d"}