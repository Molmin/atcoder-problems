{"html":{"ja":"<span class=\"lang-ja\">\n\n<div class=\"part\">\n<section>\n<h3>ストーリー</h3><p>ある会社では、現在働きやすい環境づくりを目指している。そこで新入社員が入社する 4 月から、社内の掃除を毎週行うことにした。\nしかしながら、掃除当番は簡単に決められるものではない。\nたとえば 1 人に負担をかけすぎてはならないことや、まだ仕事に慣れていない新入社員の負担は特に少なくしなければならないことなど、様々な制約がある。\nまた、掃除当番の決め方は「X さんの次は Y さんか Z さん」のように覚えやすいものでなければならない。\nできるだけ制約通りになるように、掃除当番の決め方を最適化せよ。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>ある会社には <var>N</var> 人の社員がおり、それぞれ <var>0</var> から <var>N-1</var> までの番号が付けられている。\nあなたは、各社員 <var>i</var> <var>(0 \\leq i \\leq N-1)</var> について整数 <var>a_i</var> と <var>b_i</var> を決め (<var>a_i=b_i</var> でも構わない)、以下の規則で各週の掃除当番を割り当てることにした。</p>\n<ul>\n<li>最初の週は、社員 <var>0</var> が掃除当番となる。</li>\n<li>それ以降の週については、前週の掃除当番を社員 <var>x</var> とし、前週が終わった時点で社員 <var>x</var> が掃除当番に <var>t</var> 回割り当てられたとして、今週の掃除当番は次のように決まる。<ul>\n<li><var>t</var> が奇数の場合: 社員 <var>a_x</var></li>\n<li><var>t</var> が偶数の場合: 社員 <var>b_x</var></li>\n</ul>\n</li>\n</ul>\n<p>各 <var>i</var> <var>(0 \\leq i \\leq N-1)</var> について、今後 <var>L = 500\\,000</var> 週間に社員 <var>i</var> に掃除当番を割り当てる回数の目標値 <var>T_i</var> が与えられる。\n実際に社員 <var>i</var> に割り当てられる掃除当番の回数を <var>t_i</var> とするとき、誤差 <var>\\left|t_0 - T_0\\right| + \\left|t_1 - T_1\\right| + \\cdots + \\left|t_{N-1} - T_{N-1}\\right|</var> をできるだけ小さくせよ。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>得点</h3><p>出力した掃除当番の決め方における誤差を <var>E</var> とするとき、<var>10^6-E</var> 点が得られる。\nここで、得点が負の値にならないことが保証される。</p>\n<p>合計で 150 個のテストケースがあり、各テストケースの得点の合計が提出の得点となる。\n一つ以上のケースで不正な出力や制限時間超過をした場合、提出全体の判定が <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"不正解\">WA</span> や <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"実行時間制限超過\">TLE</span> となる。\nコンテスト時間中に得た最高得点で最終順位が決定され、コンテスト終了後のシステムテストは行われない。\n同じ得点を複数の参加者が得た場合、提出時刻に関わらず同じ順位となる。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>L</var>\n<var>T_0</var> <var>T_1</var> <var>\\cdots</var> <var>T_{N-1}</var>\n</pre>\n<ul>\n<li>全てのテストケースで、社員の数 <var>N</var> は <var>100</var> で固定である。</li>\n<li>全てのテストケースで、週数 <var>L</var> は <var>500\\,000</var> で固定である。</li>\n<li><var>0 \\leq T_i \\leq 10\\,000</var> を満たす。</li>\n<li><var>T_0 + T_1 + \\cdots + T_{N-1} = L</var> を満たす。</li>\n<li>入力はすべて整数である。</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>以下の形式で標準出力に出力せよ。</p>\n<pre><var>a_0</var> <var>b_0</var>\n<var>a_1</var> <var>b_1</var>\n<var>\\vdots</var>\n<var>a_{N-1}</var> <var>b_{N-1}</var>\n</pre>\n<p>ここで <var>0 \\leq a_i \\leq N-1</var> および <var>0 \\leq b_i \\leq N-1</var> を満たさない <var>i</var> <var>(0 \\leq i \\leq N-1)</var> が存在する場合、<span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"不正解\">WA</span> と判定される。</p>\n<p><a href=\"https://img.atcoder.jp/ahc044/PnJFT8lu.html?lang=ja&amp;seed=0&amp;output=sample\">例を見る</a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>入力生成方法</h3><p><var>L</var> 以上 <var>U</var> 以下の整数値を一様ランダムに生成する関数を <var>\\mathrm{rand}(L, U)</var> と表すとき、入力生成方法は次のようになる。</p>\n<ol>\n<li>各 <var>0 \\leq i \\leq N-2</var> について、<var>T_i</var> の値を <var>T_i = \\mathrm{rand}(0, 10000)</var> により生成する。</li>\n<li>総和 <var>S=T_0+\\cdots+T_{N-2}</var> が <var>0\\leq L-S\\leq 10000</var> を満たすならば <var>T_{N-1}=L-S</var> として入力を確定させる。そうでなければ、1. に戻って生成をやり直す。</li>\n</ol>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>ツール(入力ジェネレータ・ビジュアライザ)</h3><ul>\n<li><a href=\"https://img.atcoder.jp/ahc044/PnJFT8lu.html?lang=ja\">Web版</a>: ローカル版より高性能でアニメーション表示が可能です。</li>\n<li><a href=\"https://img.atcoder.jp/ahc044/PnJFT8lu.zip\">ローカル版</a>: 使用するには<a href=\"https://www.rust-lang.org/ja\">Rust言語</a>のコンパイル環境をご用意下さい。<ul>\n<li><a href=\"https://img.atcoder.jp/ahc044/PnJFT8lu_windows.zip\">Windows用のコンパイル済みバイナリ</a>: Rust言語の環境構築が面倒な方は代わりにこちらをご利用下さい。</li>\n</ul>\n</li>\n</ul>\n<p>コンテスト期間中に、ビジュアライズ結果の共有や、解法・考察に関する言及は禁止されています。ご注意下さい。</p></section>\n</div>\n</div>\n</span>","en":"<span class=\"lang-en\">\n\n<div class=\"part\">\n<section>\n<h3>Story</h3><p>A company is currently aiming to create a comfortable working environment. It has decided to clean the office every week starting this April, when new employees join the company.\nHowever, assigning cleaning duties is not easy. There are various constraints, for example, the duty should not be concentrated on one person, and the burden on new employees, who are not yet accustomed to the work, should be especially low.\nAlso, the assignment should be easy to remember, like \"after employee X, the next must be employee Y or Z.\"\nCreate a cleaning plan that follows the constraints as closely as possible.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There are <var>N</var> employees in a company, numbered from <var>0</var> to <var>N-1</var>.\nFor each employee <var>i</var> <var>(0 \\leq i \\leq N-1)</var>, you must determine two integers <var>a_i</var> and <var>b_i</var> (<var>a_i</var> and <var>b_i</var> may be equal).\nThen, the cleaning plan for each week is created in the following way:</p>\n<ul>\n<li>In the first week, employee <var>0</var> will do the cleaning.</li>\n<li>From the second week onward, let employee <var>x</var> be the one who did the cleaning last week, and let <var>t</var> be the number of weeks in which employee <var>x</var> had been assigned as the cleaner by the end of last week. Then, this week's cleaning duty is determined as follows:<ul>\n<li>When <var>t</var> is odd: employee <var>a_x</var></li>\n<li>When <var>t</var> is even: employee <var>b_x</var></li>\n</ul>\n</li>\n</ul>\n<p>For each <var>i</var> <var>(0 \\leq i \\leq N-1)</var>, a target number of times <var>T_i</var> is given as the number of times employee <var>i</var> should be assigned cleaning duty in the next <var>L = 500\\,000</var> weeks.\nLet <var>t_i</var> be the actual number of times employee <var>i</var> is assigned cleaning duty.\nCreate a cleaning plan that makes the error defined by <var>\\left|t_0 - T_0\\right| + \\left|t_1 - T_1\\right| + \\cdots + \\left|t_{N-1} - T_{N-1}\\right|</var> as small as possible.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Scoring</h3><p>Let <var>E</var> be the error in the output cleaning plan. You will obtain the score of <var>10^6 - E</var>, which is guaranteed to be non-negative.</p>\n<p>There are 150 testcases, and the score of a submission is the total score for each testcase. If your submission produces an illegal output or exceeds the time limit for some testcases, the submission itself will be judged as <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Wrong Answer\">WA</span> or <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Time Limit Exceeded\">TLE</span>, and the score of the submission will be zero. The highest score obtained during the contest will determine the final ranking, and there will be no system test after the contest. If more than one participant gets the same score, they will be ranked in the same place regardless of the submission time.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>L</var>\n<var>T_0</var> <var>T_1</var> <var>\\cdots</var> <var>T_{N-1}</var>\n</pre>\n<ul>\n<li>The number of employees <var>N</var> is fixed to <var>100</var> across all testcases.</li>\n<li>The number of weeks <var>L</var> is fixed to <var>500\\,000</var> across all testcases.</li>\n<li><var>0 \\leq T_i \\leq 10\\,000</var>.</li>\n<li><var>T_0 + T_1 + \\cdots + T_{N-1} = L</var>.</li>\n<li>Given values are all integers.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Output to Standard Output in the following format:</p>\n<pre><var>a_0</var> <var>b_0</var>\n<var>a_1</var> <var>b_1</var>\n<var>\\vdots</var>\n<var>a_{N-1}</var> <var>b_{N-1}</var>\n</pre>\n<p>Here, if there exists an <var>i</var> <var>(0 \\leq i \\leq N-1)</var> that does not satisfy <var>0 \\leq a_i \\leq N-1</var> or <var>0 \\leq b_i \\leq N-1</var>, the output will be judged as <span class=\"label label-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Wrong Answer\">WA</span>.</p>\n<p><a href=\"https://img.atcoder.jp/ahc044/PnJFT8lu.html?lang=en&amp;seed=0&amp;output=sample\">Show example</a></p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Input Generation</h3><p>Let <var>\\mathrm{rand}(L, U)</var> be the function that generates a uniform random integer between <var>L</var> and <var>U</var>, inclusive. The input will be generated in the following algorithm:</p>\n<ol>\n<li>For each <var>i</var> <var>(0 \\leq i \\leq N-2)</var>, generate <var>T_i</var> with <var>\\mathrm{rand}(0, 10000)</var>.</li>\n<li>If the sum <var>S = T_0 + \\cdots + T_{N-2}</var> satisfies <var>0 \\leq L - S \\leq 10000</var>, set <var>T_{N-1} = L - S</var> and finalize the input. Otherwise, retry step 1.</li>\n</ol>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Tools (Input generator and visualizer)</h3><ul>\n<li><a href=\"https://img.atcoder.jp/ahc044/PnJFT8lu.html?lang=en\">Web version</a>: This is more powerful than the local version providing animations.</li>\n<li><a href=\"https://img.atcoder.jp/ahc044/PnJFT8lu.zip\">Local version</a>: You need a compilation environment of <a href=\"https://www.rust-lang.org/\">Rust language</a>.<ul>\n<li><a href=\"https://img.atcoder.jp/ahc044/PnJFT8lu_windows.zip\">Pre-compiled binary for Windows</a>: If you are not familiar with the Rust language environment, please use this instead.</li>\n</ul>\n</li>\n</ul>\n<p>Please be aware that sharing visualization results or discussing solutions/ideas during the contest is prohibited.</p></section>\n</div>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/ahc044/tasks/ahc044_a"}