{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>900</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>すぬけくんはカード <var>1</var> からカード <var>n</var> の <var>n</var> 種類のカードを使うゲームで遊んでいます。\nこのゲームには、カードパックが <var>m</var> 種類存在し、<var>i</var> 種類目のカードパックにはカード <var>j</var> が <var>s_{i,j}</var> 枚含まれています。\nどのカードパックにもカードが <var>1</var> 枚以上含まれています。</p>\n<p>最初、すぬけくんはカード <var>j</var> を <var>c_j</var> 枚持っています（合計で <var>1</var> 枚以上のカードを持っていることが保証されます）。</p>\n<p>すぬけくんは、次の操作を好きな順番で好きな回数行うことができます。</p>\n<ul>\n<li>カードパックをもらう：<var>i=1,\\dots,m</var> のうちひとつを選ぶ。<var>i</var> 種類目のパックに含まれるカードをすべて手に入れる。</li>\n<li>カードを交換する：<var>j=1,\\dots,n</var> のうちひとつを選ぶ。カード <var>j</var> を <var>2j</var> 枚捨てて、カード <var>((j \\text{ mod } n) + 1)</var> を <var>1</var> 枚手に入れる。（カード <var>j</var> を <var>2j</var> 枚以上持っていなければならない。）</li>\n</ul>\n<p>すぬけくんは持っているカードの総数をできるだけ少なくしたいです。すぬけくんが達成できるカードの総数の最小値を求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\le n \\le 16</var></li>\n<li><var>1 \\le m \\le 50</var></li>\n<li><var>0 \\le s_{i,j}, c_j \\lt 2j</var></li>\n<li><var>c_1+\\dots +c_n&gt;0</var></li>\n<li><var>s_{i,1}+\\dots +s_{i,n}&gt;0</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>n</var> <var>m</var>\n<var>c_1</var> <var>\\dots</var> <var>c_n</var>\n<var>s_{1,1}</var> <var>\\dots</var> <var>s_{1,n}</var>\n<var>\\vdots</var>\n<var>s_{m,1}</var> <var>\\dots</var> <var>s_{m,n}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>すぬけくんが達成できるカードの総数の最小値を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 1\n0 3 5\n0 1 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1\n</pre>\n\n<p>カード <var>1</var> を <var>a_1</var> 枚、カード <var>2</var> を <var>a_2</var> 枚、カード <var>3</var> を <var>a_3</var> 枚持っていることを <var>(a_1, a_2, a_3)</var> と書くことにします。\n以下のように操作をすると、カードの総数を <var>1</var> 枚にすることができます。</p>\n<ul>\n<li><var>1</var> 種類目のカードパックをもらう。<var>(0,4,5)</var> となる。</li>\n<li><var>j=2</var> を選んでカードを交換する。<var>(0,0,6)</var> となる。</li>\n<li><var>j=3</var> を選んでカードを交換する。<var>(1,0,0)</var> となる。</li>\n</ul>\n<p>カードの総数を <var>0</var> 枚にすることはできないため、これが最小です。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5 2\n0 0 1 7 0\n0 3 2 0 0\n1 0 4 0 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>2\n</pre>\n\n<p><var>2</var> 種類目のカードパックを <var>2</var> パックもらったあと、<var>1</var> 種類目のカードパックをもらい、その後何度かカードを交換すると、\nカード <var>4</var> とカード <var>5</var> を <var>1</var> 枚ずつ持っている状態が作れます。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>12 10\n0 2 4 4 1 5 6 8 0 9 18 19\n1 2 4 3 4 0 6 10 9 18 5 7\n0 3 0 1 1 4 11 13 9 19 9 10\n1 2 4 1 5 8 1 6 15 0 11 1\n0 2 0 6 9 3 13 14 16 9 14 14\n1 3 2 5 6 1 9 7 1 7 6 22\n0 0 4 5 2 3 8 3 13 14 17 4\n0 3 3 4 0 7 0 9 14 2 17 14\n0 2 4 1 3 3 3 14 17 6 15 13\n0 0 1 0 1 0 4 5 9 4 17 17\n1 2 1 3 5 7 0 13 7 6 1 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>9\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>900</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Snuke is playing a game using <var>n</var> kinds of cards called Card <var>1</var> through Card <var>n</var>.\nThere are <var>m</var> kinds of card packs available in this game; the <var>i</var>-th pack contains <var>s_{i,j}</var> copies of Card <var>j</var>.\nEvery pack contains at least one card.</p>\n<p>Initially, Snuke has <var>c_j</var> copies of Card <var>j</var> (it is guaranteed that he has at least one card in total).</p>\n<p>He can do the following operations any number of times in any order:</p>\n<ul>\n<li>Get a card pack: Choose <var>i=1</var>, <var>\\dots</var>, or <var>m</var> and get all cards contained in the <var>i</var>-th pack.</li>\n<li>Exchange cards: Choose <var>j=1</var>, <var>\\dots</var>, or <var>n</var>, discard <var>2j</var> copies of Card <var>j</var>, and get one copy of Card <var>((j \\text{ mod } n) + 1)</var>. (He must have at least <var>2j</var> copies of Card <var>j</var>.)</li>\n</ul>\n<p>Snuke wants to have as few cards as possible in total. Find the minimum number of cards that Snuke can end up with.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\le n \\le 16</var></li>\n<li><var>1 \\le m \\le 50</var></li>\n<li><var>0 \\le s_{i,j}, c_j \\lt 2j</var></li>\n<li><var>c_1+\\dots +c_n&gt;0</var></li>\n<li><var>s_{i,1}+\\dots +s_{i,n}&gt;0</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>n</var> <var>m</var>\n<var>c_1</var> <var>\\dots</var> <var>c_n</var>\n<var>s_{1,1}</var> <var>\\dots</var> <var>s_{1,n}</var>\n<var>\\vdots</var>\n<var>s_{m,1}</var> <var>\\dots</var> <var>s_{m,n}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the minimum number of cards that Snuke can end up with.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 1\n0 3 5\n0 1 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1\n</pre>\n\n<p>Let <var>(a_1, a_2, a_3)</var> denote the fact that Snuke has <var>a_1</var> copies of Card <var>1</var>, <var>a_2</var> copies of Card <var>2</var>, and <var>a_3</var> copies of Card <var>3</var>.\nThe following sequence of operations leaves Snuke with one card:</p>\n<ul>\n<li>get the <var>1</var>-st card pack, which results in <var>(0,4,5)</var>;</li>\n<li>exchange cards with <var>j=2</var>, which results in <var>(0,0,6)</var>;</li>\n<li>exchange cards with <var>j=3</var>, which results in <var>(1,0,0)</var>.</li>\n</ul>\n<p>It is impossible to end up with zero cards, so this is the minimum possible number.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5 2\n0 0 1 7 0\n0 3 2 0 0\n1 0 4 0 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>2\n</pre>\n\n<p>By getting two packs of the second kind and one pack of the first kind, and then exchanging cards some number of times, Snuke can end up with one copy of Card <var>4</var> and one copy of Card <var>5</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>12 10\n0 2 4 4 1 5 6 8 0 9 18 19\n1 2 4 3 4 0 6 10 9 18 5 7\n0 3 0 1 1 4 11 13 9 19 9 10\n1 2 4 1 5 8 1 6 15 0 11 1\n0 2 0 6 9 3 13 14 16 9 14 14\n1 3 2 5 6 1 9 7 1 7 6 22\n0 0 4 5 2 3 8 3 13 14 17 4\n0 3 3 4 0 7 0 9 14 2 17 14\n0 2 4 1 3 3 3 14 17 6 15 13\n0 0 1 0 1 0 4 5 9 4 17 17\n1 2 1 3 5 7 0 13 7 6 1 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>9\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc112/tasks/arc112_f"}