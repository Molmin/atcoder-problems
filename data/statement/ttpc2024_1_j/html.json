{"html":{"en":"<span class=\"lang-en\">\n<p>Score: <var>100</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given positive integers <var>H</var> and <var>W</var>. You aim to draw an <var>H</var>-row by <var>W</var>-column grid on the coordinate plane using several \"U-shapes.\"</p>\n<p>To draw one U-shape, perform the following operation:</p>\n<ul>\n<li>Choose integers <var>1 \\le x \\le H</var> and <var>1 \\le y \\le W</var>.</li>\n<li>From the following four line segments, select any three distinct ones:<ul>\n<li>The line segment connecting <var>(x-1, y-1)</var> and <var>(x-1, y)</var></li>\n<li>The line segment connecting <var>(x-1, y-1)</var> and <var>(x, y-1)</var></li>\n<li>The line segment connecting <var>(x, y)</var> and <var>(x-1, y)</var></li>\n<li>The line segment connecting <var>(x, y)</var> and <var>(x, y-1)</var></li>\n</ul>\n</li>\n<li>Draw the selected three line segments on the coordinate plane.</li>\n</ul>\n<p>However, the line segments you draw must not share any points (other than endpoints) with any line segments drawn previously.</p>\n<p>Is it possible to draw all the length-<var>1</var> line segments connecting grid points with <var>0 \\le x \\le H</var> and <var>0 \\le y \\le W</var> by repeating this operation? If possible, provide an example.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li>All input values are integers.</li>\n<li><var>1 \\le H, W \\le 1000</var></li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Partial Score</h3><p><var>10</var> points will be awarded for passing the testset satisfying the additional constraint <var>H,W\\le 5</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>H</var> <var>W</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If it is impossible to draw the grid by repeating the operation, output <code>No</code>.</p>\n<p>If it is possible, output such an operation sequence in the following format:</p>\n<pre>Yes\n<var>S_1</var>\n<var>\\vdots</var>\n<var>S_H</var>\n</pre>\n<p>Here, <var>S_1, \\dots, S_H</var> are strings of length <var>W</var>, and the <var>j</var>-th character of <var>S_i</var> (<var>1 \\le i \\le H</var>, <var>1 \\le j \\le W</var>) is defined as follows:</p>\n<ul>\n<li>If there is no operation with <var>(x, y) = (i, j)</var>, the <var>j</var>-th character of <var>S_i</var> is <code>.</code>.</li>\n<li>Otherwise, there is exactly one operation with <var>(x, y) = (i, j)</var>. In that operation:<ul>\n<li>If the three selected line segments are those <em>excluding</em> \"the line segment connecting <var>(x-1, y-1)</var> and <var>(x-1, y)</var>,\" then the <var>j</var>-th character of <var>S_i</var> is <code>v</code>.</li>\n<li>If the three selected line segments are those <em>excluding</em> \"the line segment connecting <var>(x-1, y-1)</var> and <var>(x, y-1)</var>,\" then the <var>j</var>-th character of <var>S_i</var> is <code>&gt;</code>.</li>\n<li>If the three selected line segments are those <em>excluding</em> \"the line segment connecting <var>(x, y)</var> and <var>(x-1, y)</var>,\" then the <var>j</var>-th character of <var>S_i</var> is <code>&lt;</code>.</li>\n<li>If the three selected line segments are those <em>excluding</em> \"the line segment connecting <var>(x, y)</var> and <var>(x, y-1)</var>,\" then the <var>j</var>-th character of <var>S_i</var> is <code>^</code>.</li>\n</ul>\n</li>\n</ul>\n<p>Note that the judge is case-insensitive for <code>Yes</code> and <code>No</code>.</p>\n<p>Refer to the sample inputs and the visualizer for further clarification.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Visualizer</h3><p>You can use the visualizer via the following link:</p>\n<p><a href=\"https://img.atcoder.jp/ttpc2024_1/grid_construction_visualizer_9cdb863ae8b195d0a47d8d6e2c9e05cd.html\">https://img.atcoder.jp/ttpc2024_1/grid_construction_visualizer_9cdb863ae8b195d0a47d8d6e2c9e05cd.html</a></p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>Yes\n&lt;&lt;^\nv.^\nv&gt;&gt;\n</pre>\n<p>As shown in the figure, you can draw a <var>3 \\times 3</var> grid by drawing U-shapes. Note that no U-shape is drawn at the location corresponding to the center cell. (For clarity, the U-shapes are colored, but this is irrelevant to the problem.)</p>\n<p><img src=\"https://img.atcoder.jp/ttpc2024_1/5c8124eb7c9068ad7af0603c6077344b.svg\" class=\"img-responsive center-block\" style=\"max-width: 100%; min-width: 240px;\"></p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>4 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>No\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>4 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>No\n</pre></section>\n</div>\n</span>","ja":"<span class=\"lang-ja\">\n<p>配点 : <var>100</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>正整数 <var>H,W</var> が与えられます。あなたは座標平面にいくつかの「コの字」を用いて <var>H</var> 行 <var>W</var> 列のグリッドを描こうとしています。</p>\n<p><var>1</var> つのコの字を描くには、次の操作を行います。</p>\n<ul>\n<li><var>1\\le x\\le H, 1\\le y\\le W</var> なる整数 <var>x,y</var> を選ぶ。</li>\n<li>次の <var>4</var> 本の線分のうち、異なる <var>3</var> 本を選ぶ。<ul>\n<li><var>(x-1,y-1)</var> と <var>(x-1,y)</var> を端点に持つ線分</li>\n<li><var>(x-1,y-1)</var> と <var>(x,y-1)</var> を端点に持つ線分</li>\n<li><var>(x,y)</var> と <var>(x-1,y)</var> を端点に持つ線分</li>\n<li><var>(x,y)</var> と <var>(x,y-1)</var> を端点に持つ線分</li>\n</ul>\n</li>\n<li>選んだ <var>3</var> 本の線分を座標平面に描く。</li>\n</ul>\n<p>ただし、描いた線分は、それまでに描いた線分と端点以外で共有点を持ってはいけません。</p>\n<p><var>0 \\le x \\le H, 0 \\le y \\le W</var> の範囲にある格子点同士を結ぶ長さ <var>1</var> の線分すべてを、この操作を繰り返すことで描くことは可能でしょうか？可能である場合は一例を示してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li>入力はすべて整数</li>\n<li><var>1\\le H,W\\le 1000</var></li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>部分点</h3><p>追加の制約 <var>H, W \\le 5</var> を満たすデータセットに正解した場合は <var>10</var> 点が与えられる。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で与えられる。</p>\n<pre><var>H</var> <var>W</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>操作を繰り返してグリッドを描くことが不可能である場合は、<code>No</code> を出力せよ。</p>\n<p>操作を繰り返してグリッドを描くことが可能である場合は、そのような操作列を以下の形式で出力せよ。</p>\n<pre>Yes\n<var>S_1</var>\n<var>\\vdots</var>\n<var>S_H</var>\n</pre>\n<p>ここで、<var>S_1, \\dots, S_H</var> はそれぞれ長さ <var>W</var> の文字列であり、<var>S_i</var> の <var>j</var> 文字目 (<var>1 ≤ i ≤ H,\\ 1 ≤ j ≤ W</var>) は次のように定義される。</p>\n<ul>\n<li><var>(x, y) = (i, j)</var> であるような操作が存在しない場合、<var>S_i</var> の <var>j</var> 文字目は <code>.</code> である。</li>\n<li>そうでない場合、<var>(x, y) = (i, j)</var> であるような操作はちょうど <var>1</var> 回存在する。その操作において、<ul>\n<li>「<var>(x-1,y-1)</var> と <var>(x-1,y)</var> を端点に持つ線分」<em>以外</em> の <var>3</var> 本を選んだ場合、<var>S_i</var> の <var>j</var> 文字目は <code>v</code> である。</li>\n<li>「<var>(x-1,y-1)</var> と <var>(x,y-1)</var> を端点に持つ線分」<em>以外</em> の <var>3</var> 本を選んだ場合、<var>S_i</var> の <var>j</var> 文字目は <code>&gt;</code> である。</li>\n<li>「<var>(x,y)</var> と <var>(x-1,y)</var> を端点に持つ線分」<em>以外</em> の <var>3</var> 本を選んだ場合、<var>S_i</var> の <var>j</var> 文字目は <code>&lt;</code> である。</li>\n<li>「<var>(x,y)</var> と <var>(x,y-1)</var> を端点に持つ線分」<em>以外</em> の <var>3</var> 本を選んだ場合、<var>S_i</var> の <var>j</var> 文字目は <code>^</code> である。</li>\n</ul>\n</li>\n</ul>\n<p>なお、ジャッジは <code>Yes</code> と <code>No</code> の大文字・小文字を区別しない。</p>\n<p>入出力例やビジュアライザも参考にせよ。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>ビジュアライザ</h3><p>以下のリンクからビジュアライザを利用できます。</p>\n<p><a href=\"https://img.atcoder.jp/ttpc2024_1/grid_construction_visualizer_9cdb863ae8b195d0a47d8d6e2c9e05cd.html\">https://img.atcoder.jp/ttpc2024_1/grid_construction_visualizer_9cdb863ae8b195d0a47d8d6e2c9e05cd.html</a></p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>Yes\n&lt;&lt;^\nv.^\nv&gt;&gt;\n</pre>\n<p>図のようにコの字を描くことで、 <var>3 \\times 3</var> のグリッドを描くことができます。中央のマスに対応する場所にはコの字を描いていないことに注意してください。（見やすさのため、コの字に色をつけていますが、問題には関係ありません。）</p>\n<p><img src=\"https://img.atcoder.jp/ttpc2024_1/5c8124eb7c9068ad7af0603c6077344b.svg\" class=\"img-responsive center-block\" style=\"max-width: 100%; min-width: 240px;\"></p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>4 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>No\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>4 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>No\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/ttpc2024_1/tasks/ttpc2024_1_j"}