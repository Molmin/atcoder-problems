{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>500</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点 <var>M</var> 辺の、連結な単純無向グラフが与えられます。\n頂点には <var>1</var> から <var>N</var> までの番号がついており、辺には <var>1</var> から <var>M</var> までの番号がついています。\n辺 <var>i</var> は、頂点 <var>A_i</var> と頂点 <var>B_i</var> を結んでいます。\n次の条件を満たすパスを <var>1</var> つ見つけて、出力してください。</p>\n<ul>\n<li><var>2</var> 個以上の頂点を通る</li>\n<li>同じ頂点を <var>2</var> 度以上通らない</li>\n<li>パスの少なくとも一方の端点と直接辺で結ばれている頂点は、必ずパスに含まれる</li>\n</ul>\n<p>ただし、この問題の制約の下で、このようなパスが必ず存在することが証明できます。\nまた、あり得る答えのうちどれを出力しても構いません。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 10^5</var></li>\n<li><var>1 \\leq M \\leq 10^5</var></li>\n<li><var>1 \\leq A_i &lt; B_i \\leq N</var></li>\n<li>与えられるグラフは連結かつ単純（どの <var>2</var> 頂点を直接結ぶ辺も高々 <var>1</var> つ）である</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>A_1</var> <var>B_1</var>\n<var>A_2</var> <var>B_2</var>\n<var>:</var>\n<var>A_M</var> <var>B_M</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>条件を満たすパスを <var>1</var> つ見つけて出力せよ。\n出力の <var>1</var> 行目には、パスに含まれる頂点の個数を出力せよ。\n出力の <var>2</var> 行目には、パスに含まれる頂点の番号を、パスを形成するような順序で、空白区切りにして出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5 6\n1 3\n1 4\n2 3\n1 5\n3 5\n2 4\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>4\n2 3 1 4\n</pre>\n\n<p>頂点 <var>2</var> と直接辺で結ばれている頂点は、頂点 <var>3</var> と <var>4</var> です。\n頂点 <var>4</var> と直接辺で結ばれている頂点は、頂点 <var>1</var> と <var>2</var> です。\nなので、<var>2</var> → <var>3</var> → <var>1</var> → <var>4</var> というパスは条件を満たします。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>7 8\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n3 5\n2 6\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>7\n1 2 3 4 5 6 7\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>12 18\n3 5\n4 12\n9 11\n1 10\n2 5\n6 10\n8 11\n1 3\n4 10\n2 4\n3 7\n2 10\n3 12\n3 9\n1 7\n2 3\n2 11\n10 11\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>8\n12 4 2 5 3 9 11 8\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>500</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a connected undirected simple graph, which has <var>N</var> vertices and <var>M</var> edges.\nThe vertices are numbered <var>1</var> through <var>N</var>, and the edges are numbered <var>1</var> through <var>M</var>.\nEdge <var>i</var> connects vertices <var>A_i</var> and <var>B_i</var>.\nYour task is to find a path that satisfies the following conditions:</p>\n<ul>\n<li>The path traverses two or more vertices.</li>\n<li>The path does not traverse the same vertex more than once.</li>\n<li>A vertex directly connected to at least one of the endpoints of the path, is always contained in the path.</li>\n</ul>\n<p>It can be proved that such a path always exists.\nAlso, if there are more than one solution, any of them will be accepted.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 10^5</var></li>\n<li><var>1 \\leq M \\leq 10^5</var></li>\n<li><var>1 \\leq A_i &lt; B_i \\leq N</var></li>\n<li>The given graph is connected and simple (that is, for every pair of vertices, there is at most one edge that directly connects them).</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>A_1</var> <var>B_1</var>\n<var>A_2</var> <var>B_2</var>\n<var>:</var>\n<var>A_M</var> <var>B_M</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Find one path that satisfies the conditions, and print it in the following format.\nIn the first line, print the count of the vertices contained in the path.\nIn the second line, print a space-separated list of the indices of the vertices, in order of appearance in the path.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5 6\n1 3\n1 4\n2 3\n1 5\n3 5\n2 4\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>4\n2 3 1 4\n</pre>\n\n<p>There are two vertices directly connected to vertex <var>2</var>: vertices <var>3</var> and <var>4</var>.\nThere are also two vertices directly connected to vertex <var>4</var>: vertices <var>1</var> and <var>2</var>.\nHence, the path <var>2</var> → <var>3</var> → <var>1</var> → <var>4</var> satisfies the conditions.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>7 8\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n3 5\n2 6\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>7\n1 2 3 4 5 6 7\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc013/tasks/agc013_b"}