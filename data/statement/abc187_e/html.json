{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>500</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点 <var>N-1</var> 辺から成る木があり、頂点には <var>1, 2, \\dots, N</var> の番号が、辺には <var>1, 2, \\dots, N-1</var> の番号がついています。辺 <var>i</var> は頂点 <var>a_i</var> と頂点 <var>b_i</var> を結びます。\nこの木の各頂点には <var>1</var> つの整数が書かれています。頂点 <var>i</var> に書かれている整数を <var>c_i</var> とします。はじめ、 <var>c_i = 0</var> です。</p>\n<p><var>Q</var> 個のクエリが与えられます。 <var>i</var> 番目のクエリでは、整数 <var>t_i, e_i, x_i</var> が与えられます。クエリの内容は以下の通りです。</p>\n<ul>\n<li><var>t_i = 1</var> のとき : 頂点 <var>a_{e_i}</var> から辺をたどって頂点 <var>b_{e_i}</var> を通らずに到達できるような全ての頂点 <var>v</var> に対して、<var>c_v</var> を <var>c_v + x_i</var> に書き換える。</li>\n<li><var>t_i = 2</var> のとき : 頂点 <var>b_{e_i}</var> から辺をたどって頂点 <var>a_{e_i}</var> を通らずに到達できるような全ての頂点 <var>v</var> に対して、<var>c_v</var> を <var>c_v + x_i</var> に書き換える。</li>\n</ul>\n<p>すべてのクエリを処理した後、各頂点に書かれた整数を出力してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li>入力は全て整数</li>\n<li><var>2 \\le N \\le 2 \\times 10^5</var></li>\n<li><var>1 \\le a_i, b_i \\le N</var></li>\n<li>与えられるグラフは木である</li>\n<li><var>1 \\le Q \\le 2 \\times 10^5</var></li>\n<li><var>t_i \\in \\{1, 2\\}</var></li>\n<li><var>1 \\le e_i \\le N-1</var></li>\n<li><var>1 \\le x_i \\le 10^9</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>a_1</var> <var>b_1</var>\n<var>\\vdots</var>\n<var>a_{N-1}</var> <var>b_{N-1}</var>\n<var>Q</var>\n<var>t_1</var> <var>e_1</var> <var>x_1</var>\n<var>\\vdots</var>\n<var>t_Q</var> <var>e_Q</var> <var>x_Q</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>すべてのクエリを処理した後の <var>c_1, c_2, \\dots, c_N</var> をこの順に改行区切りで出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5\n1 2\n2 3\n2 4\n4 5\n4\n1 1 1\n1 4 10\n2 1 100\n2 2 1000\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>11\n110\n1110\n110\n100\n</pre>\n<p><var>1</var> 番目のクエリでは、頂点 <var>1</var> から始めて頂点 <var>2</var> を通らずに到達できる頂点 <var>1</var> に <var>1</var> を足します。<br>\n<var>2</var> 番目のクエリでは、頂点 <var>4</var> から始めて頂点 <var>5</var> を通らずに到達できる頂点 <var>1, 2, 3, 4</var> に <var>10</var> を足します。<br>\n<var>3</var> 番目のクエリでは、頂点 <var>2</var> から始めて頂点 <var>1</var> を通らずに到達できる頂点 <var>2, 3, 4, 5</var> に <var>100</var> を足します。<br>\n<var>4</var> 番目のクエリでは、頂点 <var>3</var> から始めて頂点 <var>2</var> を通らずに到達できる頂点 <var>3</var> に <var>1000</var> を足します。  </p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>7\n2 1\n2 3\n4 2\n4 5\n6 1\n3 7\n7\n2 2 1\n1 3 2\n2 2 4\n1 6 8\n1 3 16\n2 4 32\n2 1 64\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>72\n8\n13\n26\n58\n72\n5\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>11\n2 1\n1 3\n3 4\n5 2\n1 6\n1 7\n5 8\n3 9\n3 10\n11 4\n10\n2 6 688\n1 10 856\n1 8 680\n1 8 182\n2 2 452\n2 4 183\n2 6 518\n1 3 612\n2 6 339\n2 3 206\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>1657\n1657\n2109\n1703\n1474\n1657\n3202\n1474\n1247\n2109\n2559\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>500</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>We have a tree with <var>N</var> vertices and <var>N-1</var> edges, where the vertices are numbered <var>1, 2, \\dots, N</var> and the edges are numbered <var>1, 2, \\dots, N-1</var>. Edge <var>i</var> connects Vertices <var>a_i</var> and <var>b_i</var>.<br>\nEach vertex in the tree has an integer written on it. Let <var>c_i</var> be the integer written on Vertex <var>i</var>. Initially, <var>c_i = 0</var>.</p>\n<p>You will be given <var>Q</var> queries. The <var>i</var>-th query, consisting of integers <var>t_i</var>, <var>e_i</var>, and <var>x_i</var>, is as follows:</p>\n<ul>\n<li>If <var>t_i = 1</var>: for each Vertex <var>v</var> reachable from Vertex <var>a_{e_i}</var> without visiting Vertex <var>b_{e_i}</var> by traversing edges, replace <var>c_v</var> with <var>c_v + x_i</var>.</li>\n<li>If <var>t_i = 2</var>: for each Vertex <var>v</var> reachable from Vertex <var>b_{e_i}</var> without visiting Vertex <var>a_{e_i}</var> by traversing edges, replace <var>c_v</var> with <var>c_v + x_i</var>.</li>\n</ul>\n<p>After processing all queries, print the integer written on each vertex.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li>All values in input are integers.</li>\n<li><var>2 \\le N \\le 2 \\times 10^5</var></li>\n<li><var>1 \\le a_i, b_i \\le N</var></li>\n<li>The given graph is a tree.</li>\n<li><var>1 \\le Q \\le 2 \\times 10^5</var></li>\n<li><var>t_i \\in \\{1, 2\\}</var></li>\n<li><var>1 \\le e_i \\le N-1</var></li>\n<li><var>1 \\le x_i \\le 10^9</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>a_1</var> <var>b_1</var>\n<var>\\vdots</var>\n<var>a_{N-1}</var> <var>b_{N-1}</var>\n<var>Q</var>\n<var>t_1</var> <var>e_1</var> <var>x_1</var>\n<var>\\vdots</var>\n<var>t_Q</var> <var>e_Q</var> <var>x_Q</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the values <var>c_1, c_2, \\dots, c_N</var> after processing all queries, each in its own line.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5\n1 2\n2 3\n2 4\n4 5\n4\n1 1 1\n1 4 10\n2 1 100\n2 2 1000\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>11\n110\n1110\n110\n100\n</pre>\n<p>In the first query, we add <var>1</var> to each vertex reachable from Vertex <var>1</var> without visiting Vertex <var>2</var>, that is, Vertex <var>1</var>.<br>\nIn the second query, we add <var>10</var> to each vertex reachable from Vertex <var>4</var> without visiting Vertex <var>5</var>, that is, Vertex <var>1, 2, 3, 4</var>.<br>\nIn the third query, we add <var>100</var> to each vertex reachable from Vertex <var>2</var> without visiting Vertex <var>1</var>, that is, Vertex <var>2, 3, 4, 5</var>.<br>\nIn the fourth query, we add <var>1000</var> to each vertex reachable from Vertex <var>3</var> without visiting Vertex <var>2</var>, that is, Vertex <var>3</var>.   </p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>7\n2 1\n2 3\n4 2\n4 5\n6 1\n3 7\n7\n2 2 1\n1 3 2\n2 2 4\n1 6 8\n1 3 16\n2 4 32\n2 1 64\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>72\n8\n13\n26\n58\n72\n5\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>11\n2 1\n1 3\n3 4\n5 2\n1 6\n1 7\n5 8\n3 9\n3 10\n11 4\n10\n2 6 688\n1 10 856\n1 8 680\n1 8 182\n2 2 452\n2 4 183\n2 6 518\n1 3 612\n2 6 339\n2 3 206\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>1657\n1657\n2109\n1703\n1474\n1657\n3202\n1474\n1247\n2109\n2559\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc187/tasks/abc187_e"}