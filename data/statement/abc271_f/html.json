{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>500</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 行 <var>N</var> 列のマス目があり、上から <var>i \\, (1 \\leq i \\leq N)</var> 行目、左から <var>j \\, (1 \\leq j \\leq N)</var> 列目のマスを <var>(i, j)</var> と表します。<br>\nマス <var>(i, j)</var> には非負整数 <var>a_{i, j}</var> が書かれています。</p>\n<p>マス <var>(i, j)</var> にいるとき、マス <var>(i+1, j), (i, j+1)</var> のいずれかに移動することができます。ただし、マス目の外に出るような移動はできません。</p>\n<p>マス <var>(1, 1)</var> から移動を繰り返してマス <var>(N, N)</var> にたどり着く方法であって、通ったマス（マス <var>(1, 1), (N, N)</var> を含む）に書かれた整数の排他的論理和が <var>0</var> となるようなものの総数を求めてください。</p>\n<details>\n<summary>排他的論理和とは</summary>\n整数 <var>a, b</var> の排他的論理和 <var>a \\oplus b</var> は、以下のように定義されます。\n<ul><li> \n<var>a \\oplus b</var> を二進表記した際の <var>2^k \\, (k \\geq 0)</var> の位の数は、<var>a, b</var> を二進表記した際の <var>2^k</var> の位の数のうち一方のみが <var>1</var> であれば <var>1</var>、そうでなければ <var>0</var> である。\n</li></ul>\n例えば、<var>3 \\oplus 5 = 6</var> となります（二進表記すると <var>011 \\oplus 101 = 110</var>）。<br>\n一般に <var>k</var> 個の整数 <var>p_1, \\dots, p_k</var> の排他的論理和は <var>(\\cdots ((p_1 \\oplus p_2) \\oplus p_3) \\oplus \\cdots \\oplus p_k)</var> と定義され、これは <var>p_1, \\dots, p_k</var> の順番によらないことが証明できます。\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 20</var></li>\n<li><var>0 \\leq a_{i, j} \\lt 2^{30} \\, (1 \\leq i, j \\leq N)</var> </li>\n<li>入力は全て整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>a_{1, 1}</var> <var>\\ldots</var> <var>a_{1, N}</var>\n<var>\\vdots</var>\n<var>a_{N, 1}</var> <var>\\ldots</var> <var>a_{N, N}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>答えを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3\n1 5 2\n7 0 5\n4 2 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>2\n</pre>\n<p>次の二通りの方法が条件を満たします。</p>\n<ul>\n<li><var>(1, 1) \\rightarrow (1, 2) \\rightarrow (1, 3) \\rightarrow (2, 3) \\rightarrow (3, 3)</var></li>\n<li><var>(1, 1) \\rightarrow (2, 1) \\rightarrow (2, 2) \\rightarrow (2, 3) \\rightarrow (3, 3)</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>2\n1 2\n2 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>0\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>10\n1 0 1 0 0 1 0 0 0 1\n0 0 0 1 0 1 0 1 1 0\n1 0 0 0 1 0 1 0 0 0\n0 1 0 0 0 1 1 0 0 1\n0 0 1 1 0 1 1 0 1 0\n1 0 0 0 1 0 0 1 1 0\n1 1 1 0 0 0 1 1 0 0\n0 1 1 0 0 1 1 0 1 0\n1 0 1 1 0 0 0 0 0 0\n1 0 1 1 0 0 1 1 1 0\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>24307\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>500</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There is a grid with <var>N</var> rows and <var>N</var> columns.  We denote by <var>(i, j)</var> the square at the <var>i</var>-th <var>(1 \\leq i \\leq N)</var> row from the top and <var>j</var>-th <var>(1 \\leq j \\leq N)</var> column from the left.<br>\nSquare <var>(i, j)</var> has a non-negative integer <var>a_{i, j}</var> written on it.</p>\n<p>When you are at square <var>(i, j)</var>, you can move to either square <var>(i+1, j)</var> or <var>(i, j+1)</var>.  Here, you are not allowed to go outside the grid.</p>\n<p>Find the number of ways to travel from square <var>(1, 1)</var> to square <var>(N, N)</var> such that the exclusive logical sum of the integers written on the squares visited (including <var>(1, 1)</var> and <var>(N, N)</var>) is <var>0</var>.</p>\n<details>\n<summary>What is the exclusive logical sum?</summary>\nThe exclusive logical sum <var>a \\oplus b</var> of two integers <var>a</var> and <var>b</var> is defined as follows.\n<ul><li> \nThe <var>2^k</var>'s place (<var>k \\geq 0</var>) in the binary notation of <var>a \\oplus b</var> is <var>1</var> if exactly one of the <var>2^k</var>'s places in the binary notation of <var>a</var> and <var>b</var> is <var>1</var>; otherwise, it is <var>0</var>.\n</li></ul>\nFor example, <var>3 \\oplus 5 = 6</var> (In binary notation: <var>011 \\oplus 101 = 110</var>).<br>\nIn general, the exclusive logical sum of <var>k</var> integers <var>p_1, \\dots, p_k</var> is defined as <var>(\\cdots ((p_1 \\oplus p_2) \\oplus p_3) \\oplus \\cdots \\oplus p_k)</var>.  We can prove that it is independent of the order of <var>p_1, \\dots, p_k</var>.\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 20</var></li>\n<li><var>0 \\leq a_{i, j} \\lt 2^{30} \\, (1 \\leq i, j \\leq N)</var> </li>\n<li>All values in the input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>a_{1, 1}</var> <var>\\ldots</var> <var>a_{1, N}</var>\n<var>\\vdots</var>\n<var>a_{N, 1}</var> <var>\\ldots</var> <var>a_{N, N}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the answer.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3\n1 5 2\n7 0 5\n4 2 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>2\n</pre>\n<p>The following two ways satisfy the condition:</p>\n<ul>\n<li><var>(1, 1) \\rightarrow (1, 2) \\rightarrow (1, 3) \\rightarrow (2, 3) \\rightarrow (3, 3)</var>;</li>\n<li><var>(1, 1) \\rightarrow (2, 1) \\rightarrow (2, 2) \\rightarrow (2, 3) \\rightarrow (3, 3)</var>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>2\n1 2\n2 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>0\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>10\n1 0 1 0 0 1 0 0 0 1\n0 0 0 1 0 1 0 1 1 0\n1 0 0 0 1 0 1 0 0 0\n0 1 0 0 0 1 1 0 0 1\n0 0 1 1 0 1 1 0 1 0\n1 0 0 0 1 0 0 1 1 0\n1 1 1 0 0 0 1 1 0 0\n0 1 1 0 0 1 1 0 1 0\n1 0 1 1 0 0 0 0 0 0\n1 0 1 1 0 0 1 1 1 0\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>24307\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc271/tasks/abc271_f"}