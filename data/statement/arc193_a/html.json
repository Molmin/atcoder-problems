{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>700</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>整数 <var>l, r</var> に対し、<var>l</var> 以上 <var>r</var> 以下の整数全体からなる集合を <var>[l, r]</var> で表します。\nすなわち、<var>[l, r] = \\lbrace l, l+1, l+2, \\ldots, r-1, r\\rbrace</var> です。</p>\n<p><var>N</var> 組の整数のペア <var>(L_1, R_1), (L_2, R_2), \\ldots, (L_N, R_N)</var> が与えられます。\nこれに対して、下記で定義される無向グラフ <var>G</var> を考えます。</p>\n<ul>\n<li><var>1, 2, \\ldots, N</var> と番号付けられた <var>N</var> 個の頂点を持つ。</li>\n<li>すべての <var>i, j \\in [1, N]</var> について次が成り立つ：<var>[L_i, R_i]</var> と <var>[L_j, R_j]</var> の共通部分が空であるとき、かつ、そのときに限り、頂点 <var>i</var> と頂点 <var>j</var> の間に無向辺が張られている。</li>\n</ul>\n<p>また、<var>i = 1, 2, \\ldots, N</var> について、頂点 <var>i</var> の重みを <var>W_i</var> で定めます。</p>\n<p><var>G</var> に関する <var>Q</var> 個のクエリが与えられるので、それらを与えられる順に処理してください。\n<var>i = 1, 2, \\ldots, Q</var> について、<var>i</var> 番目のクエリは下記の通りです。</p>\n<blockquote>\n<p><var>s_i \\neq t_i</var> を満たす <var>1</var> 以上 <var>N</var> 以下の整数 <var>s_i, t_i</var> が与えられる。\n<var>G</var> において、頂点 <var>s_i</var> から頂点 <var>t_i</var> へのパスが存在するかを判定せよ。\n存在する場合は、そのようなパスの<strong>重み</strong>の最小値を出力せよ。</p>\n</blockquote>\n<p>ここで、頂点 <var>s</var> から頂点 <var>t</var> へのパスの重みは、パス上の頂点（両端点である頂点 <var>s</var> と頂点 <var>t</var> を含む）の重みの総和で定義されます。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq Q \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq W_i \\leq 10^9</var></li>\n<li><var>1 \\leq L_i \\leq R_i \\leq 2N</var></li>\n<li><var>1 \\leq s_i, t_i \\leq N</var></li>\n<li><var>s_i \\neq t_i</var></li>\n<li>入力はすべて整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>W_1</var> <var>W_2</var> <var>\\cdots</var> <var>W_N</var>\n<var>L_1</var> <var>R_1</var>\n<var>L_2</var> <var>R_2</var>\n<var>\\vdots</var>\n<var>L_N</var> <var>R_N</var>\n<var>Q</var>\n<var>s_1</var> <var>t_1</var>\n<var>s_2</var> <var>t_2</var>\n<var>\\vdots</var>\n<var>s_Q</var> <var>t_Q</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>Q</var> 行出力せよ。\n<var>i = 1, 2, \\ldots, Q</var> について、<var>i</var> 行目には、\n頂点 <var>s_i</var> から頂点 <var>t_i</var> へのパスが存在する場合はそのようなパスの重みの最小値を出力し、存在しない場合は <code>-1</code> を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5\n5 1 4 2 2\n2 4\n1 2\n7 8\n4 5\n2 7\n3\n1 4\n4 3\n5 2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>11\n6\n-1\n</pre>\n<p><var>G</var> は <var>\\lbrace 1, 3\\rbrace, \\lbrace 2, 3\\rbrace, \\lbrace 2, 4\\rbrace, \\lbrace 3, 4\\rbrace</var> の <var>4</var> 本の無向辺を持つグラフです。</p>\n<ul>\n<li><var>1</var> 番目のクエリに関して、頂点 <var>1</var> から頂点 <var>4</var> への <var>1 \\to 3 \\to 4</var> というパスが存在します。そのパスの重みは <var>W_1 + W_3 + W_4 = 5 + 4 + 2 = 11</var> であり、これが考えられる最小値です。</li>\n<li><var>2</var> 番目のクエリに関して、頂点 <var>4</var> から頂点 <var>3</var> への <var>4 \\to 3</var> というパスが存在します。そのパスの重みは <var>W_4 + W_3 = 2 + 4 = 6</var> であり、これが考えられる最小値です。</li>\n<li><var>3</var> 番目のクエリに関して、頂点 <var>5</var> から頂点 <var>2</var> へのパスは存在しません。したがって、<code>-1</code> を出力します。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>8\n44 75 49 4 78 79 12 32\n5 13\n10 16\n6 8\n6 15\n12 15\n5 7\n1 15\n1 2\n5\n5 6\n3 2\n7 5\n4 5\n5 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>157\n124\n-1\n114\n114\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>700</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>For integers <var>l, r</var>, let <var>[l, r]</var> denote the set of all integers from <var>l</var> through <var>r</var>. That is, <var>[l, r] = \\lbrace l, l+1, l+2, \\ldots, r-1, r\\rbrace</var>.</p>\n<p>You are given <var>N</var> pairs of integers <var>(L_1, R_1), (L_2, R_2), \\ldots, (L_N, R_N)</var>.\nBased on these pairs, consider an undirected graph <var>G</var> defined as follows:</p>\n<ul>\n<li>It has <var>N</var> vertices numbered <var>1, 2, \\ldots, N</var>.</li>\n<li>For all <var>i, j \\in [1, N]</var>, there is an undirected edge between vertices <var>i</var> and <var>j</var> if and only if the intersection of <var>[L_i, R_i]</var> and <var>[L_j, R_j]</var> is empty.</li>\n</ul>\n<p>In addition, for each <var>i = 1, 2, \\ldots, N</var>, define the weight of vertex <var>i</var> to be <var>W_i</var>.</p>\n<p>You are given <var>Q</var> queries about <var>G</var>. Process these queries in the order they are given.\nFor each <var>i = 1, 2, \\ldots, Q</var>, the <var>i</var>-th query is the following:</p>\n<blockquote>\n<p>You are given integers <var>s_i</var> and <var>t_i</var> (both between <var>1</var> and <var>N</var>, inclusive) such that <var>s_i \\neq t_i</var>. Determine whether there exists a path from vertex <var>s_i</var> to vertex <var>t_i</var> in <var>G</var>. If it exists, print the minimum possible <strong>weight</strong> of such a path.</p>\n</blockquote>\n<p>Here, the weight of a path from vertex <var>s</var> to vertex <var>t</var> is defined as the sum of the weights of the vertices on that path (including both endpoints <var>s</var> and <var>t</var>).</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq Q \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq W_i \\leq 10^9</var></li>\n<li><var>1 \\leq L_i \\leq R_i \\leq 2N</var></li>\n<li><var>1 \\leq s_i, t_i \\leq N</var></li>\n<li><var>s_i \\neq t_i</var></li>\n<li>All input values are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>W_1</var> <var>W_2</var> <var>\\cdots</var> <var>W_N</var>\n<var>L_1</var> <var>R_1</var>\n<var>L_2</var> <var>R_2</var>\n<var>\\vdots</var>\n<var>L_N</var> <var>R_N</var>\n<var>Q</var>\n<var>s_1</var> <var>t_1</var>\n<var>s_2</var> <var>t_2</var>\n<var>\\vdots</var>\n<var>s_Q</var> <var>t_Q</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print <var>Q</var> lines.\nFor each <var>i = 1, 2, \\ldots, Q</var>, on the <var>i</var>-th line, if there exists a path from vertex <var>s_i</var> to vertex <var>t_i</var>, print the minimum possible weight of such a path, and print <code>-1</code> otherwise.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5\n5 1 4 2 2\n2 4\n1 2\n7 8\n4 5\n2 7\n3\n1 4\n4 3\n5 2\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>11\n6\n-1\n</pre>\n<p><var>G</var> is a graph with four undirected edges: <var>\\lbrace 1, 3\\rbrace, \\lbrace 2, 3\\rbrace, \\lbrace 2, 4\\rbrace, \\lbrace 3, 4\\rbrace</var>.</p>\n<ul>\n<li>For the first query, there is a path from vertex <var>1</var> to vertex <var>4</var> given by <var>1 \\to 3 \\to 4</var>. The weight of this path is <var>W_1 + W_3 + W_4 = 5 + 4 + 2 = 11</var>, and this is the minimum possible.</li>\n<li>For the second query, there is a path from vertex <var>4</var> to vertex <var>3</var> given by <var>4 \\to 3</var>. The weight of this path is <var>W_4 + W_3 = 2 + 4 = 6</var>, and this is the minimum possible.</li>\n<li>For the third query, there is no path from vertex <var>5</var> to vertex <var>2</var>. Hence, print <code>-1</code>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>8\n44 75 49 4 78 79 12 32\n5 13\n10 16\n6 8\n6 15\n12 15\n5 7\n1 15\n1 2\n5\n5 6\n3 2\n7 5\n4 5\n5 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>157\n124\n-1\n114\n114\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc193/tasks/arc193_a"}