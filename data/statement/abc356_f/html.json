{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>525</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>整数 <var>K</var> が与えられます。はじめ空である集合 <var>S</var> に対して、次の <var>2</var> 種類のクエリを順に <var>Q</var> 個処理してください。</p>\n<ul>\n<li><code>1 x</code>：整数 <var>x</var> が与えられる。<var>S</var> に <var>x</var> が含まれているならば、<var>S</var> から <var>x</var> を取り除く。そうでないならば、<var>S</var> に <var>x</var> を追加する。</li>\n<li><code>2 x</code>：<var>S</var> に含まれる整数 <var>x</var> が与えられる。<var>S</var> に含まれる数を頂点とし、差の絶対値が <var>K</var> 以下であるような数の間に辺を張ったグラフにおいて、<var>x</var> が属する連結成分の頂点数を出力する。</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq Q \\leq 2\\times 10^5</var></li>\n<li><var>0 \\leq K \\leq 10^{18}</var></li>\n<li>各クエリにおいて、<var>1\\leq x \\leq 10^{18}</var></li>\n<li><var>2</var> 種類目のクエリにおいて与えられる <var>x</var> はその時点で <var>S</var> に含まれる。</li>\n<li>入力は全て整数である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>Q</var> <var>K</var>\n<var>\\mathrm{query}_1</var>\n<var>\\vdots</var>\n<var>\\mathrm{query}_Q</var>\n</pre>\n<p>各クエリはそれぞれ次の形式で与えられる。</p>\n<pre><var>1</var> <var>x</var>\n</pre>\n<pre><var>2</var> <var>x</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>クエリを処理せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>7 5\n1 3\n1 10\n2 3\n1 7\n2 3\n1 10\n2 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1\n3\n2\n</pre>\n<p>クエリの処理は次のように進行します。</p>\n<ul>\n<li><var>1</var> 番目のクエリでは、<var>S</var> に <var>3</var> が追加され、<var>S=\\{3\\}</var> となります。</li>\n<li><var>2</var> 番目のクエリでは、<var>S</var> に <var>10</var> が追加され、<var>S=\\{3,10\\}</var> となります。</li>\n<li><var>3</var> 番目のクエリでは、<var>3,10</var> の <var>2</var> 頂点からなる辺のないグラフを考え、<var>3</var> が属する連結成分のサイズである <var>1</var> を出力します。</li>\n<li><var>4</var> 番目のクエリでは、<var>S</var> に <var>7</var> が追加され、<var>S=\\{3,7,10\\}</var> となります。</li>\n<li><var>5</var> 番目のクエリでは、<var>3,7,10</var> の <var>3</var> 頂点からなり、<var>3</var> と <var>7</var>、<var>7</var> と <var>10</var> の間に辺のあるグラフを考え、<var>3</var> が属する連結成分のサイズである <var>3</var> を出力します。</li>\n<li><var>6</var> 番目のクエリでは、<var>S</var> から <var>10</var> が削除され、<var>S=\\{3,7\\}</var> となります。</li>\n<li><var>7</var> 番目のクエリでは、<var>3,7</var> の <var>2</var> 頂点からなり、<var>3</var> と <var>7</var> の間に辺のあるグラフを考え、<var>3</var> が属する連結成分のサイズである <var>2</var> を出力します。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>11 1000000000000000000\n1 1\n1 100\n1 10000\n1 1000000\n1 100000000\n1 10000000000\n1 1000000000000\n1 100000000000000\n1 10000000000000000\n1 1000000000000000000\n2 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>10\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>8 0\n1 1\n1 2\n2 1\n1 1\n1 2\n1 1\n1 2\n2 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>1\n1\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>525</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given an integer <var>K</var>. For a set <var>S</var> that is initially empty, process <var>Q</var> queries of the following two types in order:</p>\n<ul>\n<li><code>1 x</code>: An integer <var>x</var> is given. If <var>x</var> is in <var>S</var>, remove <var>x</var> from <var>S</var>. Otherwise, add <var>x</var> to <var>S</var>.</li>\n<li><code>2 x</code>: An integer <var>x</var> that is in <var>S</var> is given. Consider a graph where the vertices are the numbers in <var>S</var>, and there is an edge between two numbers if and only if the absolute difference between them is at most <var>K</var>. Print the count of vertices in the connected component that contains <var>x</var>.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq Q \\leq 2\\times 10^5</var></li>\n<li><var>0 \\leq K \\leq 10^{18}</var></li>\n<li>For each query, <var>1 \\leq x \\leq 10^{18}</var>.</li>\n<li>For each query of the second type, the given <var>x</var> is in <var>S</var> at that point.</li>\n<li>All input values are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>Q</var> <var>K</var>\n<var>\\mathrm{query}_1</var>\n<var>\\vdots</var>\n<var>\\mathrm{query}_Q</var>\n</pre>\n<p>Each query is given in the following format:</p>\n<pre><var>1</var> <var>x</var>\n</pre>\n<pre><var>2</var> <var>x</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Process the queries.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>7 5\n1 3\n1 10\n2 3\n1 7\n2 3\n1 10\n2 3\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1\n3\n2\n</pre>\n<p>The query processing proceeds as follows:</p>\n<ul>\n<li>In the first query, <var>3</var> is added to <var>S</var>, resulting in <var>S=\\{3\\}</var>.</li>\n<li>In the second query, <var>10</var> is added to <var>S</var>, resulting in <var>S=\\{3,10\\}</var>.</li>\n<li>In the third query, consider a graph with vertices <var>3</var> and <var>10</var> and no edges. The connected component containing <var>3</var> has a size of <var>1</var>, so print <var>1</var>.</li>\n<li>In the fourth query, <var>7</var> is added to <var>S</var>, resulting in <var>S=\\{3,7,10\\}</var>.</li>\n<li>In the fifth query, consider a graph with vertices <var>3</var>, <var>7</var>, and <var>10</var>, with edges between <var>3</var> and <var>7</var>, and <var>7</var> and <var>10</var>. The connected component containing <var>3</var> has a size of <var>3</var>, so print <var>3</var>.</li>\n<li>In the sixth query, <var>10</var> is removed from <var>S</var>, resulting in <var>S=\\{3,7\\}</var>.</li>\n<li>In the seventh query, consider a graph with vertices <var>3</var> and <var>7</var>, with an edge between them. The connected component containing <var>3</var> has a size of <var>2</var>, so print <var>2</var>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>11 1000000000000000000\n1 1\n1 100\n1 10000\n1 1000000\n1 100000000\n1 10000000000\n1 1000000000000\n1 100000000000000\n1 10000000000000000\n1 1000000000000000000\n2 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>10\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>8 0\n1 1\n1 2\n2 1\n1 1\n1 2\n1 1\n1 2\n2 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>1\n1\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc356/tasks/abc356_f"}