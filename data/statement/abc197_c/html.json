{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>300</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>長さ <var>N</var> の数列 <var>A</var> が与えられます。<br>\nこの数列を、<var>1</var> つ以上の空でない連続した区間に分けます。<br>\nその後、分けた各区間で、区間内の数のビット単位 <var>\\mathrm{OR}</var> を計算します。<br>\nこうして得られた全ての値のビット単位 <var>\\mathrm{XOR}</var> として考えられる最小値を求めてください。  </p>\n<details>\n    <summary>\n        ビット単位 <var>\\mathrm{OR}</var> 演算とは\n    </summary>\n    <p>\n        整数 <var>A, B</var> のビット単位 <var>\\mathrm{OR}</var>、<var>A\\ \\mathrm{OR}\\ B</var> は以下のように定義されます。\n        </p><ul>\n            <li><var>A\\ \\mathrm{OR}\\ B</var> を二進表記した際の <var>2^k</var> (<var>k \\geq 0</var>) の位の数は、<var>A, B</var> を二進表記した際の <var>2^k</var> の位の数のうち少なくとも片方が <var>1</var> であれば <var>1</var>、そうでなければ <var>0</var> である。</li>\n        </ul>\n        例えば、<var>3\\ \\mathrm{OR}\\ 5 = 7</var> となります (二進表記すると: <var>011\\ \\mathrm{OR}\\ 101 = 111</var>)。<br>  \n        一般に <var>k</var> 個の整数 <var>p_1, p_2, p_3, \\dots, p_k</var> のビット単位 <var>\\mathrm{OR}</var> は <var>(\\dots ((p_1\\ \\mathrm{OR}\\ p_2)\\ \\mathrm{OR}\\ p_3)\\ \\mathrm{OR}\\ \\dots\\ \\mathrm{OR}\\ p_k)</var> と定義され、これは <var>p_1, p_2, p_3, \\dots p_k</var> の順番によらないことが証明できます。  \n    <p></p>\n</details>\n\n<details>\n    <summary>\n        ビット単位 <var>\\mathrm{XOR}</var> 演算とは\n    </summary>\n    <p>\n        整数 <var>A, B</var> のビット単位 <var>\\mathrm{XOR}</var> 、<var>A\\ \\mathrm{XOR}\\ B</var> は、以下のように定義されます。\n        </p><ul>\n            <li><var>A\\ \\mathrm{XOR}\\ B</var> を二進表記した際の <var>2^k</var> (<var>k \\geq 0</var>) の位の数は、<var>A, B</var> を二進表記した際の <var>2^k</var> の位の数のうち一方のみが <var>1</var> であれば <var>1</var>、そうでなければ <var>0</var> である。</li>\n        </ul>\n        例えば、<var>3\\ \\mathrm{XOR}\\ 5 = 6</var> となります (二進表記すると: <var>011\\ \\mathrm{XOR}\\ 101 = 110</var>)。<br>  \n        一般に <var>k</var> 個以上の整数 <var>p_1, p_2, p_3, \\dots, p_k</var> のビット単位 <var>\\mathrm{XOR}</var> は <var>(\\dots ((p_1\\ \\mathrm{XOR}\\ p_2)\\ \\mathrm{XOR}\\ p_3)\\ \\mathrm{XOR}\\ \\dots\\ \\mathrm{XOR}\\ p_k)</var> と定義され、これは <var>p_1, p_2, p_3, \\dots p_k</var> の順番によらないことが証明できます。  \n    <p></p>\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\le N \\le 20</var></li>\n<li><var>0 \\le A_i \\lt 2^{30}</var></li>\n<li>入力に含まれる値は全て整数である</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>A_1</var> <var>A_2</var> <var>A_3</var> <var>\\dots</var> <var>A_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>答えを出力せよ。  </p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3\n1 5 7\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>2\n</pre>\n<p><var>[1, 5, 7]</var> を <var>[1, 5]</var> と <var>[7]</var> の <var>2</var> つの区間に分けると、それぞれの区間内の数のビット単位 <var>\\mathrm{OR}</var> は <var>5, 7</var> となり、その <var>\\mathrm{XOR}</var> は <var>2</var> です。<br>\nこれより小さくすることはできないので、<var>2</var> を出力します。  </p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>3\n10 10 10\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>0\n</pre>\n<p><var>[10]</var> と <var>[10, 10]</var> に分けるとよいです。  </p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>4\n1 3 3 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>0\n</pre>\n<p><var>[1, 3]</var> と <var>[3, 1]</var> に分けるとよいです。  </p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>300</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Given is a number sequence <var>A</var> of length <var>N</var>.<br>\nLet us divide this sequence into one or more non-empty contiguous intervals.<br>\nThen, for each of these intervals, let us compute the bitwise <var>\\mathrm{OR}</var> of the numbers in it.<br>\nFind the minimum possible value of the bitwise <var>\\mathrm{XOR}</var> of the values obtained in this way.</p>\n<details>\n    <summary>\n        What is bitwise <var>\\mathrm{OR}</var>?\n    </summary>\n    <p>\n        The bitwise <var>\\mathrm{OR}</var> of integers <var>A</var> and <var>B</var>, <var>A\\ \\mathrm{OR}\\ B</var>, is defined as follows:\n        </p><ul>\n            <li>When <var>A\\ \\mathrm{OR}\\ B</var> is written in base two, the digit in the <var>2^k</var>'s place (<var>k \\geq 0</var>) is <var>1</var> if at least one of <var>A</var> and <var>B</var> is <var>1</var>, and <var>0</var> otherwise.</li>\n        </ul>\n        For example, we have <var>3\\ \\mathrm{OR}\\ 5 = 7</var> (in base two: <var>011\\ \\mathrm{OR}\\ 101 = 111</var>).<br>  \n        Generally, the bitwise <var>\\mathrm{OR}</var> of <var>k</var> integers <var>p_1, p_2, p_3, \\dots, p_k</var> is defined as <var>(\\dots ((p_1\\ \\mathrm{OR}\\ p_2)\\ \\mathrm{OR}\\ p_3)\\ \\mathrm{OR}\\ \\dots\\ \\mathrm{OR}\\ p_k)</var>. We can prove that this value does not depend on the order of <var>p_1, p_2, p_3, \\dots p_k</var>.\n    <p></p>\n</details>\n\n<details>\n    <summary>\n        What is bitwise <var>\\mathrm{XOR}</var>?\n    </summary>\n    <p>\n        The bitwise <var>\\mathrm{XOR}</var> of integers <var>A</var> and <var>B</var>, <var>A\\ \\mathrm{XOR}\\ B</var>, is defined as follows:\n        </p><ul>\n            <li>When <var>A\\ \\mathrm{XOR}\\ B</var> is written in base two, the digit in the <var>2^k</var>'s place (<var>k \\geq 0</var>) is <var>1</var> if exactly one of <var>A</var> and <var>B</var> is <var>1</var>, and <var>0</var> otherwise.</li>\n        </ul>\n        For example, we have <var>3\\ \\mathrm{XOR}\\ 5 = 6</var> (in base two: <var>011\\ \\mathrm{XOR}\\ 101 = 110</var>).<br>  \n        Generally, the bitwise <var>\\mathrm{XOR}</var> of <var>k</var> integers <var>p_1, p_2, p_3, \\dots, p_k</var> is defined as <var>(\\dots ((p_1\\ \\mathrm{XOR}\\ p_2)\\ \\mathrm{XOR}\\ p_3)\\ \\mathrm{XOR}\\ \\dots\\ \\mathrm{XOR}\\ p_k)</var>. We can prove that this value does not depend on the order of <var>p_1, p_2, p_3, \\dots p_k</var>.\n    <p></p>\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\le N \\le 20</var></li>\n<li><var>0 \\le A_i \\lt 2^{30}</var></li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>A_1</var> <var>A_2</var> <var>A_3</var> <var>\\dots</var> <var>A_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the answer.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3\n1 5 7\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>2\n</pre>\n<p>If we divide <var>[1, 5, 7]</var> into <var>[1, 5]</var> and <var>[7]</var>, their bitwise <var>\\mathrm{OR}</var>s are <var>5</var> and <var>7</var>, whose <var>\\mathrm{XOR}</var> is <var>2</var>.<br>\nIt is impossible to get a smaller result, so we print <var>2</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>3\n10 10 10\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>0\n</pre>\n<p>We should divide this sequence into <var>[10]</var> and <var>[10, 10]</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>4\n1 3 3 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>0\n</pre>\n<p>We should divide this sequence into <var>[1, 3]</var> and <var>[3, 1]</var>.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc197/tasks/abc197_c"}