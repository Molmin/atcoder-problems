{"html":{"ja":"<span class=\"lang-ja\">\n<section>\n<h3>問題文</h3>\n<p><var>N</var> 頂点 <var>M</var> 辺の無向グラフがあります。 頂点は <var>1</var> から <var>N</var> まで番号が振られています。 辺は <var>1</var> から <var>M</var> まで番号が振られています。 辺 <var>i</var> は頂点 <var>a_i</var> と <var>b_i</var> を結んでいます。 グラフは連結です。</p>\n<p>このグラフの上で、<var>Q</var> 組の兄弟がスタンプラリーをします。 <var>j</var> 組目の兄弟は次のようなスタンプラリーをします。</p>\n<ul>\n<li>最初、兄は頂点 <var>x_j</var> に、弟は頂点 <var>y_j</var> にいる。</li>\n<li>兄弟でちょうど <var>z_j</var> 個の頂点を訪れる。 ただし、同一の頂点を兄弟ともに訪れた場合でも、<var>2</var> 個の頂点を訪れたとは見なさない。</li>\n<li>兄または弟が通った辺の番号の最大値がスコアとなる。 兄弟はこのスコアをできるだけ小さくする。</li>\n</ul>\n<p>それぞれの兄弟のスコアを求めてください。</p>\n</section>\n\n<section>\n<h3>制約</h3>\n<ul>\n<li><var>3≤N≤10^5</var></li>\n<li><var>N-1≤M≤10^5</var></li>\n<li><var>1≤a_i＜b_i≤N</var></li>\n<li>グラフは連結である。</li>\n<li><var>1≤Q≤10^5</var></li>\n<li><var>1≤x_j＜y_j≤N</var></li>\n<li><var>3≤z_j≤N</var></li>\n</ul>\n</section>\n\n<hr>\n\n<div class=\"io-style\">\n\n<section>\n<h3>入力</h3>\n<p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>a_1</var> <var>b_1</var>\n<var>a_2</var> <var>b_2</var>\n<var>:</var>\n<var>a_M</var> <var>b_M</var>\n<var>Q</var>\n<var>x_1</var> <var>y_1</var> <var>z_1</var>\n<var>x_2</var> <var>y_2</var> <var>z_2</var>\n<var>:</var>\n<var>x_Q</var> <var>y_Q</var> <var>z_Q</var>\n</pre>\n</section>\n\n<section>\n<h3>出力</h3>\n<p><var>Q</var> 行出力せよ。 <var>j</var> 行目には、<var>j</var> 組目の兄弟のスコアを出力せよ。</p>\n</section>\n\n</div>\n\n<hr>\n\n<section>\n<h3>入力例1</h3>\n<pre>5 6\n2 3\n4 5\n1 2\n1 3\n1 4\n1 5\n6\n2 4 3\n2 4 4\n2 4 5\n1 3 3\n1 3 4\n1 3 5\n</pre>\n</section>\n\n<section>\n<h3>出力例1</h3>\n<pre>1\n2\n3\n1\n5\n5\n</pre>\n</section>\n</span>","en":"<span class=\"lang-en\">\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>We have an undirected graph with <var>N</var> vertices and <var>M</var> edges. The vertices are numbered <var>1</var> through <var>N</var>, and the edges are numbered <var>1</var> through <var>M</var>. Edge <var>i</var> connects vertices <var>a_i</var> and <var>b_i</var>. The graph is connected.</p>\n<p>On this graph, <var>Q</var> pairs of brothers are participating in an activity called <em>Stamp Rally</em>. The Stamp Rally for the <var>i</var>-th pair will be as follows:</p>\n<ul>\n<li>One brother starts from vertex <var>x_i</var>, and the other starts from vertex <var>y_i</var>.</li>\n<li>The two explore the graph along the edges to visit <var>z_i</var> vertices in total, including the starting vertices. Here, a vertex is counted only once, even if it is visited multiple times, or visited by both brothers.</li>\n<li>The score is defined as the largest index of the edges traversed by either of them. Their objective is to minimize this value.</li>\n</ul>\n<p>Find the minimum possible score for each pair.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>3≤N≤10^5</var></li>\n<li><var>N−1≤M≤10^5</var></li>\n<li><var>1≤a_i&lt;b_i≤N</var></li>\n<li>The given graph is connected.</li>\n<li><var>1≤Q≤10^5</var></li>\n<li><var>1≤x_j&lt;y_j≤N</var></li>\n<li><var>3≤z_j≤N</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>a_1</var> <var>b_1</var>\n<var>a_2</var> <var>b_2</var>\n<var>:</var>\n<var>a_M</var> <var>b_M</var>\n<var>Q</var>\n<var>x_1</var> <var>y_1</var> <var>z_1</var>\n<var>x_2</var> <var>y_2</var> <var>z_2</var>\n<var>:</var>\n<var>x_Q</var> <var>y_Q</var> <var>z_Q</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print <var>Q</var> lines. The <var>i</var>-th line should contain the minimum possible score for the <var>i</var>-th pair of brothers.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5 6\n2 3\n4 5\n1 2\n1 3\n1 4\n1 5\n6\n2 4 3\n2 4 4\n2 4 5\n1 3 3\n1 3 4\n1 3 5\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1\n2\n3\n1\n5\n5\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc002/tasks/agc002_d"}