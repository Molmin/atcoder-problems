{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1000</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>高橋くんとすぬけくんは、数列を使った次のようなゲームを思いつきました。</p>\n<ul>\n<li>\n<p><var>0</var> 以上 <var>2^N</var> 未満の整数からなる、長さ <var>M</var> の数列 <var>a = a_1, a_2, \\ldots, a_M</var> を用意する。</p>\n</li>\n<li>\n<p>まずすぬけくんは、以下の操作を好きな回数行う。</p>\n<ul>\n<li>ある正整数 <var>d</var> を選び、全ての <var>i~(1 \\leq i \\leq M)</var> について、<var>a_i</var> を <var>2</var> 進数で表したときの <var>d</var> 桁目（最下位桁は <var>1</var> 桁目とする）を <var>0</var> にする。</li>\n</ul>\n</li>\n<li>\n<p>すぬけくんの操作が全て終わったあと高橋くんは、以下の操作を好きな回数行い <var>a</var> を昇順に並べ替えることを目指す。ここで <var>a</var> が昇順であるとは、任意の <var>i ~ (1 \\leq i \\leq M - 1)</var> について <var>a_i \\leq a_{i + 1}</var> であることを言う。</p>\n<ul>\n<li><var>a</var> の隣接する <var>2</var> 要素 <var>a_i, a_{i + 1}</var> を選び、<var>a_i, a_{i + 1}</var> を <var>2</var> 進数で表したときちょうど <var>1</var> 桁が異なる場合、<var>a_i, a_{i + 1}</var> をスワップする。  </li>\n</ul>\n</li>\n</ul>\n<p>ゲームで使うことができる、<var>0</var> 以上 <var>2^N</var> 未満の整数からなる、長さ <var>M</var> の数列は <var>2^{NM}</var> 個存在します。</p>\n<p>このうちゲームで使ったとき、すぬけくんがどのように操作を行ったとしても、高橋くんが適当な操作を行うことで昇順に並べ替えることができるものは何個あるでしょうか。\n<var>10^9 + 7</var> で割った余りを求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li>入力は全て整数である。</li>\n<li><var>1 \\leq N \\leq 5000</var></li>\n<li><var>2 \\leq M \\leq 5000</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>ゲームで使ったとき、すぬけくんがどのように操作を行ったとしても、高橋くんが適当な操作を行うことで昇順に並べ替えることができる数列の個数を <var>10^9 + 7</var> で割った余りを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>2 5\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>352\n</pre>\n\n<p>例えば <var>a = 1, 3, 1, 3, 1</var> の場合を考えます。このとき、</p>\n<ul>\n<li><var>a</var> の各要素の <var>1</var> 桁目を <var>0</var> にすると <var>a = 0, 2, 0, 2, 0</var> に、</li>\n<li><var>a</var> の各要素の <var>2</var> 桁目を <var>0</var> にすると <var>a = 1, 1, 1, 1, 1</var> に、</li>\n<li><var>a</var> の各要素の <var>1, 2</var> 桁目を <var>0</var> にすると <var>a = 0, 0, 0, 0, 0</var> に、</li>\n</ul>\n<p>なります。\nすぬけくんが操作を行わず <var>a</var> が変わらない場合も含めて、いずれの場合も、<var>2</var> 進数でちょうど <var>1</var> 桁が異なる隣接要素のスワップを繰り返して、昇順に並び替えることができます。\nよってこの数列は、ゲームで使ったとき、すぬけくんがどのように操作を行っても高橋くんが適当な操作を行うことで昇順に並べ替えることができる数列の <var>1</var> つです。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>2020 530\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>823277409\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1000</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Takahashi and Snuke came up with a game that uses a number sequence, as follows:</p>\n<ul>\n<li>\n<p>Prepare a sequence of length <var>M</var> consisting of integers between <var>0</var> and <var>2^N-1</var> (inclusive): <var>a = a_1, a_2, \\ldots, a_M</var>.</p>\n</li>\n<li>\n<p>Snuke first does the operation below as many times as he likes:</p>\n<ul>\n<li>Choose a positive integer <var>d</var>, and for each <var>i</var> <var>(1 \\leq i \\leq M)</var>, in binary, set the <var>d</var>-th least significant bit of <var>a_i</var> to <var>0</var>. (Here the least significant bit is considered the <var>1</var>-st least significant bit.)</li>\n</ul>\n</li>\n<li>\n<p>After Snuke finishes doing operations, Takahashi tries to sort <var>a</var> in ascending order by doing the operation below some number of times. Here <var>a</var> is said to be in ascending order when <var>a_i \\leq a_{i + 1}</var> for all <var>i</var> <var>(1 \\leq i \\leq M - 1)</var>.</p>\n<ul>\n<li>Choose two adjacent elements of <var>a</var>: <var>a_i</var> and <var>a_{i + 1}</var>. If, in binary, these numbers differ in exactly one bit, swap <var>a_i</var> and <var>a_{i + 1}</var>.</li>\n</ul>\n</li>\n</ul>\n<p>There are <var>2^{NM}</var> different sequences of length <var>M</var> consisting of integers between <var>0</var> and <var>2^N-1</var> that can be used in the game.</p>\n<p>How many among them have the following property: if used in the game, there is always a way for Takahashi to sort the sequence in ascending order regardless of Snuke's operations? Find the count modulo <var>(10^9 + 7)</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li>All values in input are integers.</li>\n<li><var>1 \\leq N \\leq 5000</var></li>\n<li><var>2 \\leq M \\leq 5000</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the number, modulo <var>(10^9 + 7)</var>, of sequences with the property: if used in the game, there is always a way for Takahashi to sort the sequence in ascending order regardless of Snuke's operations.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>2 5\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>352\n</pre>\n\n<p>Consider the case <var>a = 1, 3, 1, 3, 1</var> for example.</p>\n<ul>\n<li>When the least significant bit of each element of <var>a</var> is set to <var>0</var>, <var>a = 0, 2, 0, 2, 0</var>;</li>\n<li>When the second least significant bit of each element of <var>a</var> is set to <var>0</var>, <var>a = 1, 1, 1, 1, 1</var>;</li>\n<li>When the least two significant bits of each element of <var>a</var> are set to <var>0</var>, <var>a = 0, 0, 0, 0, 0</var>.</li>\n</ul>\n<p>In all of the cases above and the case when Snuke does no operation to change <var>a</var>, we can sort the sequence by repeatedly swapping adjacent elements that differ in exactly one bit.\nThus, this sequence has the property: if used in the game, there is always a way for Takahashi to sort the sequence in ascending order regardless of Snuke's operations.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>2020 530\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>823277409\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/nomura2020/tasks/nomura2020_f"}