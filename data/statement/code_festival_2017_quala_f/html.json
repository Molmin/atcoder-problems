{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1600</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>A</var> 匹のスライムが横一列に並んでいます。\n最初、スライムの大きさはすべて <var>1</var> です。</p>\n<p>すぬけ君は次の操作を繰り返し行うことができます。</p>\n<ul>\n<li>正の偶数 <var>M</var> をひとつ選ぶ。 位置が連続する <var>M</var> 匹のスライムを選び、それらのうち左から <var>(1,\\ 2)</var> 番目、<var>(3,\\ 4)</var> 番目、…、<var>(M - 1,\\ M)</var> 番目のスライムをそれぞれペアにする。 そして、各ペアごとに <var>2</var> 匹のスライムを合成して <var>1</var> 匹のスライムにする。 ここで、合成後のスライムの大きさは、合成前のスライムの大きさの和とする。 また、合成後の <var>M / 2</var> 匹のスライムの順序は、合成前の <var>M / 2</var> 組のペアの順序のままである。</li>\n</ul>\n<p>すぬけ君の目標は、スライムをちょうど <var>N</var> 匹にして、それらのうち左から <var>i</var> (<var>1 ≤ i ≤ N</var>) 番目のスライムの大きさをちょうど <var>a_i</var> にすることです。\nすぬけ君が目標を達成するために必要な操作回数の最小値を求めてください。</p>\n<p>なお、<var>A</var> は入力として与えられず、<var>A = a_1 + a_2 + ... + a_N</var> であるとします。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 ≤ N ≤ 10^5</var></li>\n<li><var>a_i</var> は整数である。</li>\n<li><var>1 ≤ a_i ≤ 10^9</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>a_1</var> <var>a_2</var> <var>...</var> <var>a_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>すぬけ君が目標を達成するために必要な操作回数の最小値を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>2\n3 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>2\n</pre>\n\n<p>次のように操作を行えばよいです。\n操作対象のスライムを太字で表しています。</p>\n<ul>\n<li>(1, <strong>1</strong>, <strong>1</strong>, <strong>1</strong>, <strong>1</strong>, 1) → (1, <strong>2</strong>, <strong>2</strong>, 1)</li>\n<li>(<strong>1</strong>, <strong>2</strong>, <strong>2</strong>, <strong>1</strong>) → (<strong>3</strong>, <strong>3</strong>)</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>4\n2 1 2 2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>2\n</pre>\n\n<p>次のように操作を行えばよいです。</p>\n<ul>\n<li>(<strong>1</strong>, <strong>1</strong>, 1, 1, 1, 1, 1) → (<strong>2</strong>, 1, 1, 1, 1, 1)</li>\n<li>(2, 1, <strong>1</strong>, <strong>1</strong>, <strong>1</strong>, <strong>1</strong>) → (2, 1, <strong>2</strong>, <strong>2</strong>)</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>1\n1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>0\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 4</h3><pre>10\n3 1 4 1 5 9 2 6 5 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 4</h3><pre>10\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1600</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There are <var>A</var> slimes lining up in a row.\nInitially, the sizes of the slimes are all <var>1</var>.</p>\n<p>Snuke can repeatedly perform the following operation.</p>\n<ul>\n<li>Choose a positive even number <var>M</var>. Then, select <var>M</var> consecutive slimes and form <var>M / 2</var> pairs from those slimes as follows: pair the <var>1</var>-st and <var>2</var>-nd of them from the left, the <var>3</var>-rd and <var>4</var>-th of them, <var>...</var>, the <var>(M-1)</var>-th and <var>M</var>-th of them. Combine each pair of slimes into one larger slime. Here, the size of a combined slime is the sum of the individual slimes before combination. The order of the <var>M / 2</var> combined slimes remain the same as the <var>M / 2</var> pairs of slimes before combination.</li>\n</ul>\n<p>Snuke wants to get to the situation where there are exactly <var>N</var> slimes, and the size of the <var>i</var>-th (<var>1 ≤ i ≤ N</var>) slime from the left is <var>a_i</var>.\nFind the minimum number of operations required to achieve his goal.</p>\n<p>Note that <var>A</var> is not directly given as input. Assume <var>A = a_1 + a_2 + ... + a_N</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 ≤ N ≤ 10^5</var></li>\n<li><var>a_i</var> is an integer.</li>\n<li><var>1 ≤ a_i ≤ 10^9</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>a_1</var> <var>a_2</var> <var>...</var> <var>a_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the minimum number of operations required to achieve Snuke's goal.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>2\n3 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>2\n</pre>\n\n<p>One way to achieve Snuke's goal is as follows.\nHere, the selected slimes are marked in bold.</p>\n<ul>\n<li>(1, <strong>1</strong>, <strong>1</strong>, <strong>1</strong>, <strong>1</strong>, 1) → (1, <strong>2</strong>, <strong>2</strong>, 1)</li>\n<li>(<strong>1</strong>, <strong>2</strong>, <strong>2</strong>, <strong>1</strong>) → (<strong>3</strong>, <strong>3</strong>)</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>4\n2 1 2 2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>2\n</pre>\n\n<p>One way to achieve Snuke's goal is as follows.</p>\n<ul>\n<li>(<strong>1</strong>, <strong>1</strong>, 1, 1, 1, 1, 1) → (<strong>2</strong>, 1, 1, 1, 1, 1)</li>\n<li>(2, 1, <strong>1</strong>, <strong>1</strong>, <strong>1</strong>, <strong>1</strong>) → (2, 1, <strong>2</strong>, <strong>2</strong>)</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>1\n1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>0\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 4</h3><pre>10\n3 1 4 1 5 9 2 6 5 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 4</h3><pre>10\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/code-festival-2017-quala/tasks/code_festival_2017_quala_f"}