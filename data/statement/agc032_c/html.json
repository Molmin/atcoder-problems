{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>800</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点 <var>M</var> 本の辺からなる単純かつ連結な無向グラフが与えられます。\n頂点には <var>1</var> から <var>N</var> の番号が、辺には <var>1</var> から <var>M</var> の番号がついています。</p>\n<p>辺 <var>i</var> は頂点 <var>a_i</var> と <var>b_i</var> を双方向につなぐ辺です。</p>\n<p>全ての辺をちょうど <var>1</var> 回ずつ使って <var>3</var> つのサーキットを作ることが可能かどうかを判定してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>注釈</h3><p>サーキットとは辺素だが頂点素とは限らない閉路のことをいう。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li>入力はすべて整数である。</li>\n<li><var>1 \\leq N,M \\leq 10^{5}</var></li>\n<li><var>1 \\leq a_i, b_i \\leq N</var></li>\n<li>与えられるグラフは単純かつ連結。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>a_1</var> <var>b_1</var>\n<var>:</var>\n<var>a_M</var> <var>b_M</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>全ての辺をちょうど <var>1</var> 回ずつ使って <var>3</var> つのサーキットを作ることが可能ならば <code>Yes</code> を、不可能ならば <code>No</code> を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>7 9\n1 2\n1 3\n2 3\n1 4\n1 5\n4 5\n1 6\n1 7\n6 7\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>Yes\n</pre>\n\n<ul>\n<li>以下の図のように、全ての辺をちょうど <var>1</var> 回ずつ使って <var>3</var> つのサーキットを作ることができます。\n<div style=\"text-align: center;\">\n<img alt=\"b8c8e2245d45a31cf39749b0a49fc2bd.png\" src=\"https://img.atcoder.jp/agc031/b8c8e2245d45a31cf39749b0a49fc2bd.png\">\n</div></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>3 3\n1 2\n2 3\n3 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>No\n</pre>\n\n<ul>\n<li><var>3</var> つのサーキットを作る必要があります。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>18 27\n17 7\n12 15\n18 17\n13 18\n13 6\n5 7\n7 1\n14 5\n15 11\n7 6\n1 9\n5 4\n18 16\n4 6\n7 2\n7 11\n6 3\n12 14\n5 2\n10 5\n7 8\n10 15\n3 15\n9 8\n7 15\n5 16\n18 15\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>Yes\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>800</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a simple connected undirected graph consisting of <var>N</var> vertices and <var>M</var> edges.\nThe vertices are numbered <var>1</var> to <var>N</var>, and the edges are numbered <var>1</var> to <var>M</var>.</p>\n<p>Edge <var>i</var> connects Vertex <var>a_i</var> and <var>b_i</var> bidirectionally.</p>\n<p>Determine if three circuits (see Notes) can be formed using each of the edges exactly once.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Notes</h3><p>A circuit is a cycle allowing repetitions of vertices but not edges.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li>All values in input are integers.</li>\n<li><var>1 \\leq N,M \\leq 10^{5}</var></li>\n<li><var>1 \\leq a_i, b_i \\leq N</var></li>\n<li>The given graph is simple and connected.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>a_1</var> <var>b_1</var>\n<var>:</var>\n<var>a_M</var> <var>b_M</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If three circuits can be formed using each of the edges exactly once, print <code>Yes</code>; if they cannot, print <code>No</code>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>7 9\n1 2\n1 3\n2 3\n1 4\n1 5\n4 5\n1 6\n1 7\n6 7\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>Yes\n</pre>\n\n<ul>\n<li>Three circuits can be formed using each of the edges exactly once, as follows:\n<div style=\"text-align: center;\">\n<img alt=\"b8c8e2245d45a31cf39749b0a49fc2bd.png\" src=\"https://img.atcoder.jp/agc031/b8c8e2245d45a31cf39749b0a49fc2bd.png\">\n</div></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>3 3\n1 2\n2 3\n3 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>No\n</pre>\n\n<ul>\n<li>Three circuits are needed.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>18 27\n17 7\n12 15\n18 17\n13 18\n13 6\n5 7\n7 1\n14 5\n15 11\n7 6\n1 9\n5 4\n18 16\n4 6\n7 2\n7 11\n6 3\n12 14\n5 2\n10 5\n7 8\n10 15\n3 15\n9 8\n7 15\n5 16\n18 15\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>Yes\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc032/tasks/agc032_c"}