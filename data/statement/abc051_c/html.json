{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>300</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>イルカは <var>x</var> 軸正方向を右、<var>y</var> 軸正方向を上とする 2 次元座標平面にいます。<br>\nイルカは現在点 <var>(sx,sy)</var> にいて、<var>1</var> 秒あたり上下左右に距離 <var>1</var> だけ進むことができます。<br>\nこのとき、移動前と移動後の <var>x</var> 座標、<var>y</var> 座標はともに整数でなければなりません。<br>\nイルカはここから <var>sx &lt; tx</var> と <var>sy &lt; ty</var> を満たす点 <var>(tx,ty)</var> に行き、その後点 <var>(sx,sy)</var> に戻り、また点 <var>(tx,ty)</var> に行き、その後点 <var>(sx,sy)</var> に戻ります。<br>\nこのとき、イルカは点 <var>(sx,sy)</var> と点 <var>(tx,ty)</var> を除いて、途中で同じ座標を複数回通らないように移動しなければなりません。<br>\nこのような条件を満たすイルカの最短経路を <var>1</var> つ求めてください。  </p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>-1000≦ sx &lt; tx ≦1000</var>  </li>\n<li><var>-1000≦ sy &lt; ty ≦1000</var>  </li>\n<li><var>sx,sy,tx,ty</var> は整数である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>sx</var> <var>sy</var> <var>tx</var> <var>ty</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>イルカの最短経路を表す文字列 <var>S</var> を出力せよ。<br>\n<var>S</var> の <var>i</var> 番目の文字はイルカの <var>i</var> 番目の移動を表す。<br>\nイルカの各方向への移動を表す文字の対応関係は以下のとおりである。    </p>\n<ul>\n<li><code>U</code>: 上方向  </li>\n<li><code>D</code>: 下方向  </li>\n<li><code>L</code>: 左方向  </li>\n<li><code>R</code>: 右方向  </li>\n</ul>\n<p>条件を満たすような最短経路が複数ある場合、そのうちどれか <var>1</var> つを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>0 0 1 2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>UURDDLLUUURRDRDDDLLU\n</pre>\n\n<p>以下に示す移動経路が最短経路の <var>1</var> つです。  </p>\n<ul>\n<li><var>1</var> 回目の <var>(sx,sy)</var> から <var>(tx,ty)</var> への移動: <var>(0,0)</var> → <var>(0,1)</var> → <var>(0,2)</var> → <var>(1,2)</var>  </li>\n<li><var>1</var> 回目の <var>(tx,ty)</var> から <var>(sx,sy)</var> への移動: <var>(1,2)</var> → <var>(1,1)</var> → <var>(1,0)</var> → <var>(0,0)</var>  </li>\n<li><var>2</var> 回目の <var>(sx,sy)</var> から <var>(tx,ty)</var> への移動: <var>(0,0)</var> → <var>(-1,0)</var> → <var>(-1,1)</var> → <var>(-1,2)</var> → <var>(-1,3)</var> → <var>(0,3)</var> → <var>(1,3)</var> → <var>(1,2)</var>  </li>\n<li><var>2</var> 回目の <var>(tx,ty)</var> から <var>(sx,sy)</var> への移動: <var>(1,2)</var> → <var>(2,2)</var> → <var>(2,1)</var> → <var>(2,0)</var> → <var>(2,-1)</var> → <var>(1,-1)</var> → <var>(0,-1)</var> → <var>(0,0)</var>  </li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>-2 -2 1 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>UURRURRDDDLLDLLULUUURRURRDDDLLDL\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>300</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Dolphin resides in two-dimensional Cartesian plane, with the positive <var>x</var>-axis pointing right and the positive <var>y</var>-axis pointing up.<br>\nCurrently, he is located at the point <var>(sx,sy)</var>. In each second, he can move up, down, left or right by a distance of <var>1</var>.<br>\nHere, both the <var>x</var>- and <var>y</var>-coordinates before and after each movement must be integers.<br>\nHe will first visit the point <var>(tx,ty)</var> where <var>sx &lt; tx</var> and <var>sy &lt; ty</var>, then go back to the point <var>(sx,sy)</var>, then visit the point <var>(tx,ty)</var> again, and lastly go back to the point <var>(sx,sy)</var>.<br>\nHere, during the whole travel, he is not allowed to pass through the same point more than once, except the points <var>(sx,sy)</var> and <var>(tx,ty)</var>.<br>\nUnder this condition, find a shortest path for him.  </p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>-1000 ≤ sx &lt; tx ≤ 1000</var>  </li>\n<li><var>-1000 ≤ sy &lt; ty ≤ 1000</var>  </li>\n<li><var>sx,sy,tx</var> and <var>ty</var> are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>sx</var> <var>sy</var> <var>tx</var> <var>ty</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print a string <var>S</var> that represents a shortest path for Dolphin.<br>\nThe <var>i</var>-th character in <var>S</var> should correspond to his <var>i</var>-th movement.<br>\nThe directions of the movements should be indicated by the following characters:  </p>\n<ul>\n<li><code>U</code>: Up</li>\n<li><code>D</code>: Down</li>\n<li><code>L</code>: Left</li>\n<li><code>R</code>: Right</li>\n</ul>\n<p>If there exist multiple shortest paths under the condition, print any of them.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>0 0 1 2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>UURDDLLUUURRDRDDDLLU\n</pre>\n\n<p>One possible shortest path is:</p>\n<ul>\n<li>Going from <var>(sx,sy)</var> to <var>(tx,ty)</var> for the first time: <var>(0,0)</var> → <var>(0,1)</var> → <var>(0,2)</var> → <var>(1,2)</var></li>\n<li>Going from <var>(tx,ty)</var> to <var>(sx,sy)</var> for the first time: <var>(1,2)</var> → <var>(1,1)</var> → <var>(1,0)</var> → <var>(0,0)</var></li>\n<li>Going from <var>(sx,sy)</var> to <var>(tx,ty)</var> for the second time: <var>(0,0)</var> → <var>(-1,0)</var> → <var>(-1,1)</var> → <var>(-1,2)</var> → <var>(-1,3)</var> → <var>(0,3)</var> → <var>(1,3)</var> → <var>(1,2)</var></li>\n<li>Going from <var>(tx,ty)</var> to <var>(sx,sy)</var> for the second time: <var>(1,2)</var> → <var>(2,2)</var> → <var>(2,1)</var> → <var>(2,0)</var> → <var>(2,-1)</var> → <var>(1,-1)</var> → <var>(0,-1)</var> → <var>(0,0)</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>-2 -2 1 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>UURRURRDDDLLDLLULUUURRURRDDDLLDL\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc051/tasks/abc051_c"}