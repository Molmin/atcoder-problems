{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1400</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>以下のように、木がウニ度 <var>k</var> であるということを再帰的に定義します。</p>\n<ul>\n<li><var>1</var> 頂点からなる木はウニ度 <var>0</var> の木である。</li>\n<li>ウニ度 <var>k</var> の木を <var>0</var> 個以上と、ひとつの頂点 <var>v</var> を用意する。用意した各ウニ度 <var>k</var> の木から頂点をひとつずつ選び、その選んだ頂点と <var>v</var> を辺で結ぶ。こうしてできた木はウニ度 <var>k+1</var> の木である。</li>\n</ul>\n<p>ウニ度 <var>k</var> の木はウニ度 <var>k+1,k+2,...</var> の木でもあることが証明できます。</p>\n<p><var>N</var> 頂点からなる木が与えられます。\nこの木の頂点には <var>1</var> から <var>N</var> までの番号がついており、<var>N-1</var> 本の辺のうちの <var>i</var> 本目は頂点 <var>a_i</var> と <var>b_i</var> を結んでいます。</p>\n<p>与えられた木がウニ度 <var>k</var> であるような最小の <var>k</var> を求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 ≦ N ≦ 10^5</var></li>\n<li><var>1 ≦ a_i, b_i ≦ N(1 ≦ i ≦ N-1)</var></li>\n<li>与えられるグラフは木である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>a_1</var> <var>b_1</var>\n:\n<var>a_{N-1}</var> <var>b_{N-1}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>与えられた木がウニ度 <var>k</var> であるような最小の <var>k</var> を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>7\n1 2\n2 3\n2 4\n4 6\n6 7\n7 5\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>2\n</pre>\n\n<p>頂点 <var>1</var> からなるウニ度 <var>0</var> の木と、頂点 <var>3</var> からなるウニ度 <var>0</var> の木と、頂点 <var>4</var> からなるウニ度 <var>0</var> の木と、\n頂点 <var>2</var> を組み合わせることで頂点 <var>1,2,3,4</var> からなるウニ度 <var>1</var> の木を作ることができ、</p>\n<p>頂点 <var>5</var> からなるウニ度 <var>0</var> の木と、\n頂点 <var>7</var> を組み合わせることで頂点 <var>5,7</var> からなるウニ度 <var>1</var> の木を作ることができ、</p>\n<p>頂点 <var>1,2,3,4</var> からなるウニ度 <var>1</var> の木と、頂点 <var>5,7</var> からなるウニ度 <var>1</var> の木と、\n頂点 <var>6</var> を組み合わせることで頂点 <var>1,2,3,4,5,6,7</var> からなるウニ度 <var>2</var> の木を作ることができます。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>12\n1 2\n2 3\n2 4\n4 5\n5 6\n6 7\n7 8\n5 9\n9 10\n10 11\n11 12\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>3\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1400</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>We will recursively define <em>uninity</em> of a tree, as follows: (<em>Uni</em> is a Japanese word for sea urchins.)</p>\n<ul>\n<li>A tree consisting of one vertex is a tree of uninity <var>0</var>.</li>\n<li>Suppose there are zero or more trees of uninity <var>k</var>, and a vertex <var>v</var>. If a vertex is selected from each tree of uninity <var>k</var> and connected to <var>v</var> with an edge, the resulting tree is a tree of uninity <var>k+1</var>.</li>\n</ul>\n<p>It can be shown that a tree of uninity <var>k</var> is also a tree of uninity <var>k+1,k+2,...</var>, and so forth.</p>\n<p>You are given a tree consisting of <var>N</var> vertices.\nThe vertices of the tree are numbered <var>1</var> through <var>N</var>, and the <var>i</var>-th of the <var>N-1</var> edges connects vertices <var>a_i</var> and <var>b_i</var>.</p>\n<p>Find the minimum <var>k</var> such that the given tree is a tree of uninity <var>k</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 ≦ N ≦ 10^5</var></li>\n<li><var>1 ≦ a_i, b_i ≦ N(1 ≦ i ≦ N-1)</var></li>\n<li>The given graph is a tree.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>a_1</var> <var>b_1</var>\n:\n<var>a_{N-1}</var> <var>b_{N-1}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the minimum <var>k</var> such that the given tree is a tree of uninity <var>k</var>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>7\n1 2\n2 3\n2 4\n4 6\n6 7\n7 5\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>2\n</pre>\n\n<p>A tree of uninity <var>1</var> consisting of vertices <var>1</var>, <var>2</var>, <var>3</var> and <var>4</var> can be constructed from the following: a tree of uninity <var>0</var> consisting of vertex <var>1</var>, a tree of uninity <var>0</var> consisting of vertex <var>3</var>, a tree of uninity <var>0</var> consisting of vertex <var>4</var>, and vertex <var>2</var>.</p>\n<p>A tree of uninity <var>1</var> consisting of vertices <var>5</var> and <var>7</var> can be constructed from the following: a tree of uninity <var>1</var> consisting of vertex <var>5</var>, and vertex <var>7</var>.</p>\n<p>A tree of uninity <var>2</var> consisting of vertices <var>1</var>, <var>2</var>, <var>3</var>, <var>4</var>, <var>5</var>, <var>6</var> and <var>7</var> can be constructed from the following: a tree of uninity <var>1</var> consisting of vertex <var>1</var>, <var>2</var>, <var>3</var> and <var>4</var>, a tree of uninity <var>1</var> consisting of vertex <var>5</var> and <var>7</var>, and vertex <var>6</var>.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>12\n1 2\n2 3\n2 4\n4 5\n5 6\n6 7\n7 8\n5 9\n9 10\n10 11\n11 12\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>3\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc009/tasks/agc009_d"}