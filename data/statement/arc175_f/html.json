{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1000</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>英小文字からなる <var>N</var> 個の文字列 <var>S_1, \\dots, S_N</var> が与えられます．以下の <var>2</var> 種類の操作を好きな順番で <var>0</var> 回以上好きな回数行うことを考えます．</p>\n<ul>\n<li>英小文字 <var>c</var> を <var>1</var> つ選ぶ．全ての <var>1 \\leq i\\leq N</var> について，<var>S_i</var> の末尾に <var>c</var> を追加する．</li>\n<li><var>1 \\leq i \\leq N-1</var> を満たす整数 <var>i</var> を <var>1</var> つ選ぶ．<var>S_i</var> と <var>S_{i+1}</var> を入れ替える．</li>\n</ul>\n<p>全ての操作の終了後に，辞書順で <var>S_i \\leq S_{i+1}</var> が各 <var>1 \\leq i \\leq N-1</var> について成り立つようにするとき，操作の合計回数の最小値を求めてください．</p>\n<details> <summary>辞書順とは</summary>\n\n<p>文字列 <var>S = S_1S_2\\ldots S_{|S|}</var> が文字列 <var>T = T_1T_2\\ldots T_{|T|}</var> より<strong>辞書順で小さい</strong>とは，下記の 1. と 2. のどちらかが成り立つことを言います．\nここで，<var>|S|, |T|</var> はそれぞれ <var>S, T</var> の長さを表します．</p>\n\n<ol>\n<li> <var>|S| \\lt |T|</var> かつ <var>S_1S_2\\ldots S_{|S|} = T_1T_2\\ldots T_{|S|}</var>． </li>\n<li> ある整数 <var>1 \\leq i \\leq \\min\\lbrace |S|, |T| \\rbrace</var> が存在して，下記の <var>2</var> つがともに成り立つ．\n<ul>\n<li> <var>S_1S_2\\ldots S_{i-1} = T_1T_2\\ldots T_{i-1}</var>．</li>\n<li> <var>S_i</var> が <var>T_i</var> よりアルファベット順で小さい文字である．</li>\n</ul>\n</li></ol>\n\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li>入力される数値は全て整数</li>\n<li><var>2 \\le N \\le 3 \\times 10^5</var></li>\n<li><var>S_i</var> は英小文字からなる文字列</li>\n<li><var>1 \\le |S_i|</var></li>\n<li><var>|S_1| + |S_2| + \\dots + |S_N| \\le 3 \\times 10^5</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる．</p>\n<pre><var>N</var>\n<var>S_1</var>\n<var>S_2</var>\n<var>\\vdots</var>\n<var>S_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>答えを <var>1</var> 行に出力せよ．</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5\nab\nrac\na\ndab\nra\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>3\n</pre>\n\n<p>操作の一例を示します．</p>\n<ul>\n<li><var>S_2</var> と <var>S_3</var> を入れ替える．<var>(S_1, \\ldots, S_5) = (</var><code>ab</code>, <code>a</code>, <code>rac</code>, <code>dab</code>, <code>ra</code><var>)</var> となる．</li>\n<li>各文字列の末尾に <code>z</code> を追加する．<var>(S_1, \\ldots, S_5) = (</var><code>abz</code>, <code>az</code>, <code>racz</code>, <code>dabz</code>, <code>raz</code><var>)</var> となる．</li>\n<li><var>S_3</var> と <var>S_4</var> を入れ替える．<var>(S_1, \\ldots, S_5) = (</var><code>abz</code>, <code>az</code>, <code>dabz</code>, <code>racz</code>, <code>raz</code><var>)</var> となる．このとき全ての <var>i = 1, \\ldots, N-1</var> について <var>S_i \\leq S_{i+1}</var> が満たされている．</li>\n</ul>\n<p><var>3</var> 回未満の操作により，全ての <var>i = 1, \\ldots, N-1</var> について <var>S_i \\leq S_{i+1}</var> が満たされている状態にすることはできないので，<var>3</var> を出力します．</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>3\nkitekuma\nnok\nzkou\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>0\n</pre>\n\n<p>操作を行う前の時点で，全ての <var>i = 1, \\ldots, N-1</var> について <var>S_i \\leq S_{i+1}</var> が満たされています．</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>31\narc\narrc\nrc\nrac\na\nrc\naara\nra\ncaac\ncr\ncarr\nrrra\nac\nr\nccr\na\nc\naa\nacc\nrar\nr\nc\nr\na\nr\nrc\na\nr\nrc\ncr\nc\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>175\n</pre>\n\n<p><var>i \\neq j</var> に対して <var>S_i = S_j</var> となりうることに注意してください．</p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score: <var>1000</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given <var>N</var> strings <var>S_1, \\dots, S_N</var> consisting of lowercase English letters. Consider performing the following two types of operations zero or more times in any order:</p>\n<ul>\n<li>Choose one lowercase letter <var>c</var>. Append <var>c</var> to the end of <var>S_i</var> for all <var>1 \\leq i \\leq N</var>.</li>\n<li>Choose an integer <var>i</var> such that <var>1 \\leq i \\leq N-1</var>. Swap <var>S_i</var> and <var>S_{i+1}</var>.</li>\n</ul>\n<p>Find the minimum total number of operations required to make <var>S_i \\leq S_{i+1}</var> in lexicographical order for all <var>1 \\leq i \\leq N-1</var>.</p>\n<details> <summary>What is lexicographical order?</summary>\n\n<p>A string <var>S = S_1S_2\\ldots S_{|S|}</var> is said to be <strong>lexicographically smaller</strong> than a string <var>T = T_1T_2\\ldots T_{|T|}</var> if 1. or 2. below holds.\nHere, <var>|S|</var> and <var>|T|</var> denote the lengths of <var>S</var> and <var>T</var>, respectively.</p>\n\n<ol>\n<li> <var>|S| \\lt |T|</var> and <var>S_1S_2\\ldots S_{|S|} = T_1T_2\\ldots T_{|S|}</var>.</li>\n<li> There is an integer <var>1 \\leq i \\leq \\min\\lbrace |S|, |T| \\rbrace</var> such that both of the following hold:\n<ul>\n<li> <var>S_1S_2\\ldots S_{i-1} = T_1T_2\\ldots T_{i-1}</var>.</li>\n<li> The letter <var>S_i</var> comes before <var>T_i</var> in alphabetical order.</li>\n</ul>\n</li></ol>\n\n</details>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li>All input values are integers.</li>\n<li><var>2 \\le N \\le 3 \\times 10^5</var></li>\n<li><var>S_i</var> is a string consisting of lowercase English letters.</li>\n<li><var>1 \\le |S_i|</var></li>\n<li><var>|S_1| + |S_2| + \\dots + |S_N| \\le 3 \\times 10^5</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>S_1</var>\n<var>S_2</var>\n<var>\\vdots</var>\n<var>S_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the answer in a single line.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5\nab\nrac\na\ndab\nra\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>3\n</pre>\n\n<p>Here is one way to operate.</p>\n<ul>\n<li>Swap <var>S_2</var> and <var>S_3</var>. Now <var>(S_1, \\ldots, S_5) = (</var><code>ab</code>, <code>a</code>, <code>rac</code>, <code>dab</code>, <code>ra</code><var>)</var>.</li>\n<li>Append <code>z</code> to the end of each string. Now <var>(S_1, \\ldots, S_5) = (</var><code>abz</code>, <code>az</code>, <code>racz</code>, <code>dabz</code>, <code>raz</code><var>)</var>.</li>\n<li>Swap <var>S_3</var> and <var>S_4</var>. Now <var>(S_1, \\ldots, S_5) = (</var><code>abz</code>, <code>az</code>, <code>dabz</code>, <code>racz</code>, <code>raz</code><var>)</var>. At this point, we have <var>S_i \\leq S_{i+1}</var> for all <var>i = 1, \\ldots, N-1</var>.</li>\n</ul>\n<p>It is impossible to make <var>S_i \\leq S_{i+1}</var> for all <var>i = 1, \\ldots, N-1</var> with fewer than three operations, so you should print <var>3</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>3\nkitekuma\nnok\nzkou\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>0\n</pre>\n\n<p>Before any operation is performed, we have <var>S_i \\leq S_{i+1}</var> for all <var>i = 1, \\ldots, N-1</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>31\narc\narrc\nrc\nrac\na\nrc\naara\nra\ncaac\ncr\ncarr\nrrra\nac\nr\nccr\na\nc\naa\nacc\nrar\nr\nc\nr\na\nr\nrc\na\nr\nrc\ncr\nc\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>175\n</pre>\n\n<p>Note that we may have <var>S_i = S_j</var> for <var>i \\neq j</var>.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc175/tasks/arc175_f"}