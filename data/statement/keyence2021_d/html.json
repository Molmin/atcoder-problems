{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>700</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> を正の整数とします。\n<var>2</var> つの <var>2^{N-1}</var> 人チームが対戦する競技があります。</p>\n<p><var>1</var> から <var>2^N</var> の番号がついた <var>2^N</var> 人の人がいます。\nすぬけ監督は、彼らを A と B の <var>2</var> つの <var>2^{N-1}</var> 人チームに分けて対戦させる、という操作を何回でも行うことができます。</p>\n<p>すぬけ監督は、<var>1</var> 回以上操作を行った後、以下の <var>2</var> つの条件の両方を満たすようにしたいです。</p>\n<ol>\n<li>ある整数 <var>n</var> が存在して、<var>1 \\leq i &lt; j \\leq 2^N</var> を満たす任意の <var>(i,j)</var> について、人 <var>i</var> と人 <var>j</var> が <strong>同じ</strong> チームだった回数が <var>n</var> 回</li>\n<li>ある整数 <var>m</var> が存在して、<var>1 \\leq i &lt; j \\leq 2^N</var> を満たす任意の <var>(i,j)</var> について、人 <var>i</var> と人 <var>j</var> が <strong>異なる</strong> チームだった回数が <var>m</var> 回</li>\n</ol>\n<p>すぬけ監督の要望を満たすような操作列が存在することが証明できます。そのうち <strong>操作回数が最小</strong> であるようなものの一例を示してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li>与えられる入力は全て整数</li>\n<li><var>1 \\leq N \\leq 8</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>下記のフォーマットで操作列を出力せよ。</p>\n<pre><var>K</var>\n<var>s_1</var>\n<var>s_2</var>\n<var>\\vdots</var>\n<var>s_K</var>\n</pre>\n\n<p>ここで、<var>K</var> は操作列の長さを、<var>s_i</var> は <var>i</var> 回目の操作でのチーム分けを表す。\n<var>s_{i}</var> は長さ <var>2^N</var> の <code>A</code>, <code>B</code> のみからなる文字列であり、<var>s_{i}</var> の <var>{j}</var> 文字目が <code>A</code> ならば <var>i</var> 回目の操作で人 <var>j</var> はチーム A に所属していたことを、<code>B</code> ならばチーム B に所属していたことを表す。<code>A</code>, <code>B</code> は <var>s_i</var> において <var>2^{N-1}</var> 回ずつ出現する必要があることに注意せよ。</p>\n<p><var>K</var> が要望を満たす操作列の長さとして最小であり、操作の結果すぬけ監督の要望が満たされたならば正解となる。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1\nAB\n</pre>\n\n<ul>\n<li><var>1</var> 回操作を行うことですぬけ監督の要望を満たすことができます。</li>\n<li>操作は <var>1</var> 回以上行う必要があることに注意してください。</li>\n</ul></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>700</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Let <var>N</var> be a positive integer.\nConsider a competition where two teams, each with <var>2^{N-1}</var> players, play against each other.</p>\n<p>We have <var>2^N</var> players numbered <var>1</var> through <var>2^N</var>.\nCoach Snuke can do the following operation any number of times: separate the players into two teams A and B, each with <var>2^{N-1}</var> players, and make them play against each other.</p>\n<p>He wants to do this operation one or more times so that both of the following conditions are satisfied:</p>\n<ol>\n<li>there exists an integer <var>n</var> such that, for every <var>(i, j)</var> such that <var>1 \\leq i &lt; j \\leq 2^N</var>, Player <var>i</var> and Player <var>j</var> have belonged to the <strong>same</strong> team exactly <var>n</var> times.</li>\n<li>there exists an integer <var>m</var> such that, for every <var>(i, j)</var> such that <var>1 \\leq i &lt; j \\leq 2^N</var>, Player <var>i</var> and Player <var>j</var> have belonged to <strong>different</strong> teams exactly <var>m</var> times.</li>\n</ol>\n<p>We can prove that there exist sequences of operations that achieve Snuke's objective. Among those sequences, present one sequence with the <strong>minimum possible number of operations</strong>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li>All values in input are integers.</li>\n<li><var>1 \\leq N \\leq 8</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print a sequence of operations in the format below:</p>\n<pre><var>K</var>\n<var>s_1</var>\n<var>s_2</var>\n<var>\\vdots</var>\n<var>s_K</var>\n</pre>\n\n<p>Here, <var>K</var> represents the length of the sequence, and <var>s_i</var> represents the division into teams in the <var>i</var>-th operation.\n<var>s_i</var> should be a string of length <var>2^N</var> consisting of <code>A</code> and <code>B</code>. In the <var>i</var>-th operation, if Player <var>j</var> belongs to Team A, the <var>{j}</var>-th character of <var>s_{i}</var> should be <code>A</code>; if Player <var>j</var> belongs to Team B, the <var>{j}</var>-th character of <var>s_{i}</var> should be <code>B</code>. Note that <code>A</code> and <code>B</code> each must occur exactly <var>2^{N-1}</var> times in each <var>s_i</var>.</p>\n<p>Your output will be accepted when <var>K</var> is the minimum possible length of a sequence of operations that achieves the objective, and the sequence actually achieves the objective.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1\nAB\n</pre>\n\n<ul>\n<li>We can satisfy the objective with one operation.</li>\n<li>Note that we must do at least one operation.</li>\n</ul></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/keyence2021/tasks/keyence2021_d"}