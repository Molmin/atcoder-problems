{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1800</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>これは output-only 問題です。入力は与えられません。</p>\n<p>簡潔に述べると、整数の掛け算を、比較 <var>(x &lt; y)</var> と加算 <var>(x + y)</var> のみを用いてシミュレートする問題です。\n入力はありません。操作列の出力のみを行ってください。</p>\n<p>長さ <var>N</var> の長大な配列 <var>a[0], a[1], ..., a[N-1]</var> があるとします。\n先頭の二要素の初期値は非負整数 <var>A, B</var> であり (あなたには知らされません)、残りの要素の初期値は <var>0</var> です。\nあなたの目的は、最終的に <var>a[2]</var> を積 <var>A \\cdot B</var> とすることです。</p>\n<p>あなたが行えるのは、以下の形式の二種類の操作です (ここで、<var>0 \\leq i, j, k &lt; N</var> です)。</p>\n<ul>\n<li><code>+ i j k</code>: <var>a[k] = a[i] + a[j]</var> とする。</li>\n<li><code>&lt; i j k</code>: <var>a[k] = a[i] &lt; a[j]</var> とする。すなわち、<var>a[i] &lt; a[j]</var> であれば <var>a[k]</var> は <var>1</var> となり、そうでなければ <var>a[k]</var> は <var>0</var> となる。</li>\n</ul>\n<p>操作を行える回数は最大で <var>Q</var> 回であり、操作中に <var>a</var> の要素が <var>V</var> より大きくなってはなりません。\nただし、一回の操作で指定する添字 <var>(i, j, k)</var> に重複があっても構わず、(先頭二要素を含む) 配列のどの要素も書き換えて構いません。\nなお、この問題の正誤判定機は、単一テストケースにおいて実際には複数のペア <var>(A, B)</var> について操作列を実行します。\n各回について、判定機は値 <var>A, B</var> を選んで配列 <var>a = [A, B, 0, 0, \\ldots, 0]</var> を生成し、提出された操作列を適用して最終的に <var>a[2] = A \\cdot B</var> となるかを検証します。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>0 \\leq A, B \\leq 10^9</var></li>\n<li><var>N = Q = 200\\,000</var></li>\n<li><var>V = 10^{19} = 10\\,000\\,000\\,000\\,000\\,000\\,000</var></li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>部分点</h3><ul>\n<li><var>A, B \\leq 10</var> を満たすテストケースを通過すると、<var>800</var> 点が与えられる。</li>\n<li>すべてのテストケースを通過すると、さらに <var>1000</var> 点が与えられる。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>標準入力から与えられる入力は空である。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>1</var> 行目に、操作を行う回数を出力せよ。\n続けて、行う操作をそれぞれ <code>+ i j k</code> または <code>&lt; i j k</code> という形式で一行に出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre></pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>4\n&lt; 0 1 8\n+ 0 1 2\n+ 2 8 2\n+ 0 0 0</pre>\n\n<p>入力例 1 では、正誤判定機はペア <var>(A, B) = (2, 3)</var> についてのみ提出された操作列を検証します。\n上記の出力は、このテストケースを通過します。その過程は次の通りです。</p>\n<ul>\n<li>はじめ、<var>a[0] = 2</var>, <var>a[1] = 3</var>, <var>a[2] = a[3] = \\ldots = a[N-1] = 0</var> である。</li>\n<li><code>&lt; 0 1 8</code> により、<var>a[0] &lt; a[1]</var> であるため <var>a[8] = 1</var> となる。</li>\n<li><code>+ 0 1 2</code> により、<var>a[2] = a[0] + a[1] = 5</var> となる。</li>\n<li><code>+ 2 8 2</code> により、<var>a[2] = a[2] + a[8] = 6</var> となる。</li>\n<li><code>+ 0 0 0</code> により、<var>a[0] = a[0] + a[0] = 4</var> となる。</li>\n<li>要求された通り、最終的に <var>a[2] = 6 = A \\cdot B</var> となっている。</li>\n</ul></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1800</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>This is an output-only problem. You shouldn't read anything from the input.</p>\n<p>In short, your task is to simulate multiplication by using only comparison <var>(x &lt; y)</var> and addition <var>(x + y)</var>.\nThere is no input in this problem, you just print a sequence of operations.</p>\n<p>Imagine that there is a big array <var>a[0], a[1], ..., a[N-1]</var> of length <var>N</var>.\nThe first two values are initially two non-negative integers <var>A</var> and <var>B</var> (which are unknown to you),\n    the other elements are zeros.\nYour goal is to get the product <var>A \\cdot B</var> in <var>a[2]</var> at the end.</p>\n<p>You are allowed operations of two types, with the following format (where <var>0 \\leq i, j, k &lt; N</var>):</p>\n<ul>\n<li><code>+ i j k</code> — applies operation <var>a[k] = a[i] + a[j]</var>.</li>\n<li><code>&lt; i j k</code> — applies operation <var>a[k] = a[i] &lt; a[j]</var>.\n    That is, if <var>a[i] &lt; a[j]</var> then <var>a[k]</var> becomes <var>1</var>, otherwise it becomes <var>0</var>.</li>\n</ul>\n<p>You can use at most <var>Q</var> operations.\nElements of <var>a</var> can't exceed <var>V</var>.\nIndices <var>(i, j, k)</var> don't have to be distinct.\nIt's allowed to modify any element of the array (including the first two).\nThe actual checker simulates the process for multiple pairs <var>(A, B)</var> within a single test.\nEach time, the checker chooses values <var>A</var> and <var>B</var>, creates the array <var>a = [A, B, 0, 0, \\ldots, 0]</var>,\n    applies all your operations and ensures that <var>a[2] = A \\cdot B</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>0 \\leq A, B \\leq 10^9</var></li>\n<li><var>N = Q = 200\\,000</var></li>\n<li><var>V = 10^{19} = 10\\,000\\,000\\,000\\,000\\,000\\,000</var></li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Partial Score</h3><ul>\n<li><var>800</var> points will be awarded for passing tests that satisfy <var>A, B \\leq 10</var>.</li>\n<li>Another <var>1000</var> points will be awarded for passing all tests.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The Standard Input is empty.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>In the first line, print the number of operations.\nEach operation should then be printed in a single line of format <code>+ i j k</code> or <code>&lt; i j k</code>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre></pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>4\n&lt; 0 1 8\n+ 0 1 2\n+ 2 8 2\n+ 0 0 0</pre>\n\n<p>In the first sample test, the checker checks your sequence only for a pair <var>(A, B) = (2, 3)</var>.\nThe provided output is correct for this test:</p>\n<ul>\n<li>Initially, <var>a[0] = 2</var>, <var>a[1] = 3</var>, <var>a[2] = a[3] = \\ldots = a[N-1] = 0</var>.</li>\n<li><code>&lt; 0 1 8</code> applies <var>a[8] = 1</var> because <var>a[0] &lt; a[1]</var>.</li>\n<li><code>+ 0 1 2</code> applies <var>a[2] = a[0] + a[1] = 5</var>.</li>\n<li><code>+ 2 8 2</code> applies <var>a[2] = a[2] + a[8] = 6</var>.</li>\n<li><code>+ 0 0 0</code> applies <var>a[0] = a[0] + a[0] = 4</var>.</li>\n<li>As required, at the end we have <var>a[2] = 6 = A \\cdot B</var>.</li>\n</ul></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc047/tasks/agc047_e"}