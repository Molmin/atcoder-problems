{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>600</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>高橋君はすぬけ君たちを捕まえようとしています。</p>\n<p><var>2</var> 次元座標平面上にいくつか穴があいており、すぬけ君たちの巣につながっています。</p>\n<p>これから <var>N</var> 匹のすぬけ君が穴から出てきます。<var>i</var> 番目のすぬけ君は時刻 <var>T_i</var> に座標 <var>(X_i,Y_i)</var> の穴から出てきて、大きさは <var>A_i</var> であることがわかっています。</p>\n<p>高橋君は時刻 <var>0</var> に座標 <var>(0,0)</var> におり、以下の <var>2</var> 種類の移動ができます。</p>\n<ul>\n<li><var>x</var> 軸方向に単位時間あたり <var>1</var> 以下の速さで移動する</li>\n<li><var>y</var> 軸<strong>正</strong>方向に単位時間あたり <var>1</var> 以下の速さで移動する</li>\n</ul>\n<p><var>y</var> 軸負方向に移動することはできません。</p>\n<p>すぬけ君が穴から出てきたのと同じ時刻に同じ座標に高橋君がいるとき、かつ、そのときに限り、高橋君はすぬけ君を捕まえることができます。<br>\nすぬけ君を捕まえるのにかかる時間は無視できます。</p>\n<p>高橋君が適切に行動したとき、捕まえることができるすぬけ君の大きさの合計の最大値を求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq N \\leq 10^5</var></li>\n<li><var>1 \\leq T_i \\leq 10^9</var></li>\n<li><var>0 \\leq X_i,Y_i \\leq 10^9</var></li>\n<li><var>1 \\leq A_i \\leq 10^9</var></li>\n<li><var>(T_i,X_i,Y_i)</var> は相異なる</li>\n<li>入力に含まれる値は全て整数である</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>T_1</var> <var>X_1</var> <var>Y_1</var> <var>A_1</var>\n<var>T_2</var> <var>X_2</var> <var>Y_2</var> <var>A_2</var>\n<var>\\vdots</var>\n<var>T_N</var> <var>X_N</var> <var>Y_N</var> <var>A_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>答えを整数として出力せよ。  </p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3\n1 0 0 100\n3 2 1 10\n5 3 1 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>101\n</pre>\n<ul>\n<li>座標 <var>(0,0)</var> で待機し、時刻 <var>1</var> に <var>1</var> 番目のすぬけ君を捕まえる</li>\n<li>座標 <var>(3,1)</var> へ移動し、時刻 <var>5</var> に <var>3</var> 番目のすぬけ君を捕まえる</li>\n</ul>\n<p><var>1</var> 番目と <var>2</var> 番目のすぬけ君を両方とも捕まえることはできないので、これが最大です。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>2\n100 0 1 1\n200 1 0 10\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>10\n</pre>\n<p><var>y</var> 軸負方向には移動できないため、<var>1</var> 番目のすぬけ君を捕まえた後、<var>2</var> 番目のすぬけ君を捕まえることはできません。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>10\n797829355 595605750 185676190 353195922\n913575467 388876063 395940406 533206504\n810900084 201398242 159760440 87027328\n889089200 220046203 85488350 325976483\n277429832 161055688 73308100 940778720\n927999455 429014248 477195779 174616807\n673419335 415891345 81019893 286986530\n989248231 147792453 417536200 219371588\n909664305 22150727 414107912 317441890\n988670052 140275628 468278658 67181740\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>1553741733\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>600</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Takahashi is trying to catch many Snuke.</p>\n<p>There are some pits in a two-dimensional coordinate plane, connected to Snuke's nest.</p>\n<p>Now, <var>N</var> Snuke will appear from the pits. It is known that the <var>i</var>-th Snuke will appear from the pit at coordinates <var>(X_i,Y_i)</var> at time <var>T_i</var>, and its size is <var>A_i</var>.</p>\n<p>Takahashi is at coordinates <var>(0,0)</var> at time <var>0</var> and can do the following two kinds of moves.  </p>\n<ul>\n<li>Move at a speed of at most <var>1</var> in the <var>x</var>-direction (positive or negative).  </li>\n<li>Move at a speed of at most <var>1</var> in the <strong>positive</strong> <var>y</var>-direction.  </li>\n</ul>\n<p>Moving in the negative <var>y</var>-direction is not allowed.  </p>\n<p>He can catch a Snuke appearing from a pit if and only if he is at the coordinates of that pit exactly when it appears.<br>\nThe time it takes to catch a Snuke is negligible.</p>\n<p>Find the maximum sum of the sizes of Snuke that Takahashi can catch by moving optimally.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N \\leq 10^5</var></li>\n<li><var>1 \\leq T_i \\leq 10^9</var></li>\n<li><var>0 \\leq X_i,Y_i \\leq 10^9</var></li>\n<li><var>1 \\leq A_i \\leq 10^9</var></li>\n<li>The triples <var>(T_i,X_i,Y_i)</var> are distinct.</li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>T_1</var> <var>X_1</var> <var>Y_1</var> <var>A_1</var>\n<var>T_2</var> <var>X_2</var> <var>Y_2</var> <var>A_2</var>\n<var>\\vdots</var>\n<var>T_N</var> <var>X_N</var> <var>Y_N</var> <var>A_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the answer as an integer.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3\n1 0 0 100\n3 2 1 10\n5 3 1 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>101\n</pre>\n<p>The optimal strategy is as follows.</p>\n<ul>\n<li>Wait at coordinates <var>(0,0)</var> to catch the first Snuke at time <var>1</var>.</li>\n<li>Go to coordinates <var>(3,1)</var> to catch the third Snuke at time <var>5</var>.</li>\n</ul>\n<p>It is impossible to catch both the first and second Snuke, so this is the best he can.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>2\n100 0 1 1\n200 1 0 10\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>10\n</pre>\n<p>Moving in the negative <var>y</var>-direction is not allowed, so he cannot catch the first Snuke and then the second.  </p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>10\n797829355 595605750 185676190 353195922\n913575467 388876063 395940406 533206504\n810900084 201398242 159760440 87027328\n889089200 220046203 85488350 325976483\n277429832 161055688 73308100 940778720\n927999455 429014248 477195779 174616807\n673419335 415891345 81019893 286986530\n989248231 147792453 417536200 219371588\n909664305 22150727 414107912 317441890\n988670052 140275628 468278658 67181740\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>1553741733\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc266/tasks/abc266_h"}