{"html":{"ja":"<span class=\"lang-ja\">\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>AtCoder社はトップページにスポンサー企業 <var>n</var> 社のWeb広告を設置することにした。\n広告を設置するスペースは <var>10000\\times 10000</var> の正方形をしており、各企業毎の広告スペースは軸に平行な長方形で正の面積を持ち、頂点の座標は整数値でなければならない。\n異なる長方形は辺を接してもよいが、重なってはならない。つまり、共通部分が正の面積を持ってはならない。\nどの広告にも属さない空きスペースが残っても構わない。</p>\n<p>高橋社長が各企業に希望する位置と面積を尋ねた結果、企業 <var>i</var> は点 <var>(x_i+0.5, y_i+0.5)</var> を含む面積 <var>r_i</var> の広告スペースを希望していることが分かった。\n企業 <var>i</var> の満足度 <var>p_i</var> は以下のように定まる。</p>\n<ul>\n<li>企業 <var>i</var> の広告スペースが点 <var>(x_i+0.5, y_i+0.5)</var> を含まない場合、<var>p_i = 0</var></li>\n<li>企業 <var>i</var> の広告スペースが点 <var>(x_i+0.5, y_i+0.5)</var> を含む場合、面積を <var>s_i</var> として <var>p_i = 1 - (1 - \\min(r_i,s_i) / \\max(r_i, s_i))^2</var></li>\n</ul>\n<p>満足度の総和が出来るだけ大きくなるように広告スペースの配置を決定せよ。\n<var>10^9 \\times \\sum_{i=0}^{n-1} p_i / n</var> を最も近い整数に丸めた得点が得られる。</p>\n<p><img alt=\"\" src=\"https://img.atcoder.jp/ahc001/edaf52926517566f9dd8018d402400ec.png\" title=\"サンプル出力のビジュアライズ結果\"></p>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>n</var>\n<var>x_0</var> <var>y_0</var> <var>r_0</var>\n<var>\\vdots</var>\n<var>x_{n-1}</var> <var>y_{n-1}</var> <var>r_{n-1}</var>\n</pre>\n\n<ul>\n<li><var>50\\leq n\\leq 200</var></li>\n<li><var>x_i, y_i</var> は整数値であり、<var>0\\leq x_i\\leq 9999</var>、<var>0\\leq y_i\\leq 9999</var> を満たす。全ての <var>i\\neq j</var> に対し、<var>(x_i,y_i)\\neq (x_j,y_j)</var> が成り立つ。</li>\n<li><var>r_i</var> は <var>1</var> 以上の整数値であり、<var>\\sum_{i=0}^{n-1} r_i=10000\\times 10000</var> を満たす。</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>企業 <var>i</var> の広告スペースを表す長方形の対角となる2頂点の座標を <var>(a_i, b_i), (c_i, d_i)</var> (<var>0\\leq a_i&lt;c_i\\leq 10000</var>, <var>0\\leq b_i&lt;d_i\\leq 10000</var>) としたとき、以下の形式で標準出力に出力せよ。</p>\n<pre><var>a_0</var> <var>b_0</var> <var>c_0</var> <var>d_0</var>\n<var>\\vdots</var>\n<var>a_{n-1}</var> <var>b_{n-1}</var> <var>c_{n-1}</var> <var>d_{n-1}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>入力生成方法</h3><p><var>0</var> 以上 <var>1</var> 未満の倍精度浮動小数点数を一様ランダムに生成する関数を <var>rand()</var> で表す。</p>\n<h4><var>n</var> の生成</h4>\n<p>企業数 <var>n</var> の値は <var>50 × 4^{rand()}</var> を最も近い整数値に丸めることで生成される。</p>\n<h4><var>x_i</var>, <var>y_i</var> の生成</h4>\n<p><var>\\{(x, y) \\mid x\\in \\{0,1,\\ldots,9999\\}, y\\in\\{0,1,\\ldots,9999\\}\\}</var> の中から異なる座標をランダムに <var>n</var> 個サンプルすることで生成される。</p>\n<h4><var>r_i</var> の生成</h4>\n<p><var>\\{1,2,\\ldots,99999999\\}</var>の中から異なる値をランダムに <var>n-1</var> 個サンプルし、それをソートした列を <var>q_1,\\ldots,q_{n-1}</var> とする。\n<var>q_0=0</var>、<var>q_n=100000000</var> として、<var>r_i=q_{i+1}-q_i</var> とする。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>テストケース数</h3><ul>\n<li>暫定テスト 50個</li>\n<li>システムテスト 1000個、 コンテスト終了後に<a href=\"https://img.atcoder.jp/ahc001/seeds.zip\">seeds.txt</a>(md5=8fc1ce3f4beabac6abc1bdb4206d7f7e)を公開</li>\n</ul>\n<p>各テストケースの得点の合計が提出の得点となる。\n暫定テストでは、一つ以上のテストケースで不正な出力や制限時間超過をした場合、提出全体の判定がWAやTLEとなる。\nシステムテストでは、不正な出力や制限時間超過をした場合、そのテストケースのみ0点となる。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>ツール</h3><p>入力ジェネレータとビジュアライザは <a href=\"https://img.atcoder.jp/ahc001/ded8fd3366b4ff0b0d7d053f553cdb84.zip\">ここ</a> からダウンロード出来ます。\n使用するには、<a href=\"https://www.rust-lang.org/ja\">Rust言語</a>のコンパイル環境をご用意下さい。\n<font color=\"red\">サポート対象外ですが、kenkoooo さんによりWeb上からも利用できるようになりました。</font> <a href=\"https://kenkoooo.github.io/ahc001-gen-vis-wasm/\">https://kenkoooo.github.io/ahc001-gen-vis-wasm/</a>\n</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>50\n1909 360 6468907\n5810 7091 4661329\n5407 422 2010076\n5767 3140 681477\n6659 3234 920591\n4206 1620 2487369\n7853 9492 440133\n7875 432 586159\n9048 5059 1805425\n7292 9070 509242\n7633 2496 1558444\n421 4835 1808752\n7164 4109 35081\n5356 2271 78438\n5261 577 971398\n3546 5225 1871979\n4667 3386 28796\n5596 7896 3310195\n2518 9813 1739130\n9002 3913 334620\n8574 8947 1107057\n3118 1773 669849\n7140 4388 2098247\n8544 8196 1742491\n8577 4337 4435283\n3155 9168 976005\n7823 4404 945830\n9451 110 569854\n7031 1389 787729\n1841 2337 942236\n76 8364 710110\n3543 3931 3840994\n3927 8828 2920828\n5671 3305 1526349\n5542 4587 6285390\n4030 7732 3962404\n8575 8200 3662259\n1139 3739 254000\n50 7415 647735\n934 4056 1800657\n8801 7178 1218595\n4499 6207 660560\n3096 3375 2695827\n5252 3281 1046149\n2247 1446 7148429\n3347 8501 7546190\n5791 8600 3909497\n8033 8992 3365971\n2297 9254 23830\n4312 6176 192104\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>0 0 4473 1446\n4634 5915 6987 7896\n4473 0 7875 577\n5260 2633 6274 3305\n6274 2722 7172 3747\n3174 1446 5238 2651\n7522 9161 8185 9824\n7875 0 8454 1012\n8376 4388 9720 5731\n6890 8668 7522 9473\n7172 1815 8315 3178\n0 4072 1185 5598\n7071 4016 7258 4203\n5238 2124 5504 2418\n4565 577 5958 1274\n2862 4541 4230 5909\n4582 3302 4752 3471\n3348 7896 8049 8600\n1351 9255 3685 10000\n8713 3624 9291 4202\n8185 8373 9149 9521\n2480 1446 3174 2411\n6105 4203 7823 5424\n8049 5731 8575 8373\n7823 3178 8713 4388\n2410 8600 3900 9255\n7823 4388 8376 5731\n8969 0 9933 591\n6581 940 7481 1815\n1356 1852 2327 2822\n0 7805 635 8923\n1286 3376 4582 4541\n3900 8600 5791 10000\n4752 3305 6274 4203\n4582 4203 6105 5915\n2287 6208 4634 7896\n8575 7179 10000 8373\n849 3449 1286 4030\n0 6812 652 7805\n0 4030 1286 4072\n8575 6182 9797 7179\n4313 5915 4634 6208\n2327 2651 4582 3376\n4752 2651 5260 3305\n0 1446 2480 1852\n635 7896 3348 8600\n5791 8600 6890 10000\n7522 8600 8185 9161\n2188 9146 2406 9255\n3671 5909 4313 6208\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>AtCoder has decided to place web advertisements of <var>n</var> companies on the top page.\nThe space for placing advertisements is a square of size 10000 x 10000.\nThe space for each company must be an axis-parallel rectangle with positive area, and the coordinates of the vertices must be integer values.\nDifferent rectangles may touch on their sides, but they must not overlap. In other words, the common area must not have positive area.\nIt is allowed to leave some free space that does not belong to any ad.</p>\n<p>President Takahashi asked each company for their desired location and area. Company <var>i</var> wants an ad space with area <var>r_i</var> including point <var>(x_i+0.5, y_i+0.5)</var>.\nThe satisfaction level <var>p_i</var> of company <var>i</var> is determined as follows.</p>\n<ul>\n<li>If the ad space for company <var>i</var> does not contain the point <var>(x_i+0.5, y_i+0.5)</var>, then <var>p_i = 0</var>.</li>\n<li>If the ad space for company <var>i</var> contains the point <var>(x_i+0.5, y_i+0.5)</var> and the area is <var>s_i</var>, then <var>p_i = 1 - (1 - \\min(r_i,s_i) / \\max(r_i, s_i))^2</var>.</li>\n</ul>\n<p>Your task is to determine the placement of the ads so that the sum of the satisfaction levels is maximized.\nYou will get a score of <var>10^9 \\times \\sum_{i=0}^{n-1} p_i / n</var> rounded to the nearest integer.</p>\n<p><img alt=\"\" src=\"https://img.atcoder.jp/ahc001/edaf52926517566f9dd8018d402400ec.png\" title=\"Visualization of Sample Output\"></p>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>n</var>\n<var>x_0</var> <var>y_0</var> <var>r_0</var>\n<var>\\vdots</var>\n<var>x_{n-1}</var> <var>y_{n-1}</var> <var>r_{n-1}</var>\n</pre>\n\n<ul>\n<li><var>50\\leq n\\leq 200</var></li>\n<li><var>x_i</var> and <var>y_i</var> are integers satisfying <var>0\\leq x_i\\leq 9999</var> and <var>0\\leq y_i\\leq 9999</var>. For any <var>i\\neq j</var>, <var>(x_i,y_i)\\neq (x_j,y_j)</var> holds.</li>\n<li><var>r_i</var> is an integer at least one and satisfies <var>\\sum_{i=0}^{n-1} r_i=10000\\times 10000</var>.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Let <var>(a_i, b_i)</var> and <var>(c_i, d_i)</var> (<var>0\\leq a_i&lt;c_i\\leq 10000</var>, <var>0\\leq b_i&lt;d_i\\leq 10000</var>) be the coordinates of the two diagonal vertices of the rectangle representing the ad space for company <var>i</var>.\nOutput to standard output in the following format.</p>\n<pre><var>a_0</var> <var>b_0</var> <var>c_0</var> <var>d_0</var>\n<var>\\vdots</var>\n<var>a_{n-1}</var> <var>b_{n-1}</var> <var>c_{n-1}</var> <var>d_{n-1}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Input Generation</h3><p>Let <var>rand()</var> be a function that generates a uniformly random double-precision floating point number at least zero and less than one.</p>\n<h4>Generation of <var>n</var></h4>\n<p>The number of companies <var>n</var> is generated by rounding <var>50 × 4^{rand()}</var> to the nearest integer value.</p>\n<h4>Generation of <var>x_i</var> and <var>y_i</var></h4>\n<p>The list of desired locations <var>(x_1,y_i),\\ldots,(x_n,y_n)</var> is generated by randomly sampling <var>n</var> distinct coordinates from <var>\\{(x, y) \\mid x\\in \\{0,1,\\ldots,9999\\}, y\\in\\{0,1,\\ldots,9999\\}\\}</var>.</p>\n<h4>Generation of <var>r_i</var></h4>\n<p>Let <var>q_1,\\ldots,q_{n-1}</var> be a sorted list of <var>n-1</var> distinct integers randomly sampled from <var>\\{1,2,\\ldots,99999999\\}</var>.\nLet <var>q_0=0</var> and <var>q_n=100000000</var>.\nThen <var>r_i=q_{i+1}-q_i</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Number of test cases</h3><ul>\n<li>Provisional test: 50</li>\n<li>System test: 1000. We will publish <a href=\"https://img.atcoder.jp/ahc001/seeds.zip\">seeds.txt</a> (md5=8fc1ce3f4beabac6abc1bdb4206d7f7e) after the contest is over.</li>\n</ul>\n<p>The score of a submission is the total scores for each test case.\nIn the provisional test, if your submission produces illegal output or exceeds the time limit for some test cases, the submission itself will be judged as WA or TLE, and the score of the submission will be zero.\nIn the system test, if your submission produces illegal output or exceeds the time limit for some test cases, only the score for those test cases will be zero.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Tools</h3><p>You can download an input generator and visualizer <a href=\"https://img.atcoder.jp/ahc001/ded8fd3366b4ff0b0d7d053f553cdb84.zip\">here</a>.\nTo use them, you need a compilation environment of <a href=\"https://www.rust-lang.org/ja\">Rust language</a>.\n<font color=\"red\">Thanks to kenkoooo, You can now use the tools on the web, although they are not officially supported.</font> <a href=\"https://kenkoooo.github.io/ahc001-gen-vis-wasm/\">https://kenkoooo.github.io/ahc001-gen-vis-wasm/</a>\n</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>50\n1909 360 6468907\n5810 7091 4661329\n5407 422 2010076\n5767 3140 681477\n6659 3234 920591\n4206 1620 2487369\n7853 9492 440133\n7875 432 586159\n9048 5059 1805425\n7292 9070 509242\n7633 2496 1558444\n421 4835 1808752\n7164 4109 35081\n5356 2271 78438\n5261 577 971398\n3546 5225 1871979\n4667 3386 28796\n5596 7896 3310195\n2518 9813 1739130\n9002 3913 334620\n8574 8947 1107057\n3118 1773 669849\n7140 4388 2098247\n8544 8196 1742491\n8577 4337 4435283\n3155 9168 976005\n7823 4404 945830\n9451 110 569854\n7031 1389 787729\n1841 2337 942236\n76 8364 710110\n3543 3931 3840994\n3927 8828 2920828\n5671 3305 1526349\n5542 4587 6285390\n4030 7732 3962404\n8575 8200 3662259\n1139 3739 254000\n50 7415 647735\n934 4056 1800657\n8801 7178 1218595\n4499 6207 660560\n3096 3375 2695827\n5252 3281 1046149\n2247 1446 7148429\n3347 8501 7546190\n5791 8600 3909497\n8033 8992 3365971\n2297 9254 23830\n4312 6176 192104\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>0 0 4473 1446\n4634 5915 6987 7896\n4473 0 7875 577\n5260 2633 6274 3305\n6274 2722 7172 3747\n3174 1446 5238 2651\n7522 9161 8185 9824\n7875 0 8454 1012\n8376 4388 9720 5731\n6890 8668 7522 9473\n7172 1815 8315 3178\n0 4072 1185 5598\n7071 4016 7258 4203\n5238 2124 5504 2418\n4565 577 5958 1274\n2862 4541 4230 5909\n4582 3302 4752 3471\n3348 7896 8049 8600\n1351 9255 3685 10000\n8713 3624 9291 4202\n8185 8373 9149 9521\n2480 1446 3174 2411\n6105 4203 7823 5424\n8049 5731 8575 8373\n7823 3178 8713 4388\n2410 8600 3900 9255\n7823 4388 8376 5731\n8969 0 9933 591\n6581 940 7481 1815\n1356 1852 2327 2822\n0 7805 635 8923\n1286 3376 4582 4541\n3900 8600 5791 10000\n4752 3305 6274 4203\n4582 4203 6105 5915\n2287 6208 4634 7896\n8575 7179 10000 8373\n849 3449 1286 4030\n0 6812 652 7805\n0 4030 1286 4072\n8575 6182 9797 7179\n4313 5915 4634 6208\n2327 2651 4582 3376\n4752 2651 5260 3305\n0 1446 2480 1852\n635 7896 3348 8600\n5791 8600 6890 10000\n7522 8600 8185 9161\n2188 9146 2406 9255\n3671 5909 4313 6208\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/ahc001/tasks/ahc001_a"}