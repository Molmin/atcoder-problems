{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1300</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 個の頂点からなるグラフがあり、頂点には <var>0～N-1</var> の番号が付けられています。辺はまだありません。</p>\n<p>辺を追加するクエリを <var>Q</var> 個処理します。\n<var>i (1≦i≦Q)</var> 番目のクエリでは <var>A_i, B_i, C_i</var> の <var>3</var> つの整数が与えられるので、以下のように辺を無限本追加します。</p>\n<ul>\n<li><var>A_i</var> 番の頂点と <var>B_i</var> 番の頂点をつなぐ、重み <var>C_i</var> の無向辺を追加する。</li>\n<li><var>B_i</var> 番の頂点と <var>A_i+1</var> 番の頂点をつなぐ、重み <var>C_i+1</var> の無向辺を追加する。</li>\n<li><var>A_i+1</var> 番の頂点と <var>B_i+1</var> 番の頂点をつなぐ、重み <var>C_i+2</var> の無向辺を追加する。</li>\n<li><var>B_i+1</var> 番の頂点と <var>A_i+2</var> 番の頂点をつなぐ、重み <var>C_i+3</var> の無向辺を追加する。</li>\n<li><var>A_i+2</var> 番の頂点と <var>B_i+2</var> 番の頂点をつなぐ、重み <var>C_i+4</var> の無向辺を追加する。</li>\n<li><var>B_i+2</var> 番の頂点と <var>A_i+3</var> 番の頂点をつなぐ、重み <var>C_i+5</var> の無向辺を追加する。</li>\n<li><var>A_i+3</var> 番の頂点と <var>B_i+3</var> 番の頂点をつなぐ、重み <var>C_i+6</var> の無向辺を追加する。</li>\n<li>...</li>\n</ul>\n<p>ただし、頂点番号は mod <var>N</var> で考えます。\nたとえば、<var>N</var> 番とは <var>0</var> 番のことであり、<var>2N-1</var> 番とは <var>N-1</var> 番のことです。</p>\n<p>例えば、<var>N=16, A_i=7, B_i=14, C_i=1</var> のときは下図のように辺を追加します。（図では最初の <var>7</var> 本のみ）</p>\n<p><img alt=\"\" src=\"https://atcoder.jp/img/code-festival-2016-final/5b0258fb4255f846a4e10ce875362baf.png\"></p>\n<p>すべての辺を追加した後のグラフの最小全域木に含まれる辺の重みの和を求めて下さい。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2≦N≦200,000</var></li>\n<li><var>1≦Q≦200,000</var></li>\n<li><var>0≦A_i,B_i≦N-1</var></li>\n<li><var>1≦C_i≦10^9</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>Q</var>\n<var>A_1</var> <var>B_1</var> <var>C_1</var>\n<var>A_2</var> <var>B_2</var> <var>C_2</var>\n:\n<var>A_Q</var> <var>B_Q</var> <var>C_Q</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>最小全域木に含まれる辺の重みの和を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>7 1\n5 2 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>21\n</pre>\n\n<p>最小全域木は下図のようになります。</p>\n<p><img alt=\"\" src=\"https://atcoder.jp/img/code-festival-2016-final/f1a6c3cfd52c386e6da5c8c761a78521.png\"></p>\n<p>多重辺が存在しうることに注意して下さい。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>2 1\n0 0 1000000000\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>1000000001\n</pre>\n\n<p>自己ループが存在しうることに注意して下さい。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>5 3\n0 1 10\n0 2 10\n0 4 10\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>42\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1300</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>We have a graph with <var>N</var> vertices, numbered <var>0</var> through <var>N-1</var>. Edges are yet to be added.</p>\n<p>We will process <var>Q</var> queries to add edges.\nIn the <var>i</var>-th <var>(1≦i≦Q)</var> query, three integers <var>A_i, B_i</var> and <var>C_i</var> will be given, and we will add infinitely many edges to the graph as follows:</p>\n<ul>\n<li>The two vertices numbered <var>A_i</var> and <var>B_i</var> will be connected by an edge with a weight of <var>C_i</var>.</li>\n<li>The two vertices numbered <var>B_i</var> and <var>A_i+1</var> will be connected by an edge with a weight of <var>C_i+1</var>.</li>\n<li>The two vertices numbered <var>A_i+1</var> and <var>B_i+1</var> will be connected by an edge with a weight of <var>C_i+2</var>.</li>\n<li>The two vertices numbered <var>B_i+1</var> and <var>A_i+2</var> will be connected by an edge with a weight of <var>C_i+3</var>.</li>\n<li>The two vertices numbered <var>A_i+2</var> and <var>B_i+2</var> will be connected by an edge with a weight of <var>C_i+4</var>.</li>\n<li>The two vertices numbered <var>B_i+2</var> and <var>A_i+3</var> will be connected by an edge with a weight of <var>C_i+5</var>.</li>\n<li>The two vertices numbered <var>A_i+3</var> and <var>B_i+3</var> will be connected by an edge with a weight of <var>C_i+6</var>.</li>\n<li>...</li>\n</ul>\n<p>Here, consider the indices of the vertices modulo <var>N</var>.\nFor example, the vertice numbered <var>N</var> is the one numbered <var>0</var>, and the vertice numbered <var>2N-1</var> is the one numbered <var>N-1</var>.</p>\n<p>The figure below shows the first seven edges added when <var>N=16, A_i=7, B_i=14, C_i=1</var>:</p>\n<p><img alt=\"\" src=\"https://atcoder.jp/img/code-festival-2016-final/5b0258fb4255f846a4e10ce875362baf.png\"></p>\n<p>After processing all the queries, find the total weight of the edges contained in a minimum spanning tree of the graph.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2≦N≦200,000</var></li>\n<li><var>1≦Q≦200,000</var></li>\n<li><var>0≦A_i,B_i≦N-1</var></li>\n<li><var>1≦C_i≦10^9</var></li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>Q</var>\n<var>A_1</var> <var>B_1</var> <var>C_1</var>\n<var>A_2</var> <var>B_2</var> <var>C_2</var>\n:\n<var>A_Q</var> <var>B_Q</var> <var>C_Q</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the total weight of the edges contained in a minimum spanning tree of the graph.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>7 1\n5 2 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>21\n</pre>\n\n<p>The figure below shows the minimum spanning tree of the graph:</p>\n<p><img alt=\"\" src=\"https://atcoder.jp/img/code-festival-2016-final/f1a6c3cfd52c386e6da5c8c761a78521.png\"></p>\n<p>Note that there can be multiple edges connecting the same pair of vertices.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>2 1\n0 0 1000000000\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>1000000001\n</pre>\n\n<p>Also note that there can be self-loops.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>5 3\n0 1 10\n0 2 10\n0 4 10\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>42\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/cf16-final/tasks/codefestival_2016_final_g"}