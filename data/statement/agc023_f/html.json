{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1700</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>すぬけ君は、<var>N</var> 頂点からなる根付き木を持っています。\n頂点には <var>1</var> から <var>N</var> までの番号が振られています。\n頂点 <var>1</var> はこの木の根です。\n頂点 <var>i</var> ( <var>2\\leq i \\leq N</var> ) の親は頂点 <var>P_i</var> ( <var>P_i &lt; i</var> ) です。\n各頂点には、<var>0</var> または <var>1</var> が書かれていて、頂点 <var>i</var> に書かれている数は <var>V_i</var> です。</p>\n<p>すぬけ君は、この木の頂点を横一列に並べたいと考えています。\nその際、どの頂点についても、その頂点より右側にその頂点の先祖となる頂点がないようにします。</p>\n<p>頂点を並べ終えたあと、頂点に書かれている数を頂点の並び順に沿って並べた数列を <var>X</var> とします。\nすぬけ君は、<var>X</var> の転倒数 ( ※ ) を最小化したいです。\n<var>X</var> の転倒数の最小値を求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>注釈</h3><p>ある長さ <var>N</var> の数列 <var>Z</var> の転倒数とは、整数 <var>i, j</var> ( <var>1 \\leq i &lt; j \\leq N</var> ) の組であって、<var>Z_i &gt; Z_j</var> を満たすものの個数を意味します。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq P_i &lt; i</var> ( <var>2 \\leq i \\leq N</var> )</li>\n<li><var>0 \\leq V_i \\leq 1</var> ( <var>1 \\leq i \\leq N</var> )</li>\n<li>入力はすべて整数である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>P_2</var> <var>P_3</var> <var>...</var> <var>P_N</var>\n<var>V_1</var> <var>V_2</var> <var>...</var> <var>V_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>数列 <var>X</var> の転倒数の最小値を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>6\n1 1 2 3 3\n0 1 1 0 0 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>4\n</pre>\n\n<p>頂点を <var>1, 3, 5, 6, 2, 4</var> の順に並べると、<var>X = (0, 1, 0, 0, 1, 0)</var> となり、\n転倒数は <var>4</var> になります。\nこれ以上転倒数を小さくすることは出来ないので、<var>4</var> を出力します。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>1\n\n0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>0\n</pre>\n\n<p><var>X = (0)</var> で、転倒数は <var>0</var> です。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>15\n1 2 3 2 5 6 2 2 9 10 1 12 13 12\n1 1 1 0 1 1 0 0 1 0 0 1 1 0 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>31\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1700</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Snuke has a rooted tree with <var>N</var> vertices, numbered <var>1</var> through <var>N</var>.\nVertex <var>1</var> is the root of the tree, and the parent of Vertex <var>i</var> ( <var>2\\leq i \\leq N</var> ) is Vertex <var>P_i</var> ( <var>P_i &lt; i</var> ).\nThere is a number, <var>0</var> or <var>1</var>, written on each vertex. The number written on Vertex <var>i</var> is <var>V_i</var>.</p>\n<p>Snuke would like to arrange the vertices of this tree in a horizontal row.\nHere, for every vertex, there should be no ancestor of that vertex to the right of that vertex.</p>\n<p>After arranging the vertices, let <var>X</var> be the sequence obtained by reading the numbers written on the vertices from left to right in the arrangement.\nSnuke would like to minimize the inversion number of <var>X</var>.\nFind the minimum possible inversion number of <var>X</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Notes</h3><p>The <em>inversion number</em> of a sequence <var>Z</var> whose length <var>N</var> is the number of pairs of integers <var>i</var> and <var>j</var> ( <var>1 \\leq i &lt; j \\leq N</var> ) such that <var>Z_i &gt; Z_j</var>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq P_i &lt; i</var> ( <var>2 \\leq i \\leq N</var> )</li>\n<li><var>0 \\leq V_i \\leq 1</var> ( <var>1 \\leq i \\leq N</var> )</li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>P_2</var> <var>P_3</var> <var>...</var> <var>P_N</var>\n<var>V_1</var> <var>V_2</var> <var>...</var> <var>V_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the minimum possible inversion number of <var>X</var>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>6\n1 1 2 3 3\n0 1 1 0 0 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>4\n</pre>\n\n<p>When the vertices are arranged in the order <var>1, 3, 5, 6, 2, 4</var>, <var>X</var> will be <var>(0, 1, 0, 0, 1, 0)</var>, whose inversion number is <var>4</var>.\nIt is impossible to have fewer inversions, so the answer is <var>4</var>.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>1\n\n0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>0\n</pre>\n\n<p><var>X = (0)</var>, whose inversion number is <var>0</var>.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>15\n1 2 3 2 5 6 2 2 9 10 1 12 13 12\n1 1 1 0 1 1 0 0 1 0 0 1 1 0 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>31\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc023/tasks/agc023_f"}