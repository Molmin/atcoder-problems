{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1000</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>頂点に <var>1</var> から <var>N</var> までの番号がついた <var>N</var> 頂点の木が与えられます。\nこの木の <var>i</var> 番目の辺は、<var>2</var> 頂点 <var>a_i,b_i</var> を結んでいます <var>(1\\leq i\\leq N-1)</var> 。</p>\n<p>はじめ、頂点 <var>1</var> に駒が置いてあり、あなたはこれから、以下の操作をちょうど <var>N</var> 回行います。</p>\n<ul>\n<li>その時点で駒が置かれておらず、かつ今までの操作で一度も選択されていない頂点を <var>1</var> つ選び、\n駒を選んだ頂点の方向に <var>1</var> つ動かす。</li>\n</ul>\n<p><var>N</var> 回の操作を終えた後、駒が頂点 <var>N</var> に置いてあるような手順を「よい手順」と呼びます。\nさらに、よい手順のうち、手順中に駒が置かれたことのある頂点数（頂点 <var>1,N</var> を含む）が最小となるものを「最良の手順」と呼びます。</p>\n<p>最良の手順において、手順中に駒が置かれたことのある頂点の個数を求めてください。\nただし、よい手順が存在しないときは <code>-1</code> と答えてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq a_i,b_i \\leq N</var></li>\n<li>入力される値はすべて整数である</li>\n<li>与えられるグラフは木である</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>a_1</var> <var>b_1</var>\n<var>a_2</var> <var>b_2</var>\n<var>\\vdots</var> \n<var>a_{N-1}</var> <var>b_{N-1}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>答えを整数で出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>4\n1 2\n2 4\n3 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>3\n</pre>\n<p>頂点 <var>3,1,2,4</var> の順で選択すると、駒の位置は開始時から順に <var>1</var> → <var>2</var> → <var>1</var> → <var>2</var> → <var>4</var> となり、これが最良の手順の一例です。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>6\n1 6\n2 6\n2 3\n3 4\n4 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>-1\n</pre>\n<p>よい手順が存在しません。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>14\n1 2\n1 3\n3 4\n3 5\n5 6\n6 7\n5 8\n8 9\n8 14\n14 10\n10 11\n14 12\n12 13\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>5\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1000</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a tree with <var>N</var> vertices numbered <var>1</var> to <var>N</var>.\nThe <var>i</var>-th edge connects two vertices <var>a_i</var> and <var>b_i</var> <var>(1\\leq i\\leq N-1)</var>.</p>\n<p>Initially, a piece is placed at vertex <var>1</var>. You will perform the following operation exactly <var>N</var> times.</p>\n<ul>\n<li>Choose a vertex that is not occupied by the piece at that moment and is never chosen in the previous operations, and move the piece one vertex toward the chosen vertex.</li>\n</ul>\n<p>A way to perform the operation <var>N</var> times is called a <em>good procedure</em> if the piece ends up at vertex <var>N</var>.\nAdditionally, a good procedure is called an <em>ideal procedure</em> if the number of vertices visited by the piece at least once during the procedure (including vertices <var>1</var> and <var>N</var>) is the minimum possible. </p>\n<p>Find the number of vertices visited by the piece at least once during an ideal procedure.\nIf there is no good procedure, print <code>-1</code> instead.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq a_i,b_i \\leq N</var></li>\n<li>All values in the input are integers.</li>\n<li>The given graph is a tree.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>a_1</var> <var>b_1</var>\n<var>a_2</var> <var>b_2</var>\n<var>\\vdots</var> \n<var>a_{N-1}</var> <var>b_{N-1}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the answer as an integer.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>4\n1 2\n2 4\n3 4\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>3\n</pre>\n<p>If you choose vertices <var>3</var>, <var>1</var>, <var>2</var>, <var>4</var> in this order, the piece will go along the path <var>1</var> → <var>2</var> → <var>1</var> → <var>2</var> → <var>4</var>. This is an ideal procedure.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>6\n1 6\n2 6\n2 3\n3 4\n4 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>-1\n</pre>\n<p>There is no good procedure.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>14\n1 2\n1 3\n3 4\n3 5\n5 6\n6 7\n5 8\n8 9\n8 14\n14 10\n10 11\n14 12\n12 13\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>5\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc152/tasks/arc152_f"}