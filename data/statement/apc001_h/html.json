{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>2000</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点の根つき木が与えられます。\n頂点には番号 <var>0, 1, ..., N-1</var> がついており、根は頂点 <var>0</var> です。\nそして、頂点 <var>i(i = 1, 2, ..., N-1)</var> の親は頂点 <var>p_i</var> です。</p>\n<p>はじめ、頂点 <var>i</var> には整数 <var>a_i</var> が書かれています。\nなお、<var>(a_0, a_1, ..., a_{N-1})</var> は <var>(0, 1, ..., N-1)</var> の順列になっています。</p>\n<p>あなたは以下の操作を <var>25,000</var> 回まで好きな回数実行できます。頂点 <var>i</var> に書かれた値が <var>i</var> となるようにしてください。</p>\n<ul>\n<li>頂点を <var>1</var> 個選び <var>v</var> とする。頂点 <var>0</var> と頂点 <var>v</var> の間のパスを考える。</li>\n<li>パス上の頂点の値を回転させる。つまり、パス上の各辺 <var>(i, p_i)</var> について、頂点 <var>p_i</var> に書かれた値を頂点 <var>i</var> に(この操作の直前に)書かれていた値に書き換え、頂点 <var>v</var> の値は頂点 <var>0</var> に(この操作の直前に)書かれていた値に書き換える。</li>\n<li>なお、頂点 <var>0</var> を選んでもよいが、この場合はなにもしないという操作になる。</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 2000</var></li>\n<li><var>0 \\leq p_i \\leq i-1</var></li>\n<li><var>(a_0, a_1, ..., a_{N-1})</var> は <var>(0, 1, ..., N-1)</var> の順列である</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>p_1</var> <var>p_2</var> ... <var>p_{N-1}</var>\n<var>a_0</var> <var>a_1</var> ... <var>a_{N-1}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>1</var> 行目に操作の回数 <var>Q</var> を出力せよ。\n<var>2</var> 行目から <var>Q+1</var> 行目には、操作で選んだ頂点を順に出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5\n0 1 2 3\n2 4 0 1 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>2\n3\n4\n</pre>\n\n<ul>\n<li><var>1</var> 回目の操作後、頂点 <var>0, 1, .., 4</var> に書かれた値は <var>4, 0, 1, 2, 3</var> となる</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5\n0 1 2 2\n4 3 1 2 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>3\n4\n3\n1\n</pre>\n\n<ul>\n<li><var>1</var> 回目の操作後、頂点 <var>0, 1, .., 4</var> に書かれた値は <var>3, 1, 0, 2, 4</var> となる</li>\n<li><var>2</var> 回目の操作後、頂点 <var>0, 1, .., 4</var> に書かれた値は <var>1, 0, 2, 3, 4</var> となる</li>\n</ul></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>2000</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a rooted tree with <var>N</var> vertices.\nThe vertices are numbered <var>0, 1, ..., N-1</var>.\nThe root is Vertex <var>0</var>, and the parent of Vertex <var>i</var> <var>(i = 1, 2, ..., N-1)</var> is Vertex <var>p_i</var>.</p>\n<p>Initially, an integer <var>a_i</var> is written in Vertex <var>i</var>.\nHere, <var>(a_0, a_1, ..., a_{N-1})</var> is a permutation of <var>(0, 1, ..., N-1)</var>.</p>\n<p>You can execute the following operation at most <var>25</var> <var>000</var> times. Do it so that the value written in Vertex <var>i</var> becomes <var>i</var>.</p>\n<ul>\n<li>Choose a vertex and call it <var>v</var>. Consider the path connecting Vertex <var>0</var> and <var>v</var>.</li>\n<li>Rotate the values written on the path. That is, For each edge <var>(i, p_i)</var> along the path, replace the value written in Vertex <var>p_i</var> with the value written in Vertex <var>i</var> (just before this operation), and replace the value of <var>v</var> with the value written in Vertex <var>0</var> (just before this operation).</li>\n<li>You may choose Vertex <var>0</var>, in which case the operation does nothing.</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 2000</var></li>\n<li><var>0 \\leq p_i \\leq i-1</var></li>\n<li><var>(a_0, a_1, ..., a_{N-1})</var> is a permutation of <var>(0, 1, ..., N-1)</var>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>p_1</var> <var>p_2</var> ... <var>p_{N-1}</var>\n<var>a_0</var> <var>a_1</var> ... <var>a_{N-1}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>In the first line, print the number of operations, <var>Q</var>.\nIn the second through <var>(Q+1)</var>-th lines, print the chosen vertices in order.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5\n0 1 2 3\n2 4 0 1 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>2\n3\n4\n</pre>\n\n<ul>\n<li>After the first operation, the values written in Vertex <var>0, 1, .., 4</var> are <var>4, 0, 1, 2, 3</var>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5\n0 1 2 2\n4 3 1 2 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>3\n4\n3\n1\n</pre>\n\n<ul>\n<li>After the first operation, the values written in Vertex <var>0, 1, .., 4</var> are <var>3, 1, 0, 2, 4</var>.</li>\n<li>After the second operation, the values written in Vertex <var>0, 1, .., 4</var> are <var>1, 0, 2, 3, 4</var>.</li>\n</ul></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/apc001/tasks/apc001_h"}