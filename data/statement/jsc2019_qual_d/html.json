{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点: <var>600</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3>\n<p>AtCoder 本社は <var>N</var> 室の部屋からなる施設であり、部屋には <var>1</var> から <var>N</var> の番号がついています。どの <var>2</var> 部屋の間にも、それらを直接結ぶ通路が <var>1</var> 本通っています。</p>\n<p>社長の高橋君はセキュリティのため、全ての通路に <strong>レベル</strong> を設定するようあなたに依頼しました。ここで、レベルは正の整数値であり、以下の条件を満たさなければなりません。</p>\n<ul>\n<li>全ての部屋 <var>i\\ (1 \\leq i \\leq N)</var> について、部屋 <var>i</var> から出発し、レベルが等しい通路のみをいくつか通って部屋 <var>i</var> に戻るとき、通路を通る回数は必ず偶数になる。</li>\n</ul>\n<p>あなたの仕事は、通路ごとのレベルをうまく設定して、レベルの最大値を最小化することです。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3>\n<ul>\n<li><var>N</var> は <var>2</var> 以上 <var>500</var> 以下の整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3>\n<p>入力は以下の形式で標準入力から与えられます。</p>\n<pre><var>N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3>\n<p>目的を達成するような設定の仕方を次のように出力してください。</p>\n<pre><var>a_{1,2}</var> <var>a_{1,3}</var> ... <var>a_{1,N}</var>\n<var>a_{2,3}</var> ... <var>a_{2,N}</var>\n.\n.\n.\n<var>a_{N-1,N}</var>\n</pre>\n\n<p>ここで、<var>a_{i,j}</var> は部屋 <var>i</var> と部屋 <var>j</var> の間の通路に設定するレベルです。</p>\n<p>答えが複数ありえる場合、どれを出力してもかまいません。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1 2\n1\n</pre>\n\n<p>この出力例は下の画像のようになります。</p>\n<p><img alt=\"\" src=\"https://img.atcoder.jp/jsc2019-qual/D-sample.png\"></p>\n<p>たとえば部屋 <var>2</var> から出発して、<var>2 \\to 3 \\to 2 \\to 3 \\to 2 \\to 1 \\to 2</var> という経路でレベル <var>1</var> の通路のみを通って元の部屋に戻るとき、通路を通る回数は <var>6</var> 回です。</p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score: <var>600</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3>\n<p>AtCoder's head office consists of <var>N</var> rooms numbered <var>1</var> to <var>N</var>. For any two rooms, there is a direct passage connecting these rooms.</p>\n<p>For security reasons, Takahashi the president asked you to set a <strong>level</strong> for every passage, which is a positive integer and must satisfy the following condition:</p>\n<ul>\n<li>For each room <var>i\\ (1 \\leq i \\leq N)</var>, if we leave Room <var>i</var>, pass through some passages whose levels are all equal and get back to Room <var>i</var>, the number of times we pass through a passage is always even.</li>\n</ul>\n<p>Your task is to set levels to the passages so that the highest level of a passage is minimized.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3>\n<ul>\n<li><var>N</var> is an integer between <var>2</var> and <var>500</var> (inclusive).</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3>\n<p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3>\n<p>Print one way to set levels to the passages so that the objective is achieved, as follows:</p>\n<pre><var>a_{1,2}</var> <var>a_{1,3}</var> <var>...</var> <var>a_{1,N}</var>\n<var>a_{2,3}</var> <var>...</var> <var>a_{2,N}</var>\n<var>.</var>\n<var>.</var>\n<var>.</var>\n<var>a_{N-1,N}</var>\n</pre>\n\n<p>Here <var>a_{i,j}</var> is the level of the passage connecting Room <var>i</var> and Room <var>j</var>.</p>\n<p>If there are multiple solutions, any of them will be accepted.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1 2\n1\n</pre>\n\n<p>The following image describes this output:</p>\n<p><img alt=\"\" src=\"https://img.atcoder.jp/jsc2019-qual/D-sample.png\"></p>\n<p>For example, if we leave Room <var>2</var>, traverse the path <var>2 \\to 3 \\to 2 \\to 3 \\to 2 \\to 1 \\to 2</var> while only passing passages of level <var>1</var> and get back to Room <var>2</var>, we pass through a passage six times.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/jsc2019-qual/tasks/jsc2019_qual_d"}