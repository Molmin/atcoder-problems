{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>800</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点の木が与えられます。ここで、<var>N</var> は <strong>奇数</strong> です。\n木の頂点には <var>1</var> から <var>N</var> までの、辺には <var>1</var> から <var>N-1</var> までの番号が付けられています。\n辺 <var>i</var> は頂点 <var>u_i, v_i</var> を結び、初期状態での重みは <var>w^1_i</var> です。</p>\n<p>あなたは、次の操作を何度でも行えます。</p>\n<ul>\n<li>木から辺 <var>(u, v)</var> を選ぶ。この辺の現在の重みが <var>w</var> であるとする。<var>u, v</var> のいずれかちょうど一方に接続する各辺について、その重みを <var>w</var> との <strong>XOR</strong> に置き換える（操作前の辺の重みが <var>w_1</var> であるとすると、操作後の重みは <var>w_1 \\oplus w</var> となる）。</li>\n</ul>\n<p>あなたの目標は、各辺 <var>i</var> の重みを <var>w^2_i</var> とすることです。\n上記の操作を何度でも行えるとして、目標の達成が可能か判定してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\le N \\le 10^5</var></li>\n<li><var>N</var> は奇数である。</li>\n<li><var>1\\le u_i, v_i \\le N</var></li>\n<li><var>u_i \\neq v_i</var></li>\n<li><var>0\\le w^1_i, w^2_i &lt; 2^{30}</var></li>\n<li>入力中の値は全て整数である。</li>\n<li>入力が表すグラフは木である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>u_1</var> <var>v_1</var> <var>w^1_1</var> <var>w^2_1</var>\n<var>u_2</var> <var>v_2</var> <var>w^1_2</var> <var>w^2_2</var>\n<var>\\vdots</var>\n<var>u_{N-1}</var> <var>v_{N-1}</var> <var>w^1_{N-1}</var> <var>w^2_{N-1}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>目標とする重みの割り当てに初期状態から至ることが可能であれば <code>YES</code>、そうでなければ <code>NO</code> と出力せよ。\nなお、正誤判定器は英大文字と英小文字を区別せず、どちらも受理する。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3\n1 2 1 1\n2 3 8 9\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>YES\n</pre>\n<p>辺 <var>1</var> に対して操作を行うと、辺 <var>2</var> の重みが <var>8 \\oplus 1=9</var> となります。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5\n1 2 0 3\n1 3 1 0\n1 4 2 1\n1 5 0 0\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>NO\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>800</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a tree with <var>N</var> vertices, where <var>N</var> is <strong>odd</strong>.\nThe vertices are numbered from <var>1</var> through <var>N</var> and edges from <var>1</var> through <var>N-1</var>.\nThe edge <var>i</var> connects vertices <var>u_i</var> and <var>v_i</var> and its initial weight is <var>w^1_i</var>.</p>\n<p>You can perform the following operation any number of times:</p>\n<ul>\n<li>Choose an edge <var>(u, v)</var> of the tree, and suppose that its weight now is <var>w</var>. For every edge, which is incident to exactly one of <var>u</var> and <var>v</var>, we <strong>XOR</strong> the weight of that edge with <var>w</var> (if it was <var>w_1</var>, replace it with <var>w_1 \\oplus w</var>).</li>\n</ul>\n<p>Your goal is to reach the state where each edge <var>i</var> has weight <var>w^2_i</var>.\nDetermine if you can get to the goal by performing the operation above any number of times.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\le N \\le 10^5</var></li>\n<li><var>N</var> is odd.</li>\n<li><var>1\\le u_i, v_i \\le N</var></li>\n<li><var>u_i \\neq v_i</var></li>\n<li><var>0\\le w^1_i, w^2_i &lt; 2^{30}</var></li>\n<li>All values in input are integers.</li>\n<li>The input represents a valid tree.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>u_1</var> <var>v_1</var> <var>w^1_1</var> <var>w^2_1</var>\n<var>u_2</var> <var>v_2</var> <var>w^1_2</var> <var>w^2_2</var>\n<var>\\vdots</var>\n<var>u_{N-1}</var> <var>v_{N-1}</var> <var>w^1_{N-1}</var> <var>w^2_{N-1}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If you can get the goal weight assignment from the initial state, output <code>YES</code>. Otherwise, output <code>NO</code>.\nNote that the checker is case-insensitive: you can print letters in both uppercase and lowercase.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3\n1 2 1 1\n2 3 8 9\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>YES\n</pre>\n<p>If you perform the operation on the edge <var>1</var>, the weight of the edge <var>2</var> becomes <var>8 \\oplus 1=9</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5\n1 2 0 3\n1 3 1 0\n1 4 2 1\n1 5 0 0\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>NO\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc052/tasks/agc052_b"}