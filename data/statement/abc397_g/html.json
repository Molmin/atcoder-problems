{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>625</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点 <var>M</var> 辺の有向グラフが与えられます。頂点には <var>1,2,\\dots,N</var> の番号がついており、辺 <var>j</var> (<var>j=1,2,\\dots,M</var>) は頂点 <var>u_j</var> から頂点 <var>v_j</var> に向かいます。ここで、頂点 <var>1</var> から頂点 <var>N</var> に到達可能であることが保証されます。</p>\n<p>はじめ、すべての辺の重みは <var>0</var> です。<var>M</var> 本の辺からちょうど <var>K</var> 本の辺を選んで重みを <var>1</var> に変更するとき、変更後のグラフにおける頂点 <var>1</var> から頂点 <var>N</var> への最短距離としてあり得る最大値を求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 30</var></li>\n<li><var>1 \\leq K \\leq M \\leq 100</var></li>\n<li><var>1 \\leq u_j,v_j \\leq N</var></li>\n<li><var>u_j \\neq v_j</var></li>\n<li>与えられるグラフにおいて、頂点 <var>1</var> から頂点 <var>N</var> へ到達可能である</li>\n<li>入力はすべて整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var> <var>K</var>\n<var>u_1</var> <var>v_1</var>\n<var>u_2</var> <var>v_2</var>\n<var>\\vdots</var>\n<var>u_M</var> <var>v_M</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>答えを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 3 2\n1 2\n2 3\n1 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1\n</pre>\n\n<p>辺 <var>1,3</var> を選べば、頂点 <var>1</var> から頂点 <var>3</var> への最短距離が <var>1</var> になります。最短距離を <var>2</var> 以上にする選び方は存在しないので、答えは <var>1</var> です。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>4 4 3\n1 2\n1 3\n3 2\n2 4\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>2\n</pre>\n\n<p>辺 <var>1,2,4</var> を選べば、頂点 <var>1</var> から頂点 <var>4</var> への最短距離が <var>2</var> になります。最短距離を <var>3</var> 以上にする選び方は存在しないので、答えは <var>2</var> です。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>2 2 1\n1 2\n1 2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>0\n</pre>\n\n<p>多重辺が存在しうることに注意してください。</p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>625</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a directed graph with <var>N</var> vertices and <var>M</var> edges. The vertices are numbered <var>1,2,\\dots,N</var>. Edge <var>j</var> (<var>j=1,2,\\dots,M</var>) goes from vertex <var>u_j</var> to vertex <var>v_j</var>. It is guaranteed that vertex <var>N</var> is reachable from vertex <var>1</var>.</p>\n<p>Initially, all edges have weight <var>0</var>. We choose exactly <var>K</var> out of the <var>M</var> edges and change their weights to <var>1</var>. Find the maximum possible value of the shortest distance from vertex <var>1</var> to vertex <var>N</var> in the resulting graph.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 30</var></li>\n<li><var>1 \\leq K \\leq M \\leq 100</var></li>\n<li><var>1 \\leq u_j, v_j \\leq N</var></li>\n<li><var>u_j \\neq v_j</var></li>\n<li>In the given graph, vertex <var>N</var> is reachable from vertex <var>1</var>.</li>\n<li>All input values are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var> <var>K</var>\n<var>u_1</var> <var>v_1</var>\n<var>u_2</var> <var>v_2</var>\n<var>\\vdots</var>\n<var>u_M</var> <var>v_M</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the answer.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 3 2\n1 2\n2 3\n1 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1\n</pre>\n\n<p>By choosing edges <var>1,3</var>, the shortest distance from vertex <var>1</var> to vertex <var>3</var> becomes <var>1</var>. There is no way to make the shortest distance <var>2</var> or greater, so the answer is <var>1</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>4 4 3\n1 2\n1 3\n3 2\n2 4\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>2\n</pre>\n\n<p>By choosing edges <var>1,2,4</var>, the shortest distance from vertex <var>1</var> to vertex <var>4</var> becomes <var>2</var>. There is no way to make the shortest distance <var>3</var> or greater, so the answer is <var>2</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>2 2 1\n1 2\n1 2\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>0\n</pre>\n\n<p>Note that there may be multi-edges.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc397/tasks/abc397_g"}