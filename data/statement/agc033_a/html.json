{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>300</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>縦 <var>H</var> 行、横 <var>W</var> 列の白黒に塗られたマス目が与えられます。\nマス目の状態は <var>A_{11}</var> から <var>A_{HW}</var> の <var>HW</var> 個の文字で表されており、\n上から <var>i</var> 行目、左から <var>j</var> 列目にあるマスが黒色のとき <var>A_{ij}</var> は <code>#</code>、\n上から <var>i</var> 行目、左から <var>j</var> 列目にあるマスが白色のとき <var>A_{ij}</var> は <code>.</code> となっています。</p>\n<p>すべてのマスが黒色になるまで、以下の操作を繰り返し行います。</p>\n<ul>\n<li>辺を共有して隣接するマスの中に、黒色のマスが一つ以上存在するような白色のマスすべてが黒色になる。</li>\n</ul>\n<p>何回の操作を行うことになるか求めてください。\nただし、最初に与えられるマス目には少なくとも <var>1</var> つ黒色のマスが存在します。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 ≦ H,W ≦ 1000</var></li>\n<li><var>A_{ij}</var> は <code>#</code> または <code>.</code></li>\n<li>与えられるマス目には少なくとも <var>1</var> つ黒色のマスが存在する。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>H</var> <var>W</var>\n<var>A_{11}</var><var>A_{12}</var><var>...</var><var>A_{1W}</var>\n<var>:</var>\n<var>A_{H1}</var><var>A_{H2}</var><var>...</var><var>A_{HW}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>行われる操作の回数を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 3\n...\n.#.\n...\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>2\n</pre>\n\n<p>操作を一回行うとマス目の四隅以外が黒色になり、もう一度操作を行うとすべてのマス目が黒色になります。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>6 6\n..#..#\n......\n#..#..\n......\n.#....\n....#.\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>3\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>300</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a grid of squares with <var>H</var> horizontal rows and <var>W</var> vertical columns, where each square is painted white or black.\n<var>HW</var> characters from <var>A_{11}</var> to <var>A_{HW}</var> represent the colors of the squares.\n<var>A_{ij}</var> is <code>#</code> if the square at the <var>i</var>-th row from the top and the <var>j</var>-th column from the left is black, and <var>A_{ij}</var> is <code>.</code> if that square is white.</p>\n<p>We will repeatedly perform the following operation until all the squares are black:</p>\n<ul>\n<li>Every white square that shares a side with a black square, becomes black.</li>\n</ul>\n<p>Find the number of operations that will be performed.\nThe initial grid has at least one black square.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq H,W \\leq 1000</var></li>\n<li><var>A_{ij}</var> is <code>#</code> or <code>.</code>.</li>\n<li>The given grid has at least one black square.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>H</var> <var>W</var>\n<var>A_{11}</var><var>A_{12}</var><var>...</var><var>A_{1W}</var>\n<var>:</var>\n<var>A_{H1}</var><var>A_{H2}</var><var>...</var><var>A_{HW}</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the number of operations that will be performed.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 3\n...\n.#.\n...\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>2\n</pre>\n\n<p>After one operation, all but the corners of the grid will be black. After one more operation, all the squares will be black.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>6 6\n..#..#\n......\n#..#..\n......\n.#....\n....#.\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>3\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc033/tasks/agc033_a"}