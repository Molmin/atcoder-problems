{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>700</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>長さ <var>N \\times K</var> の数列 <var>X=(X_0,X_1,\\cdots,X_{N \\times K-1})</var> があります。\n数列 <var>X</var> の要素は長さ <var>N</var> の数列 <var>A=(A_0,A_1,\\cdots,A_{N-1})</var> によって表され、全ての <var>i,j</var> (<var>0 \\leq i \\leq K-1,\\ 0 \\leq j \\leq N-1</var>) について、\n<var>X_{i \\times N + j}=A_j</var> です。</p>\n<p>すぬけさんは、整数列 <var>s</var> を持っています。\n最初、<var>s</var> は空です。\nすぬけさんはこれから、すべての <var>i=0,1,2,\\cdots,N \\times K-1</var> について、この順に、以下の操作を行います。</p>\n<ul>\n<li><var>s</var> が <var>X_i</var> を含んでいない場合: <var>s</var> の末尾に <var>X_i</var> を追加する。</li>\n<li><var>s</var> が <var>X_i</var> を含んでいる場合: <var>s</var> が <var>X_i</var> を含まなくなるまで、<var>s</var> の末尾の要素を削除し続ける。\nこのとき、<var>X_i</var> を末尾に<strong>加えない</strong>ことに注意せよ。</li>\n</ul>\n<p>全ての操作が終わったあとの数列 <var>s</var> の状態を求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq K \\leq 10^{12}</var></li>\n<li><var>1 \\leq A_i \\leq 2 \\times 10^5</var></li>\n<li>入力される値はすべて整数である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>K</var>\n<var>A_0</var> <var>A_1</var> <var>\\cdots</var> <var>A_{N-1}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>全ての操作が終わったあとの数列 <var>s</var> の要素を、先頭から末尾の順に空白区切りで出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 2\n1 2 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>2 3\n</pre>\n\n<p><var>X=(1,2,3,1,2,3)</var> です。\n操作は、以下のように行われます。</p>\n<ul>\n<li><var>i=0</var>: <var>s</var> が <var>1</var> を含まないので、<var>s</var> の末尾に <var>1</var> を追加する。<var>s=(1)</var> となる。</li>\n<li><var>i=1</var>: <var>s</var> が <var>2</var> を含まないので、<var>s</var> の末尾に <var>2</var> を追加する。<var>s=(1,2)</var> となる。</li>\n<li><var>i=2</var>: <var>s</var> が <var>3</var> を含まないので、<var>s</var> の末尾に <var>3</var> を追加する。<var>s=(1,2,3)</var> となる。</li>\n<li><var>i=3</var>: <var>s</var> が <var>1</var> を含むので、<var>s</var> が <var>1</var> を含む限り、末尾の要素を削除し続ける。<var>s</var> は <var>(1,2,3)→(1,2)→(1)→()</var> と変化する。</li>\n<li><var>i=4</var>: <var>s</var> が <var>2</var> を含まないので、<var>s</var> の末尾に <var>2</var> を追加する。<var>s=(2)</var> となる。</li>\n<li><var>i=5</var>: <var>s</var> が <var>3</var> を含まないので、<var>s</var> の末尾に <var>3</var> を追加する。<var>s=(2,3)</var> となる。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5 10\n1 2 3 2 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>3\n</pre>\n\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>6 1000000000000\n1 1 2 2 3 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre></pre>\n\n<p>数列 <var>s</var> が空のこともあります。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 4</h3><pre>11 97\n3 1 4 1 5 9 2 6 5 3 5\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 4</h3><pre>9 2 6\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>700</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>We have a sequence of <var>N \\times K</var> integers: <var>X=(X_0,X_1,\\cdots,X_{N \\times K-1})</var>.\nIts elements are represented by another sequence of <var>N</var> integers: <var>A=(A_0,A_1,\\cdots,A_{N-1})</var>. For each pair <var>i, j</var> (<var>0 \\leq i \\leq K-1,\\ 0 \\leq j \\leq N-1</var>), <var>X_{i \\times N + j}=A_j</var> holds.</p>\n<p>Snuke has an integer sequence <var>s</var>, which is initially empty.\nFor each <var>i=0,1,2,\\cdots,N \\times K-1</var>, in this order, he will perform the following operation:</p>\n<ul>\n<li>If <var>s</var> does not contain <var>X_i</var>: add <var>X_i</var> to the end of <var>s</var>.</li>\n<li>If <var>s</var> does contain <var>X_i</var>: repeatedly delete the element at the end of <var>s</var> until <var>s</var> no longer contains <var>X_i</var>. Note that, in this case, we do <strong>not</strong> add <var>X_i</var> to the end of <var>s</var>.</li>\n</ul>\n<p>Find the elements of <var>s</var> after Snuke finished the operations.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq K \\leq 10^{12}</var></li>\n<li><var>1 \\leq A_i \\leq 2 \\times 10^5</var></li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>K</var>\n<var>A_0</var> <var>A_1</var> <var>\\cdots</var> <var>A_{N-1}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the elements of <var>s</var> after Snuke finished the operations, in order from beginning to end, with spaces in between.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 2\n1 2 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>2 3\n</pre>\n\n<p>In this case, <var>X=(1,2,3,1,2,3)</var>.\nWe will perform the operations as follows:</p>\n<ul>\n<li><var>i=0</var>: <var>s</var> does not contain <var>1</var>, so we add <var>1</var> to the end of <var>s</var>, resulting in <var>s=(1)</var>.</li>\n<li><var>i=1</var>: <var>s</var> does not contain <var>2</var>, so we add <var>2</var> to the end of <var>s</var>, resulting in <var>s=(1,2)</var>.</li>\n<li><var>i=2</var>: <var>s</var> does not contain <var>3</var>, so we add <var>3</var> to the end of <var>s</var>, resulting in <var>s=(1,2,3)</var>.</li>\n<li><var>i=3</var>: <var>s</var> does contain <var>1</var>, so we repeatedly delete the element at the end of <var>s</var> as long as <var>s</var> contains <var>1</var>, which causes the following changes to <var>s</var>: <var>(1,2,3)→(1,2)→(1)→()</var>.</li>\n<li><var>i=4</var>: <var>s</var> does not contain <var>2</var>, so we add <var>2</var> to the end of <var>s</var>, resulting in <var>s=(2)</var>.</li>\n<li><var>i=5</var>: <var>s</var> does not contain <var>3</var>, so we add <var>3</var> to the end of <var>s</var>, resulting in <var>s=(2,3)</var>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5 10\n1 2 3 2 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>3\n</pre>\n\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>6 1000000000000\n1 1 2 2 3 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre></pre>\n\n<p><var>s</var> may be empty in the end.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 4</h3><pre>11 97\n3 1 4 1 5 9 2 6 5 3 5\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 4</h3><pre>9 2 6\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc036/tasks/agc036_b"}