{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>400</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N \\times N</var> のマス目があります。上から <var>i</var> 行目、左から <var>j</var> 列目のマスを <var>(i,j)</var> と表します。</p>\n<p>始め、<var>(1,1)</var> に駒が <var>1</var> 個置かれています。あなたは以下の操作を何度でも行うことができます。</p>\n<ul>\n<li>今駒が置かれているマスと距離がちょうど <var>\\sqrt{M}</var> であるマスに駒を移動させる。</li>\n</ul>\n<p>ここで、マス <var>(i,j)</var> とマス <var>(k,l)</var> の距離は <var>\\sqrt{(i-k)^2+(j-l)^2}</var> とします。</p><p></p>\n<p>全てのマス <var>(i,j)</var> に対して、以下の問題を解いてください。</p>\n<ul>\n<li>駒を <var>(1,1)</var> から <var>(i,j)</var> に移動させることができるかを判定し、できる場合は操作回数の最小値を求めてください。</li>\n</ul>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\le N \\le 400</var></li>\n<li><var>1 \\le M \\le 10^6</var></li>\n<li>入力は全て整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>N</var> 行出力せよ。<var>i</var> 行目には <var>N</var> 個の整数を出力せよ。<var>i</var> 行目の <var>j</var> 個目の出力は、マス <var>(i,j)</var> に駒を移動させることができるのであれば操作回数の最小値を、そうでないのであれば <var>-1</var> を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>0 1 2\n1 2 3\n2 3 4\n</pre>\n<p>駒は上下左右の <var>4</var> 個のマスに移動することができます。</p>\n<p>例えば <var>(2,2)</var> に移動するには、以下のように <var>2</var> 回の操作を行えばよいです。</p>\n<ul>\n<li>今駒は <var>(1,1)</var> に置かれている。<var>(1,1)</var> と <var>(1,2)</var> の距離はちょうど <var>\\sqrt{1}</var> であるため、駒を <var>(1,2)</var> に移動させる。</li>\n<li>今駒は <var>(1,2)</var> に置かれている。<var>(1,2)</var> と <var>(2,2)</var> の距離はちょうど <var>\\sqrt{1}</var> であるため、駒を <var>(2,2)</var> に移動させる。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>10 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>0 3 2 3 2 3 4 5 4 5\n3 4 1 2 3 4 3 4 5 6\n2 1 4 3 2 3 4 5 4 5\n3 2 3 2 3 4 3 4 5 6\n2 3 2 3 4 3 4 5 4 5\n3 4 3 4 3 4 5 4 5 6\n4 3 4 3 4 5 4 5 6 5\n5 4 5 4 5 4 5 6 5 6\n4 5 4 5 4 5 6 5 6 7\n5 6 5 6 5 6 5 6 7 6\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>400</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There is a grid with <var>N \\times N</var> squares.  We denote by <var>(i, j)</var> the square at the <var>i</var>-th row from the top and <var>j</var>-th column from the left.</p>\n<p>Initially, a piece is placed on <var>(1, 1)</var>.  You may repeat the following operation any number of times:</p>\n<ul>\n<li>Let <var>(i, j)</var> be the square the piece is currently on.  Move the piece to the square whose distance from <var>(i, j)</var> is exactly <var>\\sqrt{M}</var>.</li>\n</ul>\n<p>Here, we define the distance between square <var>(i, j)</var> and square <var>(k, l)</var> as <var>\\sqrt{(i-k)^2+(j-l)^2}</var>.</p>\n<p>For all squares <var>(i, j)</var>, determine if the piece can reach <var>(i, j)</var>.  If it can, find the minimum number of operations required to do so.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\le N \\le 400</var></li>\n<li><var>1 \\le M \\le 10^6</var></li>\n<li>All values in the input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print <var>N</var> lines.  The <var>i</var>-th line should contain <var>N</var> integers.  If the piece can reach <var>(i, j)</var>, the <var>j</var>-th integer in the <var>i</var>-th line should be the minimum number of operations required to do so; otherwise, it should be <var>-1</var>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>0 1 2\n1 2 3\n2 3 4\n</pre>\n<p>You can move the piece to four adjacent squares.</p>\n<p>For example, we can move the piece to <var>(2,2)</var> with two operations as follows.</p>\n<ul>\n<li>The piece is now on <var>(1,1)</var>. The distance between <var>(1,1)</var> and <var>(1,2)</var> is exactly <var>\\sqrt{1}</var>, so move the piece to <var>(1,2)</var>.</li>\n<li>The piece is now on <var>(1,2)</var>. The distance between <var>(1,2)</var> and <var>(2,2)</var> is exactly <var>\\sqrt{1}</var>, so move the piece to <var>(2,2)</var>.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>10 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>0 3 2 3 2 3 4 5 4 5\n3 4 1 2 3 4 3 4 5 6\n2 1 4 3 2 3 4 5 4 5\n3 2 3 2 3 4 3 4 5 6\n2 3 2 3 4 3 4 5 4 5\n3 4 3 4 3 4 5 4 5 6\n4 3 4 3 4 5 4 5 6 5\n5 4 5 4 5 4 5 6 5 6\n4 5 4 5 4 5 6 5 6 7\n5 6 5 6 5 6 5 6 7 6\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc272/tasks/abc272_d"}