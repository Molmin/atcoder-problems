{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>625</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点の二分木が与えられます。\n頂点には <var>1</var> から <var>N</var> までの番号が付けられており、頂点 <var>1</var> が根です。\n<var>i\\ (1\\leq i \\leq N-1)</var> 番目の辺は、頂点 <var>i+1</var> と頂点 <var>P_i\\ (\\leq i)</var> を双方向に結んでいます。</p>\n<p>この木の上には <var>1</var> 個のカゴと <var>M</var> 個のボールがあります。\nボールには <var>1</var> から <var>M</var> までの番号が付けられており、各ボール <var>j</var> について<strong>スタート頂点</strong> <var>S_j</var> と<strong>ゴール頂点</strong> <var>T_j</var> が定められています。\n最初、カゴは空の状態で頂点 <var>1</var> に置かれており、ボールはそれぞれのスタート頂点に置かれています。</p>\n<p>あなたは、以下の操作を好きな回数、好きな順序で行うことができます。</p>\n<ul>\n<li>今カゴが置かれている頂点を <var>v</var> として、以下のいずれかを行う。<ul>\n<li>頂点 <var>v</var> に繋がる辺を <var>1</var> つ選び、カゴをその辺に沿って動かして隣接する頂点に移動させる。 \nこのとき、カゴの中に入っているボールも一緒に移動する。</li>\n<li>スタート頂点が <var>v</var> であり、今もスタート頂点に置かれているようなボールを <var>1</var> つ選んで、カゴの中に入れる。\nこの操作は、元々カゴの中に入っているボールが <var>K</var> 個未満である場合にのみ行える（すなわち、カゴの中に <var>K+1</var> 個以上のボールを入れることはできない）。</li>\n<li>ゴール頂点が <var>v</var> であり、今カゴの中に入っているようなボールを <var>1</var> つ選んでカゴから取り出し、頂点 <var>v</var> に置く。</li>\n</ul>\n</li>\n</ul>\n<p>全ての操作が終了した時点で、カゴは空の状態で頂点 <var>1</var> に置かれており、ボールはそれぞれのゴール頂点に置かれているような操作列を<strong>良い操作列</strong>と呼びます。</p>\n<p>カゴを何度も動かすのは疲れるので、カゴが動く経路は、全ての辺をちょうど <var>2</var> 回ずつ通り頂点 <var>1</var> に戻ってくるようなものに限定したいです。\nそのような経路のうち、その経路に従ってカゴを動かす良い操作列が存在するようなものの数を <var>998244353</var> で割った余りを求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2\\leq N \\leq 10^4</var></li>\n<li><var>1\\leq M \\leq 2\\times 10^5</var></li>\n<li><var>1\\leq K \\leq 10^3</var></li>\n<li><var>1\\leq P_i \\leq i</var></li>\n<li>全ての <var>v\\ (1\\leq v \\leq N)</var> について、<var>P_i=v</var> を満たす <var>i</var> の数は高々 <var>2</var> 個</li>\n<li><var>1\\leq S_j, T_j \\leq N</var></li>\n<li><var>S_j \\neq T_j</var></li>\n<li>入力は全て整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var> <var>K</var>\n<var>P_1</var> <var>P_2</var> <var>\\dots</var> <var>P_{N-1}</var>\n<var>S_1</var> <var>T_1</var>\n<var>S_2</var> <var>T_2</var>\n<var>\\vdots</var>\n<var>S_M</var> <var>T_M</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>全ての辺をちょうど <var>2</var> 回ずつ通り頂点 <var>1</var> に戻ってくるような経路のうち、その経路に従ってカゴを動かす良い操作列が存在するようなものの数を <var>998244353</var> で割った余りを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5 2 1\n1 1 3 3\n2 4\n5 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1\n</pre>\n\n<p>与えられるグラフは以下の図の通りです。頂点の側に書かれた丸と四角は、それぞれその番号のボールのスタート頂点とゴール頂点を表します。</p>\n<p><img src=\"https://img.atcoder.jp/abc329/afa9812169c0c570270c32e5aa1c814a.jpg\"></p>\n<p>全ての辺をちょうど <var>2</var> 回ずつ通り頂点 <var>1</var> に戻ってくるような経路のうち、その経路に従ってカゴを動かす良い操作列が存在するようなものは以下の <var>1</var> 通りのみです。</p>\n<p><img src=\"https://img.atcoder.jp/abc329/b80e2b20635a90cf935fa4bbc89872fd.jpg\"></p>\n<p>具体的には、以下のような良い操作列を構成できます。</p>\n<ol>\n<li>カゴを頂点 <var>2</var> に動かす。</li>\n<li>ボール <var>1</var> をカゴに入れる。</li>\n<li>カゴを頂点 <var>1</var> に動かす。</li>\n<li>カゴを頂点 <var>3</var> に動かす。</li>\n<li>カゴを頂点 <var>4</var> に動かす。</li>\n<li>ボール <var>1</var> をカゴから出して頂点 <var>4</var> に置く。</li>\n<li>カゴを頂点 <var>3</var> に動かす。</li>\n<li>カゴを頂点 <var>5</var> に動かす。</li>\n<li>ボール <var>2</var> をカゴに入れる。</li>\n<li>カゴを頂点 <var>3</var> に動かす。</li>\n<li>ボール <var>2</var> をカゴから出して頂点 <var>3</var> に置く。</li>\n<li>カゴを頂点 <var>1</var> に動かす。</li>\n</ol>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5 2 2\n1 1 3 3\n2 4\n5 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>2\n</pre>\n\n<p>入出力例 1 から <var>K</var> の値が <var>1</var> 増えています。\nこれにより、上述した経路に加えて、以下の経路についても良い操作列を構成できるようになります。</p>\n<p><img src=\"https://img.atcoder.jp/abc329/31ce5331d578d5f2d0c0fe86751fd60d.jpg\"></p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>15 4 2\n1 2 1 4 2 3 4 7 3 7 5 9 11 8\n14 12\n5 4\n13 15\n5 12\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>8\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>625</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>You are given a binary tree with <var>N</var> vertices. The vertices are numbered <var>1</var> to <var>N</var>, with vertex <var>1</var> being the root. The <var>i</var>-th edge <var>(1\\leq i \\leq N-1)</var> connects vertex <var>i+1</var> and vertex <var>P_i\\ (\\leq i)</var> bidirectionally.</p>\n<p>There are one basket and <var>M</var> balls on this tree. The balls are numbered <var>1</var> to <var>M</var>, and each ball <var>j</var> has a designated <strong>start vertex</strong> <var>S_j</var> and <strong>goal vertex</strong> <var>T_j</var>. Initially, the basket is empty and placed at vertex <var>1</var>, and the balls are placed at their respective start vertices.</p>\n<p>You can perform the following operation any number of times in any order.</p>\n<ul>\n<li>Let <var>v</var> be the current vertex where the basket is placed. Do one of the following:<ul>\n<li>Choose one edge connected to vertex <var>v</var>, and move the basket along that edge to the adjacent vertex. The balls inside the basket move together with it.</li>\n<li>Choose a ball with the start vertex <var>v</var> that is still placed at <var>v</var>, and put it into the basket. This operation can only be performed if the basket contains fewer than <var>K</var> balls (that is, the basket cannot contain <var>K+1</var> or more balls).</li>\n<li>Choose a ball with the goal vertex <var>v</var> from the basket and take it out, placing it at vertex <var>v</var>.</li>\n</ul>\n</li>\n</ul>\n<p>A sequence of operations is called a <strong>good operation sequence</strong> if and only if the basket is eventually empty and placed at vertex <var>1</var>, and the balls are eventually placed at their respective goal vertices.</p>\n<p>Since it is tiring to move the basket many times, the basket's movement path should traverse each edge exactly twice before returning to vertex <var>1</var>. Find the number, modulo <var>998244353</var>, of those paths such that a good operation sequence exists following that path.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2\\leq N \\leq 10^4</var></li>\n<li><var>1\\leq M \\leq 2\\times 10^5</var></li>\n<li><var>1\\leq K \\leq 10^3</var></li>\n<li><var>1\\leq P_i \\leq i</var></li>\n<li>For every <var>v\\ (1\\leq v \\leq N)</var>, there are at most two <var>i</var>'s such that <var>P_i=v</var>.</li>\n<li><var>1\\leq S_j, T_j \\leq N</var></li>\n<li><var>S_j \\neq T_j</var></li>\n<li>All input values are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var> <var>K</var>\n<var>P_1</var> <var>P_2</var> <var>\\dots</var> <var>P_{N-1}</var>\n<var>S_1</var> <var>T_1</var>\n<var>S_2</var> <var>T_2</var>\n<var>\\vdots</var>\n<var>S_M</var> <var>T_M</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the number, modulo <var>998244353</var>, of paths traversing every edge exactly twice before returning to vertex <var>1</var> such that a good operation sequence exists following that path.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5 2 1\n1 1 3 3\n2 4\n5 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1\n</pre>\n\n<p>The given graph is shown in the figure below. The circles and squares written next to the vertices represent the start and goal vertices of the balls, respectively.</p>\n<p><img src=\"https://img.atcoder.jp/abc329/afa9812169c0c570270c32e5aa1c814a.jpg\"></p>\n<p>Among the paths where every edge is traversed exactly twice before returning to vertex <var>1</var>, there is only one path such that a good operation sequence exists following that path, which is shown below:</p>\n<p><img src=\"https://img.atcoder.jp/abc329/b80e2b20635a90cf935fa4bbc89872fd.jpg\"></p>\n<p>Here, you can construct the following good operation sequence:</p>\n<ol>\n<li>Move the basket to vertex <var>2</var>.</li>\n<li>Put ball <var>1</var> into the basket.</li>\n<li>Move the basket to vertex <var>1</var>.</li>\n<li>Move the basket to vertex <var>3</var>.</li>\n<li>Move the basket to vertex <var>4</var>.</li>\n<li>Take ball <var>1</var> out of the basket and place it at vertex <var>4</var>.</li>\n<li>Move the basket to vertex <var>3</var>.</li>\n<li>Move the basket to vertex <var>5</var>.</li>\n<li>Put ball <var>2</var> into the basket.</li>\n<li>Move the basket to vertex <var>3</var>.</li>\n<li>Take ball <var>2</var> out of the basket and place it at vertex <var>3</var>.</li>\n<li>Move the basket to vertex <var>1</var>.</li>\n</ol>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5 2 2\n1 1 3 3\n2 4\n5 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>2\n</pre>\n\n<p>The value of <var>K</var> has increased by <var>1</var> from Sample Input 1. This allows you to construct a good operation sequence for the following path, in addition to the one illustrated above.</p>\n<p><img src=\"https://img.atcoder.jp/abc329/31ce5331d578d5f2d0c0fe86751fd60d.jpg\"></p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>15 4 2\n1 2 1 4 2 3 4 7 3 7 5 9 11 8\n14 12\n5 4\n13 15\n5 12\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>8\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc329/tasks/abc329_g"}