{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>400</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 個の町が一直線上に並んでいます。行商人の高橋君は町 <var>1</var> から出発し、リンゴの売買をしながら町 <var>N</var> へと向かいます。</p>\n<p>はじめ高橋君は町 <var>1</var> におり、リンゴを <var>1</var> つも持っていません。高橋君は次のいずれかの行動を繰り返し行います。</p>\n<ul>\n<li>移動: 町 <var>i</var> (<var>i &lt; N</var>) にいるとき、町 <var>i + 1</var> へ移動する。</li>\n<li>リンゴの売買: リンゴを好きな個数だけ売買する。ここで、町 <var>i</var> (<var>1 ≦ i ≦ N</var>) ではリンゴの買値も売値もともに <var>A_i</var> 円とする。ここで <var>A_i</var> は相異なる整数です。</li>\n</ul>\n<p><var>1</var> つの町で売買するリンゴの個数に制限はありませんが、旅の中で売買するリンゴの個数は合計で (買う個数と売る個数を合わせて) <var>T</var> 個以下にしなくてはなりません。</p>\n<p>高橋君は旅の利益、すなわちリンゴを売った代金から買った代金を引いた値を最大にするように旅をするとします。旅が終わったときに持っていたリンゴの価値は考えず、旅の中で売買した金額だけを考えます。</p>\n<p>この旅に先立って、青木君は任意の町 <var>i</var> に対して <var>A_i</var> を好きな非負整数 <var>A_i'</var> に変えるという操作を好きなだけ行うことができます。ただし、この操作は行うごとに <var>|A_i - A_i'|</var> のコストがかかります。操作後には異なる町の間でリンゴの値段が同じになっていても構いません。</p>\n<p>青木君の目的はできるだけ少ない合計コストの操作で高橋君の利益を少なくとも <var>1</var> 円下げることです。合計コストの最小値を求めてください。</p>\n<p>ただし、元の状態で高橋君が <var>1</var> 円以上の利益を上げられることは仮定して構いません。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 ≦ N ≦ 10^5</var></li>\n<li><var>1 ≦ A_i ≦ 10^9</var> (<var>1 ≦ i ≦ N</var>)</li>\n<li><var>A_i</var> は相異なる</li>\n<li><var>2 ≦ T ≦ 10^9</var></li>\n<li>入力の状態では高橋君は <var>1</var> 円以上の利益を上げられることが保証される</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>T</var>\n<var>A_1</var> <var>A_2</var> <var>...</var> <var>A_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>高橋君の収益を少なくとも <var>1</var> 円下げるために必要な合計コストの最小値を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3 2\n100 50 200\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>1\n</pre>\n\n<p>この入力の状態では、高橋君は次のようにして最大の利益である <var>150</var> 円を達成することができます。</p>\n<ol>\n<li>町 <var>1</var> から町 <var>2</var> へ移動する。</li>\n<li>町 <var>2</var> で <var>50</var> 円を支払い、リンゴを <var>1</var> 個買う。</li>\n<li>町 <var>2</var> から町 <var>3</var> へ移動する。</li>\n<li>町 <var>3</var> で <var>200</var> 円でリンゴを <var>1</var> 個売る。</li>\n</ol>\n<p>たとえば、青木君が町 <var>2</var> のリンゴの値段を <var>50</var> 円から <var>51</var> 円に変えると、高橋君はどのようにしても <var>150</var> 円の利益を上げることができなくなります。すなわち、コスト <var>1</var> で高橋君の利益を少なくとも <var>1</var> 円下げることが可能であり、答えは <var>1</var> となります。</p>\n<p>他にも、町 <var>3</var> のリンゴの値段を <var>200</var> 円から <var>199</var> 円に変えることでもコスト <var>1</var> で高橋君の利益を下げることが可能です。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5 8\n50 30 40 10 20\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>2\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>10 100\n7 10 4 5 9 3 6 8 2 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>2\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>400</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There are <var>N</var> towns located in a line, conveniently numbered <var>1</var> through <var>N</var>. Takahashi the merchant is going on a travel from town <var>1</var> to town <var>N</var>, buying and selling apples.</p>\n<p>Takahashi will begin the travel at town <var>1</var>, with no apple in his possession. The actions that can be performed during the travel are as follows:</p>\n<ul>\n<li><em>Move</em>: When at town <var>i</var> (<var>i &lt; N</var>), move to town <var>i + 1</var>.</li>\n<li><em>Merchandise</em>: Buy or sell an arbitrary number of apples at the current town. Here, it is assumed that one apple can always be bought and sold for <var>A_i</var> yen (the currency of Japan) at town <var>i</var> (<var>1 ≦ i ≦ N</var>), where <var>A_i</var> are distinct integers. Also, you can assume that he has an infinite supply of money.</li>\n</ul>\n<p>For some reason, there is a constraint on merchandising apple during the travel: the sum of the number of apples bought and the number of apples sold during the whole travel, must be at most <var>T</var>. (Note that a single apple can be counted in both.)</p>\n<p>During the travel, Takahashi will perform actions so that the <em>profit</em> of the travel is maximized. Here, the profit of the travel is the amount of money that is gained by selling apples, minus the amount of money that is spent on buying apples. Note that we are not interested in apples in his possession at the end of the travel.</p>\n<p>Aoki, a business rival of Takahashi, wants to trouble Takahashi by manipulating the market price of apples. Prior to the beginning of Takahashi's travel, Aoki can change <var>A_i</var> into another arbitrary non-negative integer <var>A_i'</var> for any town <var>i</var>, any number of times. The cost of performing this operation is <var>|A_i - A_i'|</var>. After performing this operation, different towns may have equal values of <var>A_i</var>.</p>\n<p>Aoki's objective is to decrease Takahashi's expected profit by at least <var>1</var> yen. Find the minimum total cost to achieve it. You may assume that Takahashi's expected profit is initially at least <var>1</var> yen.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 ≦ N ≦ 10^5</var></li>\n<li><var>1 ≦ A_i ≦ 10^9</var> (<var>1 ≦ i ≦ N</var>)</li>\n<li><var>A_i</var> are distinct.</li>\n<li><var>2 ≦ T ≦ 10^9</var></li>\n<li>In the initial state, Takahashi's expected profit is at least <var>1</var> yen.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>T</var>\n<var>A_1</var> <var>A_2</var> <var>...</var> <var>A_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the minimum total cost to decrease Takahashi's expected profit by at least <var>1</var> yen.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3 2\n100 50 200\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>1\n</pre>\n\n<p>In the initial state, Takahashi can achieve the maximum profit of <var>150</var> yen as follows:</p>\n<ol>\n<li>Move from town <var>1</var> to town <var>2</var>.</li>\n<li>Buy one apple for <var>50</var> yen at town <var>2</var>.</li>\n<li>Move from town <var>2</var> to town <var>3</var>.</li>\n<li>Sell one apple for <var>200</var> yen at town <var>3</var>.</li>\n</ol>\n<p>If, for example, Aoki changes the price of an apple at town <var>2</var> from <var>50</var> yen to <var>51</var> yen, Takahashi will not be able to achieve the profit of <var>150</var> yen. The cost of performing this operation is <var>1</var>, thus the answer is <var>1</var>.</p>\n<p>There are other ways to decrease Takahashi's expected profit, such as changing the price of an apple at town <var>3</var> from <var>200</var> yen to <var>199</var> yen.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5 8\n50 30 40 10 20\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>2\n</pre>\n\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>10 100\n7 10 4 5 9 3 6 8 2 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>2\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc047/tasks/arc063_b"}