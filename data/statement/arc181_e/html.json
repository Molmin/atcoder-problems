{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1000</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>各頂点に番号が付いた無向グラフのうち、以下の条件を満たす全域木 <var>T</var> が取れるグラフを<b>良いグラフ</b>といいます。なお、 <var>2</var> 頂点 <var>u,v\\ (u &lt; v)</var> を結ぶ辺を辺 <var>(u,v)</var> と表記します。</p>\n<ul>\n<li>グラフのすべての辺 <var>(u,v)\\ (u &lt; v)</var> に対し、 <var>T</var> 上で頂点 <var>u,v</var> を結ぶただ <var>1</var> つの単純パスについて、単純パス上の頂点の番号の最小値、最大値はそれぞれ <var>u,v</var> である。</li>\n</ul>\n<p><var>1</var> から <var>N</var> までの番号が付いた <var>N</var> 頂点からなる単純連結無向グラフ <var>G</var> があります。グラフ <var>G</var> には辺が <var>M</var> 本あり、 <var>i</var> 番目の辺は頂点 <var>A_i,B_i\\ (A_i &lt; B_i)</var> を結びます。</p>\n<p>各 <var>i=1,2,\\dots,M</var> に対し、 <var>G</var> から <var>i</var> 番目の辺を取り除いて得られるグラフが<b>良いグラフ</b>であるか判定してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2\\leq N \\leq 2\\times 10^5</var></li>\n<li><var>N-1 \\leq M \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq A_i &lt; B_i \\leq N</var></li>\n<li>入力される値はすべて整数</li>\n<li>与えられるグラフは単純連結無向グラフ</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var>\n<var>A_1</var> <var>B_1</var>\n<var>\\vdots</var>\n<var>A_M</var> <var>B_M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>M</var> 行出力せよ。<var>i</var> 行目には <var>G</var> から <var>i</var> 番目の辺を取り除いて得られるグラフ<b>良いグラフ</b>である場合は <code>Yes</code> を、そうでない場合は <code>No</code> を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>6 9\n1 3\n1 5\n2 5\n2 6\n3 4\n3 5\n3 6\n4 6\n5 6\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>No\nNo\nNo\nNo\nYes\nNo\nNo\nYes\nYes\n</pre>\n<p>辺 <var>(4,6)</var> が削除された場合について、辺 <var>(1,3),(2,5),(3,4),(3,5),(5,6)</var> からなる全域木を考えてみます。例えば辺 <var>(3,6)</var> に対し、頂点 <var>3,6</var> を結ぶ単純パスは頂点 <var>3,5,6</var> をこの順にたどるパスであり、単純パス上の頂点の番号の最小値、最大値はそれぞれ <var>3,6</var> であるため条件を満たします。その他の辺についても同じように確認すると、この全域木は条件を満たしていることが分かります。よって答えは <code>Yes</code> となります。</p>\n<p>一方辺 <var>(1,5)</var> が削除された場合について、同じ全域木が条件を満たすか考えてみます。辺 <var>(4,6)</var> に対し、頂点 <var>4,6</var> を結ぶ単純パスは頂点 <var>4,3,5,6</var> をこの順にたどるパスであり、単純パス上の頂点の番号の最小値、最大値はそれぞれ <var>3,6</var> であるため条件を満たしません。その他の全域木についても条件を満たさないことが示せるため、答えは <code>No</code> となります。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>5 4\n1 2\n2 3\n3 4\n4 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>No\nNo\nNo\nNo\n</pre>\n<p>辺の除去によりグラフが連結でなくなることもあります。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>15 20\n12 13\n7 8\n5 7\n8 10\n9 12\n4 5\n11 12\n2 4\n6 8\n4 14\n1 2\n14 15\n2 9\n3 8\n2 15\n10 11\n13 14\n8 9\n7 14\n5 13\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>No\nNo\nNo\nYes\nYes\nNo\nYes\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nNo\nNo\nNo\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1000</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>An undirected graph with numbered vertices is called a <b>good graph</b> if it has a spanning tree <var>T</var> that satisfies the following condition. Here, an edge connecting two vertices <var>u</var> and <var>v</var> <var>(u &lt; v)</var> is denoted as edge <var>(u,v)</var>.</p>\n<ul>\n<li>For every edge <var>(u,v)</var> <var>(u &lt; v)</var> in the graph, the minimum and maximum vertex numbers on the unique simple path connecting vertices <var>u</var> and <var>v</var> in <var>T</var> are <var>u</var> and <var>v</var>, respectively.</li>\n</ul>\n<p>You are given a simple connected undirected graph <var>G</var> with <var>N</var> vertices numbered from <var>1</var> to <var>N</var>. The graph <var>G</var> has <var>M</var> edges, and the <var>i</var>-th edge connects vertices <var>A_i</var> and <var>B_i</var> <var>(A_i &lt; B_i)</var>.</p>\n<p>For each <var>i=1,2,\\dots,M</var>, determine whether the graph obtained by removing the <var>i</var>-th edge from <var>G</var> is a <b>good graph</b>.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>N-1 \\leq M \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq A_i &lt; B_i \\leq N</var></li>\n<li>All input values are integers.</li>\n<li>The given graph is a simple connected undirected graph.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>The input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var>\n<var>A_1</var> <var>B_1</var>\n<var>\\vdots</var>\n<var>A_M</var> <var>B_M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print <var>M</var> lines. The <var>i</var>-th line should contain <code>Yes</code> if the graph obtained by removing the <var>i</var>-th edge from <var>G</var> is a <b>good graph</b>, and <code>No</code> otherwise.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>6 9\n1 3\n1 5\n2 5\n2 6\n3 4\n3 5\n3 6\n4 6\n5 6\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>No\nNo\nNo\nNo\nYes\nNo\nNo\nYes\nYes\n</pre>\n<p>Consider the case where edge <var>(4,6)</var> is removed. A spanning tree formed by edges <var>(1,3),(2,5),(3,4),(3,5),(5,6)</var> satisfies the condition. For example, for edge <var>(3,6)</var>, the simple path connecting vertices <var>3</var> and <var>6</var> traverses vertices <var>3,5,6</var> in this order, and the minimum and maximum vertex numbers on the path are <var>3</var> and <var>6</var>, respectively, thus satisfying the condition. By verifying the other edges similarly, it can be seen that this spanning tree satisfies the condition, so the answer is <code>Yes</code>.</p>\n<p>On the other hand, consider the case where edge <var>(1,5)</var> is removed. The same spanning tree does not satisfy the condition. For edge <var>(4,6)</var>, the simple path connecting vertices <var>4</var> and <var>6</var> traverses vertices <var>4,3,5,6</var> in this order, and the minimum and maximum vertex numbers on the path are <var>3</var> and <var>6</var>, respectively, thus not satisfying the condition. It can also be shown that no other spanning tree satisfies the condition, so the answer is <code>No</code>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>5 4\n1 2\n2 3\n3 4\n4 5\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>No\nNo\nNo\nNo\n</pre>\n<p>Removing an edge may disconnect the graph.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>15 20\n12 13\n7 8\n5 7\n8 10\n9 12\n4 5\n11 12\n2 4\n6 8\n4 14\n1 2\n14 15\n2 9\n3 8\n2 15\n10 11\n13 14\n8 9\n7 14\n5 13\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>No\nNo\nNo\nYes\nYes\nNo\nYes\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nNo\nNo\nNo\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/arc181/tasks/arc181_e"}