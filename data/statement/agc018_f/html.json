{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>1700</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点からなる根付き木が <var>2</var> つあります。\nどちらの木の頂点も、それぞれ <var>1</var> から <var>N</var> の番号がついています。\n<var>1</var> つめの木の 頂点 <var>i</var> の親は <var>A_i</var> です。\nなお、頂点 <var>i</var> が根のときは、<var>A_i=-1</var>です。\n<var>2</var> つめの木の 頂点 <var>i</var> の親は <var>B_i</var> です。\nなお、頂点 <var>i</var> が根のときは、<var>B_i=-1</var>です。</p>\n<p>すぬけ君は、長さ <var>N</var> の整数列 <var>X_1</var> , <var>X_2</var> , <var>...</var> , <var>X_N</var> であって、次の条件を満たすものを求めたいです。</p>\n<ul>\n<li>どちらの木のどの頂点についても、その頂点とその子孫の頂点の番号を <var>a_1</var> , <var>a_2</var> , <var>...</var> , <var>a_k</var> としたとき、\n<var>abs(X_{a_1} + X_{a_2} + ... + X_{a_k})=1</var> が成り立つ。</li>\n</ul>\n<p>条件を満たす整数列を作ることができるか判定し、存在するならば <var>1</var> つ求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq N \\leq 10^5</var></li>\n<li><var>1 \\leq A_i \\leq N</var> (頂点 <var>i</var> が <var>1</var> つ目の木の根でないとき)</li>\n<li><var>A_i = -1</var> (頂点 <var>i</var> が <var>1</var> つ目の木の根のとき)</li>\n<li><var>1 \\leq B_i \\leq N</var> (頂点 <var>i</var> が <var>2</var> つ目の木の根でないとき)</li>\n<li><var>B_i = -1</var> (頂点 <var>i</var> が <var>2</var> つ目の木の根のとき)</li>\n<li>入力はvalidな根付き木である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>A_1</var> <var>A_2</var> <var>..</var> <var>A_N</var>\n<var>B_1</var> <var>B_2</var> <var>..</var> <var>B_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>条件を満たす整数列を作ることができない場合は、<code>IMPOSSIBLE</code> と出力せよ。\n作ることができる場合は、まず <var>1</var> 行目に、<code>POSSIBLE</code> と出力せよ。\n続いて、<var>2</var> 行目には条件を満たす整数列　<var>X_1</var> , <var>X_2</var> , <var>...</var> , <var>X_N</var> を空白区切りで出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5\n3 3 4 -1 4\n4 4 1 -1 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>POSSIBLE\n1 -1 -1 3 -1\n</pre>\n\n<p>例えば、<var>1</var> つ目の木の頂点 <var>3</var> について見てみると、その頂点と子孫の頂点の番号は、<var>3,1,2</var> となっています。\n出力例のように整数列を設定すると、<var>abs(X_3+X_1+X_2)=abs((-1)+(1)+(-1))=abs(-1)=1</var> となっており、問題ありません。\n他の頂点についても同じように確かめると、確かに出力例の整数列は条件を満たしています。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>6\n-1 5 1 5 1 3\n6 5 5 3 -1 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>IMPOSSIBLE\n</pre>\n\n<p>この例では、どうやっても条件を満たす整数列は作れません。\nよって、この例の答えは <code>IMPOSSIBLE</code> になります。</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>8\n2 7 1 2 2 1 -1 4\n4 -1 4 7 4 4 2 4\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>POSSIBLE\n1 2 -1 0 -1 1 0 -1\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>1700</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>There are two rooted trees, each with <var>N</var> vertices.\nThe vertices of each tree are numbered <var>1</var> through <var>N</var>.\nIn the first tree, the parent of Vertex <var>i</var> is Vertex <var>A_i</var>.\nHere, <var>A_i=-1</var> if Vertex <var>i</var> is the root of the first tree.\nIn the second tree, the parent of Vertex <var>i</var> is Vertex <var>B_i</var>.\nHere, <var>B_i=-1</var> if Vertex <var>i</var> is the root of the second tree.</p>\n<p>Snuke would like to construct an integer sequence of length <var>N</var>, <var>X_1</var> , <var>X_2</var> , <var>...</var> , <var>X_N</var>, that satisfies the following condition:</p>\n<ul>\n<li>For each vertex on each tree, let the indices of its descendants including itself be <var>a_1</var> , <var>a_2</var> , <var>...</var>, <var>a_k</var>. Then, <var>abs(X_{a_1} + X_{a_2} + ... + X_{a_k})=1</var> holds.</li>\n</ul>\n<p>Determine whether it is possible to construct such a sequence. If the answer is possible, find one such sequence.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N \\leq 10^5</var></li>\n<li><var>1 \\leq A_i \\leq N</var>, if Vertex <var>i</var> is not the root in the first tree.</li>\n<li><var>A_i = -1</var>, if Vertex <var>i</var> is the root in the first tree.</li>\n<li><var>1 \\leq B_i \\leq N</var>, if Vertex <var>i</var> is not the root in the second tree.</li>\n<li><var>B_i = -1</var>, if Vertex <var>i</var> is the root in the second tree.</li>\n<li>Input corresponds to valid rooted trees.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>A_1</var> <var>A_2</var> <var>..</var> <var>A_N</var>\n<var>B_1</var> <var>B_2</var> <var>..</var> <var>B_N</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If it is not possible to construct an integer sequence that satisfies the condition, print <code>IMPOSSIBLE</code>.\nIf it is possible, print <code>POSSIBLE</code> in the first line.\nThen, in the second line, print <var>X_1</var> , <var>X_2</var> , <var>...</var> , <var>X_N</var>, an integer sequence that satisfies the condition.</p>\n</section>\n</div>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5\n3 3 4 -1 4\n4 4 1 -1 1\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>POSSIBLE\n1 -1 -1 3 -1\n</pre>\n\n<p>For example, the indices of the descendants of Vertex <var>3</var> of the first tree including itself, is <var>3,1,2</var>.\nIt can be seen that the sample output holds <var>abs(X_3+X_1+X_2)=abs((-1)+(1)+(-1))=abs(-1)=1</var>.\nSimilarly, the condition is also satisfied for other vertices.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>6\n-1 5 1 5 1 3\n6 5 5 3 -1 3\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>IMPOSSIBLE\n</pre>\n\n<p>In this case, constructing a sequence that satisfies the condition is <code>IMPOSSIBLE</code>.</p>\n</section>\n</div>\n\n<hr>\n\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>8\n2 7 1 2 2 1 -1 4\n4 -1 4 7 4 4 2 4\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>POSSIBLE\n1 2 -1 0 -1 1 0 -1\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc018/tasks/agc018_f"}