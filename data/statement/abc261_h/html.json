{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>600</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p><var>N</var> 頂点 <var>M</var> 辺の有向グラフがあります。辺 <var>i</var> は頂点 <var>A_i</var> から <var>B_i</var> への有向辺で、重みが <var>C_i</var> です。</p>\n<p>最初、頂点 <var>v</var> に駒が置かれています。高橋君と青木君が交互に次のように駒を動かすゲームを行います。</p>\n<ul>\n<li>駒が置かれている頂点から出る辺が存在しないとき、ゲームを終了する。</li>\n<li>駒が置かれている頂点から出る辺が存在するとき、そのうちいずれかの辺を選び、選んだ辺に沿って駒を移動する。</li>\n</ul>\n<p>ゲームは高橋君から始め、高橋君はゲームが終了するまでに通った辺の重みの和を小さくしようとし、青木君は大きくしようとします。<br>\n<var>2</var> 人が目指すものはより厳密には、次の通りです。<br>\n高橋君は、ゲームを有限回の操作で終了させることを最優先し、それが可能ならば、ゲームが終了するまでに通る辺の重みの和を小さくしようとします。<br>\n青木君は、ゲームを有限回の操作で終了させないことを最優先し、それが不可能ならば、ゲームが終了するまでに通る辺の重みの和を大きくしようとします。<br>\n（駒が同じ辺を複数回通った場合は、重みはその回数だけ加算されるものとします。）</p>\n<p><var>2</var> 人が最善を尽くしたときゲームが有限回の操作で終了するか判定し、終了するならば、ゲームが終了するまでに通る辺の重みの和を求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq N \\leq 2\\times 10^5</var></li>\n<li><var>0 \\leq M \\leq 2\\times 10^5</var></li>\n<li><var>1 \\leq v \\leq N</var></li>\n<li><var>1 \\leq A_i,B_i \\leq N</var></li>\n<li>多重辺は存在しない。すなわち <var>i\\neq j</var> のとき <var>(A_i,B_i)\\neq(A_j,B_j)</var></li>\n<li>自己辺は存在しない。すなわち <var>A_i\\neq B_i</var></li>\n<li><var>0 \\leq C_i \\leq 10^9</var></li>\n<li>入力に含まれる値は全て整数</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var> <var>v</var>\n<var>A_1</var> <var>B_1</var> <var>C_1</var>\n<var>A_2</var> <var>B_2</var> <var>C_2</var>\n<var>\\vdots</var>\n<var>A_M</var> <var>B_M</var> <var>C_M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p><var>2</var> 人が最善を尽くしたとき、ゲームが有限回の操作で終了しないならば <code>INFINITY</code> と出力せよ。<br>\n有限回の操作で終了するならば、ゲームが終了するまでに通る辺の重みの和を出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>7 6 1\n1 2 1\n1 3 10\n2 4 100\n2 5 102\n3 6 20\n3 7 30\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>40\n</pre>\n<p>まず高橋君は頂点 <var>3</var> に駒を動かし、次に青木君が頂点 <var>7</var> に駒を動かし、ゲームが終了します。<br>\nゲームが終了するまでに通る辺の重みの和は <var>10+30=40</var> になります。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>3 6 3\n1 2 1\n2 1 2\n2 3 3\n3 2 4\n3 1 5\n1 3 6\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>INFINITY\n</pre>\n<p>有限回の操作でゲームは終了しません。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>4 4 1\n1 2 1\n2 3 1\n3 1 1\n2 4 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>5\n</pre>\n<p><var>1\\to 2 \\to 3 \\to 1 \\to 2\\to 4</var> と駒は動かされます。</p></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>600</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>We have a directed graph with <var>N</var> vertices and <var>M</var> edges. Edge <var>i</var> is directed from Vertex <var>A_i</var> to <var>B_i</var> and has a weight of <var>C_i</var>.</p>\n<p>Initially, there is a piece on Vertex <var>v</var>. Takahashi and Aoki will play a game where they alternate turns moving the piece as follows:</p>\n<ul>\n<li>If there is no edge that goes from the vertex on which the piece is placed, end the game.</li>\n<li>If there are edges that go from the vertex on which the piece is placed, choose one of those edges and move the piece along that edge.</li>\n</ul>\n<p>Takahashi goes first. Takahashi tries to minimize the total weight of the edges traversed by the piece, and Aoki tries to maximize it.<br>\nMore formally, their objectives are as follows.<br>\nTakahashi gives the first priority to ending the game in a finite number of moves. If this is possible, he tries to minimize the total weight of the edges traversed by the piece.<br>\nAoki gives the first priority to preventing the game from ending in a finite number of moves. If this is impossible, he tries to maximize the total weight of the edges traversed by the piece.<br>\n(If the piece traverses the same edge multiple times, the weight is added that number of times.)</p>\n<p>Determine whether the game ends in a finite number of moves when both players play optimally. If it ends, find the total weight of the edges traversed by the piece.  </p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N \\leq 2\\times 10^5</var></li>\n<li><var>0 \\leq M \\leq 2\\times 10^5</var></li>\n<li><var>1 \\leq v \\leq N</var></li>\n<li><var>1 \\leq A_i,B_i \\leq N</var></li>\n<li>There is no multi-edges. That is, <var>(A_i,B_i)\\neq(A_j,B_j)</var> for <var>i\\neq j</var>.</li>\n<li>There is no self-loops. That is, <var>A_i\\neq B_i</var>.</li>\n<li><var>0 \\leq C_i \\leq 10^9</var></li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var> <var>v</var>\n<var>A_1</var> <var>B_1</var> <var>C_1</var>\n<var>A_2</var> <var>B_2</var> <var>C_2</var>\n<var>\\vdots</var>\n<var>A_M</var> <var>B_M</var> <var>C_M</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If the game does not end in a finite number of moves when both players play optimally, print <code>INFINITY</code>.<br>\nIf the game ends in a finite number of moves, print the total weight of the edges traversed by the piece.  </p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>7 6 1\n1 2 1\n1 3 10\n2 4 100\n2 5 102\n3 6 20\n3 7 30\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>40\n</pre>\n<p>First, Takahashi will move the piece to Vertex <var>3</var>. Next, Aoki will move the piece to Vertex <var>7</var>, and the game will end.<br>\nThe total weight of the edges traversed by the piece will be <var>10+30=40</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>3 6 3\n1 2 1\n2 1 2\n2 3 3\n3 2 4\n3 1 5\n1 3 6\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>INFINITY\n</pre>\n<p>The game will not end in a finite number of moves.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>4 4 1\n1 2 1\n2 3 1\n3 1 1\n2 4 1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>5\n</pre>\n<p>The piece will go <var>1\\to 2 \\to 3 \\to 1 \\to 2\\to 4</var>.</p></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc261/tasks/abc261_h"}