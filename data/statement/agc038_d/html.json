{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>700</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>すぬけ君は、<var>0</var> から <var>N-1</var> までの番号のついた <var>N</var> 個の頂点と、<var>M</var> 本の辺からなる無向グラフをお母さんにもらいました。\nこのグラフは連結で、また、多重辺や自己ループは存在しませんでした。</p>\n<p>ある日、すぬけ君はこのグラフを壊してしまいました。\nしかし、すぬけ君はこのグラフについて、<var>Q</var> 個の情報を覚えています。\n<var>i</var> (<var>0 \\leq i \\leq Q-1</var>) 番目の情報は整数 <var>A_i,B_i,C_i</var> で表され、次のことを意味します。</p>\n<ul>\n<li><var>C_i=0</var> の時: 頂点 <var>A_i</var> から <var>B_i</var> に向かう単純パス（同じ頂点を <var>2</var> 度通らないパス）が、<var>1</var> つしか存在しない。</li>\n<li><var>C_i=1</var> の時: 頂点 <var>A_i</var> から <var>B_i</var> に向かう単純パスが <var>2</var> つ以上存在する。</li>\n</ul>\n<p>すぬけ君は自分の記憶に自信がないので、これら <var>Q</var> 個の情報に合致するグラフが存在するのかどうか心配になりました。\nすぬけくんの記憶に合致するグラフが存在するかどうか判定してください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>2 \\leq N \\leq 10^5</var></li>\n<li><var>N-1 \\leq M \\leq N \\times (N-1)/2</var></li>\n<li><var>1 \\leq Q \\leq 10^5</var></li>\n<li><var>0 \\leq A_i,B_i \\leq N-1</var></li>\n<li><var>A_i \\neq B_i</var></li>\n<li><var>0 \\leq C_i \\leq 1</var></li>\n<li>入力される値はすべて整数である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var> <var>M</var> <var>Q</var>\n<var>A_0</var> <var>B_0</var> <var>C_0</var>\n<var>A_1</var> <var>B_1</var> <var>C_1</var>\n<var>\\vdots</var>\n<var>A_{Q-1}</var> <var>B_{Q-1}</var> <var>C_{Q-1}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>すぬけくんの記憶に合致するグラフが存在する場合は <code>Yes</code>、そうでない場合は <code>No</code> と出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>5 5 3\n0 1 0\n1 2 1\n2 3 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>Yes\n</pre>\n\n<p>例えば、辺集合が <var>(0,1),(1,2),(1,4),(2,3),(2,4)</var> であるグラフを考えると、これは条件を満たします。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>4 4 3\n0 1 0\n1 2 1\n2 3 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>No\n</pre>\n\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>10 9 9\n7 6 0\n4 5 1\n9 7 0\n2 9 0\n2 3 0\n4 1 0\n8 0 0\n9 1 0\n3 0 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>No\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>700</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>Snuke's mother gave Snuke an undirected graph consisting of <var>N</var> vertices numbered <var>0</var> to <var>N-1</var> and <var>M</var> edges.\nThis graph was connected and contained no parallel edges or self-loops.</p>\n<p>One day, Snuke broke this graph.\nFortunately, he remembered <var>Q</var> clues about the graph.\nThe <var>i</var>-th clue (<var>0 \\leq i \\leq Q-1</var>) is represented as integers <var>A_i,B_i,C_i</var> and means the following:</p>\n<ul>\n<li>If <var>C_i=0</var>: there was exactly one simple path (a path that never visits the same vertex twice) from Vertex <var>A_i</var> to <var>B_i</var>.</li>\n<li>If <var>C_i=1</var>: there were two or more simple paths from Vertex <var>A_i</var> to <var>B_i</var>.</li>\n</ul>\n<p>Snuke is not sure if his memory is correct, and worried whether there is a graph that matches these <var>Q</var> clues.\nDetermine if there exists a graph that matches Snuke's memory.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>2 \\leq N \\leq 10^5</var></li>\n<li><var>N-1 \\leq M \\leq N \\times (N-1)/2</var></li>\n<li><var>1 \\leq Q \\leq 10^5</var></li>\n<li><var>0 \\leq A_i,B_i \\leq N-1</var></li>\n<li><var>A_i \\neq B_i</var></li>\n<li><var>0 \\leq C_i \\leq 1</var></li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var> <var>M</var> <var>Q</var>\n<var>A_0</var> <var>B_0</var> <var>C_0</var>\n<var>A_1</var> <var>B_1</var> <var>C_1</var>\n<var>\\vdots</var>\n<var>A_{Q-1}</var> <var>B_{Q-1}</var> <var>C_{Q-1}</var>\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>If there exists a graph that matches Snuke's memory, print <code>Yes</code>; otherwise, print <code>No</code>.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>5 5 3\n0 1 0\n1 2 1\n2 3 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>Yes\n</pre>\n\n<p>For example, consider a graph with edges <var>(0,1),(1,2),(1,4),(2,3),(2,4)</var>. This graph matches the clues.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>4 4 3\n0 1 0\n1 2 1\n2 3 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>No\n</pre>\n\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>10 9 9\n7 6 0\n4 5 1\n9 7 0\n2 9 0\n2 3 0\n4 1 0\n8 0 0\n9 1 0\n3 0 0\n</pre>\n\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>No\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/agc038/tasks/agc038_d"}