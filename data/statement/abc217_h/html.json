{"html":{"ja":"<span class=\"lang-ja\">\n<p>配点 : <var>600</var> 点</p>\n\n<div class=\"part\">\n<section>\n<h3>問題文</h3><p>AtCoder 社が開発したゲーム『スヌケトゥーン』は、プレイヤーがすぬけ君を操作して水鉄砲から飛んでくる水を回避するゲームです。</p>\n<p>ゲームのステージは無限に続く数直線からなり、ゲーム開始時点ですぬけ君は地点 <var>0</var> にいます。<br>\nゲーム開始直後から、すぬけ君は <var>1</var> 秒ごとに「 <var>1</var> 小さい地点に移動」「 <var>1</var> 大きい地点に移動」「動かない」の <var>3</var> 択から行動を選べます。より厳密には、すぬけ君がゲーム開始後 <var>t</var> 秒 <var>(t \\geq 0</var>, <var>t</var> は整数<var>)</var> の時点で地点 <var>p</var> にいるとき、 <var>t+1</var> 秒の時点では地点 <var>p-1</var> ・地点 <var>p</var> ・地点 <var>p+1</var> の <var>3</var> ヵ所のいずれかに行くことができます。  </p>\n<p>すぬけ君は水鉄砲から発射された水を浴びるとダメージを受けてしまいます。水鉄砲は <var>N</var> 回発射されて、 <var>i</var> 回目の発射は <var>T_i, D_i, X_i</var> を用いて次のように表されます。</p>\n<ul>\n<li>ゲーム開始から <var>T_i</var> 秒後に左右いずれかから水が発射されます。すぬけ君が <var>T_i</var> 秒の時点でいる地点を <var>p</var> としたとき、ダメージを受ける範囲および値は次の通りです。  <ul>\n<li><var>D_i = 0</var> のとき、<var>p \\lt X_i</var> の範囲にいると <var>X_i - p</var> のダメージを受ける。</li>\n<li><var>D_i = 1</var> のとき、<var>X_i \\lt p</var> の範囲にいると <var>p - X_i</var> のダメージを受ける。</li>\n</ul>\n</li>\n</ul>\n<p>プロゲーマーの高橋君は、攻略情報をツイートするために <var>N</var> 回目の水鉄砲の発射が終わった後のすぬけ君の合計ダメージを最小化することにしました。高橋君が合計ダメージを最小化するようにすぬけ君を操作したときの合計ダメージを求めてください。</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>制約</h3><ul>\n<li><var>1 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq T_1 \\lt T_2 \\lt \\dots \\lt T_N \\leq 10^9</var></li>\n<li><var>D_i</var> <var>(1 \\leq i \\leq N)</var> は <var>0</var> または <var>1</var></li>\n<li><var>-10^9 \\leq X_i \\leq 10^9</var> <var>(1 \\leq i \\leq N)</var></li>\n<li>入力は全て整数である。</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>入力</h3><p>入力は以下の形式で標準入力から与えられる。</p>\n<pre><var>N</var>\n<var>T_1</var> <var>D_1</var> <var>X_1</var>\n<var>T_2</var> <var>D_2</var> <var>X_2</var>\n<var>\\vdots</var>\n<var>T_N</var> <var>D_N</var> <var>X_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力</h3><p>高橋君が合計ダメージを最小化するようにすぬけ君を操作したときの合計ダメージを出力せよ。</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 1</h3><pre>3\n1 0 3\n3 1 0\n4 0 6\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 1</h3><pre>7\n</pre>\n<p>便宜上 <var>t</var> をゲーム開始から経過した秒数を表す変数とします。全ての水鉄砲の発射が終了するまでのすぬけ君の最適な動きは以下の通りです。</p>\n<ul>\n<li><var>t = 0</var> のときすぬけ君は地点 <var>0</var> にいます。すぬけ君は <var>1</var> 大きい地点に移動します。</li>\n<li><var>t = 1</var> のときすぬけ君は地点 <var>1</var> にいて、 <var>1</var> 回目の水鉄砲の発射により <var>2</var> のダメージを受けます。すぬけ君は <var>1</var> 小さい地点に移動します。</li>\n<li><var>t = 2</var> のときすぬけ君は地点 <var>0</var> にいます。すぬけ君は移動しません。</li>\n<li><var>t = 3</var> のときすぬけ君は地点 <var>0</var> にいて、 <var>2</var> 回目の水鉄砲の発射によるダメージを受けません。すぬけ君は <var>1</var> 大きい地点に移動します。</li>\n<li><var>t = 4</var> のときすぬけ君は地点 <var>1</var> にいて、 <var>3</var> 回目の水鉄砲の発射により <var>5</var> のダメージを受けます。</li>\n</ul>\n<p>このときすぬけ君は合計で <var>7</var> のダメージを受けるので、 <var>7</var> を出力します。</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 2</h3><pre>3\n1 0 1\n6 1 1\n8 0 -1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 2</h3><pre>0\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>入力例 3</h3><pre>5\n1 0 1000000000\n2 1 -1000000000\n3 0 1000000000\n4 1 -1000000000\n5 0 1000000000\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>出力例 3</h3><pre>4999999997\n</pre></section>\n</div>\n</span>","en":"<span class=\"lang-en\">\n<p>Score : <var>600</var> points</p>\n\n<div class=\"part\">\n<section>\n<h3>Problem Statement</h3><p>In a game called Snuketoon, developed by AtCoder, Inc., the player plays as Snuke to dodge water from water guns.</p>\n<p>The platform consists of an infinite number line, and Snuke is at the point <var>0</var> at the beginning of the game.<br>\nStarting from the beginning of the game, Snuke can make one of the three moves in each second: move <var>1</var> in the negative direction, move <var>1</var> in the positive direction, or remain still. More formally, if Snuke's position is <var>p</var> at <var>t</var> seconds (<var>t \\geq 0</var>, <var>t</var> is an integer) from the beginning of the game, his position at <var>t+1</var> seconds can be <var>p-1</var>, <var>p</var>, or <var>p+1</var>.</p>\n<p>Snuke takes damage from getting soaked by water guns. The water guns shoot <var>N</var> times, and the <var>i</var>-th shot is represented by <var>T_i</var>, <var>D_i</var>, and <var>X_i</var> as follows.</p>\n<ul>\n<li>At <var>T_i</var> seconds from the beginning of the game, water is shot from the left or right. Let <var>p</var> be Snuke's position at that time. He takes the following damage if he is in the following range.<ul>\n<li>When <var>D_i = 0</var>, he takes <var>X_i - p</var> points of damage if he is in the range <var>p \\lt X_i</var>.</li>\n<li>When <var>D_i = 1</var>, he takes <var>p - X_i</var> points of damage if he is in the range <var>X_i \\lt p</var>.</li>\n</ul>\n</li>\n</ul>\n<p>Takahashi, a pro gamer, wants to minimize the total damage taken by Snuke after the end of the <var>N</var>-th shot, to post a tweet on this game. Find the total damage taken by Snuke when the game is played to minimize it.</p>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Constraints</h3><ul>\n<li><var>1 \\leq N \\leq 2 \\times 10^5</var></li>\n<li><var>1 \\leq T_1 \\lt T_2 \\lt \\dots \\lt T_N \\leq 10^9</var></li>\n<li><var>D_i</var> <var>(1 \\leq i \\leq N)</var> is <var>0</var> or <var>1</var>.</li>\n<li><var>-10^9 \\leq X_i \\leq 10^9</var> <var>(1 \\leq i \\leq N)</var></li>\n<li>All values in input are integers.</li>\n</ul>\n</section>\n</div>\n\n<hr>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input</h3><p>Input is given from Standard Input in the following format:</p>\n<pre><var>N</var>\n<var>T_1</var> <var>D_1</var> <var>X_1</var>\n<var>T_2</var> <var>D_2</var> <var>X_2</var>\n<var>\\vdots</var>\n<var>T_N</var> <var>D_N</var> <var>X_N</var>\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Output</h3><p>Print the number of points of damage taken by Snuke when the game is played to minimize it.</p>\n</section>\n</div>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1</h3><pre>3\n1 0 3\n3 1 0\n4 0 6\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 1</h3><pre>7\n</pre>\n<p>For convenience, let <var>t</var> denote the number of seconds elapsed from the beginning of the game. The optimal course of movements for Snuke until all the shots are done is as follows.</p>\n<ul>\n<li>When <var>t = 0</var>, Snuke is at the point <var>0</var>. He moves <var>1</var> in the positive direction.</li>\n<li>When <var>t = 1</var>, Snuke is at the point <var>1</var> and takes <var>2</var> points of damage from the first shot. He moves <var>1</var> in the negative direction.</li>\n<li>When <var>t = 2</var>, Snuke is at the point <var>0</var>. He remains still.</li>\n<li>When <var>t = 3</var>, Snuke is at the point <var>0</var> and takes no damage from the second shot. He moves <var>1</var> in the positive direction.</li>\n<li>When <var>t = 4</var>, Snuke is at the point <var>1</var> and takes <var>5</var> points of damage from the third shot.</li>\n</ul>\n<p>Here, Snuke takes a total of <var>7</var> points of damage, so you should print <var>7</var>.</p>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2</h3><pre>3\n1 0 1\n6 1 1\n8 0 -1\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 2</h3><pre>0\n</pre>\n</section>\n</div>\n\n<hr>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3</h3><pre>5\n1 0 1000000000\n2 1 -1000000000\n3 0 1000000000\n4 1 -1000000000\n5 0 1000000000\n</pre>\n</section>\n</div>\n\n<div class=\"part\">\n<section>\n<h3>Sample Output 3</h3><pre>4999999997\n</pre></section>\n</div>\n</span>"},"endpoint":"https://atcoder.jp/contests/abc217/tasks/abc217_h"}